{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "67c38d46_c79c740a",
        "filename": "libs/binder/include/binder/Parcel.h",
        "patchSetId": 11
      },
      "lineNbr": 1007,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-12-14T21:30:16Z",
      "side": 1,
      "message": "nit: this is missing optimizations for some data types. For instance, byte[32] will be 32*4 bytes on the wire. Do we want to commit to this?",
      "range": {
        "startLine": 1004,
        "startChar": 0,
        "endLine": 1007,
        "endChar": 13
      },
      "revId": "e26e5ca587b47067fcf0f1cec257d2db6755afb3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2742077e_0729645b",
        "filename": "libs/binder/include/binder/Parcel.h",
        "patchSetId": 11
      },
      "lineNbr": 1007,
      "author": {
        "id": 1415877
      },
      "writtenOn": "2021-12-14T23:43:09Z",
      "side": 1,
      "message": "When T is one of int8_t/uint8_t/int32_t/int64_t/float/double, `is_pointer_equivalent_array_v` kicks in and write(void*, num_bytes) is called with array\u003cT,N\u003e::data() and N * sizeof(T). So, byte[32](AIDL, array\u003cuint8_t,32\u003e in C++) will be 32 bytes on the wire.\n\nThis fallback branch is for other types which don\u0027t have such optimization: bool, char16_t, parcelable, IBinder, (nested)array, etc.",
      "parentUuid": "67c38d46_c79c740a",
      "range": {
        "startLine": 1004,
        "startChar": 0,
        "endLine": 1007,
        "endChar": 13
      },
      "revId": "e26e5ca587b47067fcf0f1cec257d2db6755afb3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}