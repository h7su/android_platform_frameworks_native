{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "cde25faf_b8922f14",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1013508
      },
      "writtenOn": "2021-11-01T16:16:28Z",
      "side": 1,
      "message": "\"restorecons\"?",
      "range": {
        "startLine": 7,
        "startChar": 12,
        "endLine": 7,
        "endChar": 22
      },
      "revId": "a5a426a233e1ee35c7860ad897148ffcc346b44b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "24c28bbb_d605c7ec",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1884540
      },
      "writtenOn": "2021-11-03T16:19:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cde25faf_b8922f14",
      "range": {
        "startLine": 7,
        "startChar": 12,
        "endLine": 7,
        "endChar": 22
      },
      "revId": "a5a426a233e1ee35c7860ad897148ffcc346b44b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "640ad0e0_c6ce8fea",
        "filename": "cmds/installd/utils.h",
        "patchSetId": 1
      },
      "lineNbr": 153,
      "author": {
        "id": 1013508
      },
      "writtenOn": "2021-11-01T16:16:28Z",
      "side": 1,
      "message": "Hmm, I\u0027d prefer to not add this new class.\n\nCan you instead move the \"restorecon_app_data_lazy\" method into this utils.h/cpp location, and add the seinfo argument to the prepare_app_cache_dir() method below?  That should be enough for that method to internally call over to restorecon_app_data_lazy() when it knows the directory was created.",
      "range": {
        "startLine": 153,
        "startChar": 0,
        "endLine": 153,
        "endChar": 33
      },
      "revId": "a5a426a233e1ee35c7860ad897148ffcc346b44b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "25f68aa6_9515a359",
        "filename": "cmds/installd/utils.h",
        "patchSetId": 1
      },
      "lineNbr": 153,
      "author": {
        "id": 1884540
      },
      "writtenOn": "2021-11-01T16:23:37Z",
      "side": 1,
      "message": "The problem there is that prepare_app_cache_dir() is also called from dexopt.cpp which does not have any seinfo. Passing a null argument there and checking for a null seinfo (or adding another ideantifier to check for the client) felt equally bad and hence I relied on this response structure. WDYT?",
      "parentUuid": "640ad0e0_c6ce8fea",
      "range": {
        "startLine": 153,
        "startChar": 0,
        "endLine": 153,
        "endChar": 33
      },
      "revId": "a5a426a233e1ee35c7860ad897148ffcc346b44b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8baa0bea_92e5a9ec",
        "filename": "cmds/installd/utils.h",
        "patchSetId": 1
      },
      "lineNbr": 153,
      "author": {
        "id": 1013508
      },
      "writtenOn": "2021-11-15T15:09:56Z",
      "side": 1,
      "message": "I\u0027d still prefer to avoid the new object.\n\nIs it possible to add an overload like prepare_app_cache_dir_without_restorecon() for dexopt.cpp to use?",
      "parentUuid": "25f68aa6_9515a359",
      "range": {
        "startLine": 153,
        "startChar": 0,
        "endLine": 153,
        "endChar": 33
      },
      "revId": "a5a426a233e1ee35c7860ad897148ffcc346b44b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0def66be_6b7a12a3",
        "filename": "cmds/installd/utils.h",
        "patchSetId": 1
      },
      "lineNbr": 153,
      "author": {
        "id": 1013508
      },
      "writtenOn": "2021-11-16T20:26:42Z",
      "side": 1,
      "message": "Adding a bit more clarity, I was anticipating a CL with a method like this:\n\n  int prepare_app_cache_dir(const std::string\u0026 parent, const char* name, mode_t target_mode, uid_t uid, gid_t gid, const std::optional\u003cstd::string\u003e\u0026 seInfo);\n\nWhere the implementation would offer to apply a restorecon upon creation of a newly created directory when a seInfo was provided.  In the case of calls from dexopt, I was anticipating that they\u0027d be able to omit the std::optional\u003c\u003e argument, which would skip any offering of restorecon logic.",
      "parentUuid": "8baa0bea_92e5a9ec",
      "range": {
        "startLine": 153,
        "startChar": 0,
        "endLine": 153,
        "endChar": 33
      },
      "revId": "a5a426a233e1ee35c7860ad897148ffcc346b44b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b85f37cf_e2055eb6",
        "filename": "cmds/installd/utils.h",
        "patchSetId": 1
      },
      "lineNbr": 153,
      "author": {
        "id": 1884540
      },
      "writtenOn": "2021-12-01T15:07:03Z",
      "side": 1,
      "message": "There was another suggestion by jeffv@ regarding maintaining the order of restorecon operations that was done before i,e. maintaining the code-flow as follows:\n- Prepare parent dir\n- prepare cache dirs\n- Restorecon parent recursively\n- Restorecon cache dirs recursively if they have just been created\nThus restorecon on cache dirs would be done during the recursive restorecon on the parent directory, thereby saving some selabel lookups too (as the label on parent dir would be re-used). This would have resulted in some further changes in the code-flow if we were to follow the approach used in this CL. Hence, abandoning this CL in favour of a much cleaner approach here - https://android-review.googlesource.com/c/platform/frameworks/native/+/1906522",
      "parentUuid": "0def66be_6b7a12a3",
      "range": {
        "startLine": 153,
        "startChar": 0,
        "endLine": 153,
        "endChar": 33
      },
      "revId": "a5a426a233e1ee35c7860ad897148ffcc346b44b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}