{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "4c117b1e_547c19e8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-02-27T19:19:34Z",
      "side": 1,
      "message": "btw - these should still be being processed asynchronously. Did you identify what the strong cycle was from?",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 12,
        "endChar": 0
      },
      "revId": "ead5929208229f0ad0bb7ae38e235e42eb5f6088",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b81ca249_9857da4c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-02-27T19:20:45Z",
      "side": 1,
      "message": "async - as oneway calls are happening, though it won\u0027t process all of them. We do want to make sure this case works (e.g. clients shouldn\u0027t have to worry about it to avoid leaks, so it would be nice to know where the issue is here)\n\nWere you able to repro the failure?",
      "parentUuid": "4c117b1e_547c19e8",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 12,
        "endChar": 0
      },
      "revId": "ead5929208229f0ad0bb7ae38e235e42eb5f6088",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5f188b29_c9b6b461",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2023-02-27T23:01:57Z",
      "side": 1,
      "message": "\u003e Did you identify what the strong cycle was from?\n\nThe leak happened because binderRpcTest did not have an incoming thread to handle the decrefs coming back from oneway requests (2 of them). At the end of the test, `rootIface` still has a `timesSent` counter equal to 2. I haven\u0027t looked specifically, but I bet `sentRef` is still live at that point, which would cause the cycle.\n\n\u003e Were you able to repro the failure?\n\nYes, I repro\u0027ed the failure for OnewayCallQueuingWithFds pretty consistently, and this CL fixed it.",
      "parentUuid": "b81ca249_9857da4c",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 12,
        "endChar": 0
      },
      "revId": "ead5929208229f0ad0bb7ae38e235e42eb5f6088",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d2ab7a28_71ea1c3d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1944400
      },
      "writtenOn": "2023-03-01T21:26:58Z",
      "side": 1,
      "message": "This solution doesn\u0027t seem like something we\u0027d expect a normal user of binder to do though, right?",
      "parentUuid": "5f188b29_c9b6b461",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 12,
        "endChar": 0
      },
      "revId": "ead5929208229f0ad0bb7ae38e235e42eb5f6088",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f40d55f3_13b5135d",
        "filename": "libs/binder/tests/binderRpcTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 536,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-02-27T23:15:46Z",
      "side": 1,
      "message": "can you use this method to flush it instead, if that\u0027s the case?",
      "range": {
        "startLine": 536,
        "startChar": 0,
        "endLine": 536,
        "endChar": 58
      },
      "revId": "ead5929208229f0ad0bb7ae38e235e42eb5f6088",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9f487c4e_7d4de68c",
        "filename": "libs/binder/tests/binderRpcTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 536,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2023-03-01T01:38:59Z",
      "side": 1,
      "message": "Yeah seems like that works too, and it\u0027s simpler.",
      "parentUuid": "f40d55f3_13b5135d",
      "range": {
        "startLine": 536,
        "startChar": 0,
        "endLine": 536,
        "endChar": 58
      },
      "revId": "ead5929208229f0ad0bb7ae38e235e42eb5f6088",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1921b9be_46e0c8a3",
        "filename": "libs/binder/tests/binderRpcTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 536,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-03-01T01:40:10Z",
      "side": 1,
      "message": "The main thing is, if there is another type of unexpected failure, the test would fail, and we would still learn about it.",
      "parentUuid": "9f487c4e_7d4de68c",
      "range": {
        "startLine": 536,
        "startChar": 0,
        "endLine": 536,
        "endChar": 58
      },
      "revId": "ead5929208229f0ad0bb7ae38e235e42eb5f6088",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}