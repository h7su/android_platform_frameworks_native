{
  "comments": [
    {
      "key": {
        "uuid": "5bfc0b2b_61cc708d",
        "filename": "include/binder/Status.h",
        "patchSetId": 3
      },
      "lineNbr": 53,
      "author": {
        "id": 1010050
      },
      "writtenOn": "2015-11-13T04:15:58Z",
      "side": 1,
      "message": "Obviously not in this CL, but we should add a matching note to Parcel.java.",
      "revId": "b881787327dbe2c28141b9590d7792ed4df4b614",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "36392eb5_f6c49664",
        "filename": "include/binder/Status.h",
        "patchSetId": 3
      },
      "lineNbr": 74,
      "author": {
        "id": 1006166
      },
      "writtenOn": "2015-11-17T18:38:24Z",
      "side": 1,
      "message": "To match method caps style guide, \"ok\" or \"buildOk\" or \"fromOk\"?",
      "range": {
        "startLine": 74,
        "startChar": 0,
        "endLine": 74,
        "endChar": 23
      },
      "revId": "b881787327dbe2c28141b9590d7792ed4df4b614",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "96d1fa8e_af8f2b4c",
        "filename": "include/binder/Status.h",
        "patchSetId": 3
      },
      "lineNbr": 74,
      "author": {
        "id": 1057759
      },
      "writtenOn": "2015-11-17T20:18:00Z",
      "side": 1,
      "message": "I like ok().  Will change.",
      "parentUuid": "36392eb5_f6c49664",
      "range": {
        "startLine": 74,
        "startChar": 0,
        "endLine": 74,
        "endChar": 23
      },
      "revId": "b881787327dbe2c28141b9590d7792ed4df4b614",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "962d7a79_6bd43d69",
        "filename": "include/binder/Status.h",
        "patchSetId": 3
      },
      "lineNbr": 104,
      "author": {
        "id": 1006166
      },
      "writtenOn": "2015-11-17T23:02:34Z",
      "side": 1,
      "message": "exceptionCode() or getExceptionCode()?\n\nsame feedback for msg, and maybe want to expand to getExceptionMessage()?",
      "range": {
        "startLine": 103,
        "startChar": 0,
        "endLine": 104,
        "endChar": 61
      },
      "revId": "b881787327dbe2c28141b9590d7792ed4df4b614",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1648aa4e_06ae4ea8",
        "filename": "libs/binder/Status.cpp",
        "patchSetId": 3
      },
      "lineNbr": 81,
      "author": {
        "id": 1006166
      },
      "writtenOn": "2015-11-17T18:38:24Z",
      "side": 1,
      "message": "Logic is just a touch funky to read.  Maybe:\n\n  if (status \u003d\u003d OK \u0026\u0026 mEx !\u003d EX_NONE) {\n    writeString\n  }\n  return status;",
      "range": {
        "startLine": 79,
        "startChar": 0,
        "endLine": 81,
        "endChar": 5
      },
      "revId": "b881787327dbe2c28141b9590d7792ed4df4b614",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fb75bfb9_59ff0359",
        "filename": "libs/binder/Status.cpp",
        "patchSetId": 3
      },
      "lineNbr": 81,
      "author": {
        "id": 1057759
      },
      "writtenOn": "2015-11-17T20:18:00Z",
      "side": 1,
      "message": "Agreed that this is kind of hard to read. I can break it up and add some comments inline that will make it a little easier?\n\nThe intent of doing it this way was to avoid a lot of if-nesting.  The next change proposed by the green doc (link in the bug) is to add support for an application specific error that contains both an int and a string message.  This error would allow service writers to express specific error conditions to client code in a standard way.\n\nThis method would then change to look like:\n\nstatus_t Status::writeToParcel(Parcel* parcel) const {\n    status_t status \u003d parcel-\u003ewriteInt32(mException);\n    if (status !\u003d OK) { return status; }\n    if (mException \u003d\u003d EX_NONE) {\n        // We have no more information to write.\n        return status;\n    }\n    status \u003d parcel-\u003ewriteString16(String16(mMessage));\n    if (status !\u003d OK) { return status; }\n    if (mException !\u003d EX_APPLICATION_SPECIFIC) {\n        // We have no more information to write.\n        return status;\n    }\n    status \u003d parcel-\u003ewriteInt32(mApplicationErrorCode);\n    return status;\n}\n\nBut I don\u0027t feel too strongly about this, we\u0027re only talking about 2 levels of nesting.  If you aren\u0027t satisfied with comments, I can change this as you suggest.",
      "parentUuid": "1648aa4e_06ae4ea8",
      "range": {
        "startLine": 79,
        "startChar": 0,
        "endLine": 81,
        "endChar": 5
      },
      "revId": "b881787327dbe2c28141b9590d7792ed4df4b614",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7b91cf0c_4272b47f",
        "filename": "libs/binder/Status.cpp",
        "patchSetId": 3
      },
      "lineNbr": 81,
      "author": {
        "id": 1013508
      },
      "writtenOn": "2015-11-17T20:46:01Z",
      "side": 1,
      "message": "I\u0027m okay with either approach; the current version in the patchset now, or the new verbose mode.  (If you\u0027re going to iterate and add the richer app version later, I\u0027m fine with the current patchset.)",
      "parentUuid": "fb75bfb9_59ff0359",
      "range": {
        "startLine": 79,
        "startChar": 0,
        "endLine": 81,
        "endChar": 5
      },
      "revId": "b881787327dbe2c28141b9590d7792ed4df4b614",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}