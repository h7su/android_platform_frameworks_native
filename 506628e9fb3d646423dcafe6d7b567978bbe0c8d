{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "470e0301_345999a6",
        "filename": "services/inputflinger/reader/EventHub.cpp",
        "patchSetId": 2
      },
      "lineNbr": 130,
      "author": {
        "id": 1149384
      },
      "writtenOn": "2021-06-23T21:06:14Z",
      "side": 1,
      "message": "why can\u0027t we just check for whether the directory \"/dev/input\" exists?",
      "range": {
        "startLine": 130,
        "startChar": 12,
        "endLine": 130,
        "endChar": 28
      },
      "revId": "506628e9fb3d646423dcafe6d7b567978bbe0c8d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3a566db1_84b4dbd8",
        "filename": "services/inputflinger/reader/EventHub.cpp",
        "patchSetId": 2
      },
      "lineNbr": 130,
      "author": {
        "id": 1721573
      },
      "writtenOn": "2021-06-23T21:52:56Z",
      "side": 1,
      "message": "Hi,\n\nThanks for the review!\n\nI didn\u0027t want to change the default behavior which i think is good, i.e. if the user expects the /dev/input/ to exist then the result of scanDirLocked(\"/dev/input\") is checked and the boot is stopped and logged if its unsuccessful in scanDevicesLocked, this gives a clear error in logcat as well which is easy to catch.\n\nI can change the behavior so that it always passes below in the scanDevicesLocked and the constructor if you like? i.e. \nif(opendir(DEVICE_PATH)) {\n    closedir(DEVICE_PATH);\n    ....\n}\n\nin both the constructor and scanDevicesLocked below? However, if the user expects the /dev/input to exist and it doesnt for some reason it might not be caught?",
      "parentUuid": "470e0301_345999a6",
      "range": {
        "startLine": 130,
        "startChar": 12,
        "endLine": 130,
        "endChar": 28
      },
      "revId": "506628e9fb3d646423dcafe6d7b567978bbe0c8d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b975ef64_dca7017b",
        "filename": "services/inputflinger/reader/EventHub.cpp",
        "patchSetId": 2
      },
      "lineNbr": 130,
      "author": {
        "id": 1149384
      },
      "writtenOn": "2021-06-23T22:30:50Z",
      "side": 1,
      "message": "Can you just use https://en.cppreference.com/w/cpp/filesystem/exists ?",
      "parentUuid": "3a566db1_84b4dbd8",
      "range": {
        "startLine": 130,
        "startChar": 12,
        "endLine": 130,
        "endChar": 28
      },
      "revId": "506628e9fb3d646423dcafe6d7b567978bbe0c8d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6986dfd8_62a2098d",
        "filename": "services/inputflinger/reader/EventHub.cpp",
        "patchSetId": 2
      },
      "lineNbr": 130,
      "author": {
        "id": 1721573
      },
      "writtenOn": "2021-06-23T22:54:28Z",
      "side": 1,
      "message": "Sure, will use this in updated patch.",
      "parentUuid": "b975ef64_dca7017b",
      "range": {
        "startLine": 130,
        "startChar": 12,
        "endLine": 130,
        "endChar": 28
      },
      "revId": "506628e9fb3d646423dcafe6d7b567978bbe0c8d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "16b9cd56_442f25e9",
        "filename": "services/inputflinger/reader/EventHub.cpp",
        "patchSetId": 2
      },
      "lineNbr": 314,
      "author": {
        "id": 1149384
      },
      "writtenOn": "2021-06-23T22:30:50Z",
      "side": 1,
      "message": "One remaining concern here is tests, and specifically, integration tests. We have some in InputReader_test and EventHub_test.\n\nIf we skip adding \u0027/dev/input\u0027 directory, then we cannot discover input devices that might be added when the tests are executed.\n\nThat means, my guess is that this patch, in the current form, will break input tests when the config is enabled (or when the dir doesn\u0027t exist, on your test device).\n\n\nHow about we add a watch for /dev/input directory? Something like this:\n\n    if (directory exists) {\n       // do the usual code for inotify_add_watch(... DEVICE_PATH...);\n   } else {\n      // The /dev/input directory may not exist on development devices that don\u0027t have any input devices connected. Just add a watch for /dev and when /dev/input appears, re-do this add_watch for DEVICE_PATH.\n   }\n   \n   \nYou might have to modify the \"isV4lScanningEnabled\" check, because it would clash with this new logic being added.\n\nTo summarize, please rework the patch such that:\n1) All tests pass, even on your device where /dev/input is not present\n2) Without having to add any custom system properties, to simplify bringup",
      "range": {
        "startLine": 314,
        "startChar": 8,
        "endLine": 314,
        "endChar": 24
      },
      "revId": "506628e9fb3d646423dcafe6d7b567978bbe0c8d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a1c04fa0_ef61d6e1",
        "filename": "services/inputflinger/reader/EventHub.cpp",
        "patchSetId": 2
      },
      "lineNbr": 314,
      "author": {
        "id": 1721573
      },
      "writtenOn": "2021-06-23T22:54:28Z",
      "side": 1,
      "message": "Sure, will follow above approach. Just wanted to check how to build and run the InputReader_test and EventHub_test?",
      "parentUuid": "16b9cd56_442f25e9",
      "range": {
        "startLine": 314,
        "startChar": 8,
        "endLine": 314,
        "endChar": 24
      },
      "revId": "506628e9fb3d646423dcafe6d7b567978bbe0c8d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4ee6a897_16507750",
        "filename": "services/inputflinger/reader/EventHub.cpp",
        "patchSetId": 2
      },
      "lineNbr": 314,
      "author": {
        "id": 1721573
      },
      "writtenOn": "2021-06-23T23:09:46Z",
      "side": 1,
      "message": "Also, in the above approach in the else part when /dev/input doesnt exist, after adding a watch for /dev/input i am assuming you want a while loop to only exit in the case if (event-\u003emask \u0026 IN_CREATE) and do the usual code, but /dev/input will never be created in my device, so it will always remain stuck in the while loop? or did i get this wrong?",
      "parentUuid": "a1c04fa0_ef61d6e1",
      "range": {
        "startLine": 314,
        "startChar": 8,
        "endLine": 314,
        "endChar": 24
      },
      "revId": "506628e9fb3d646423dcafe6d7b567978bbe0c8d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6b0ae82b_b3978506",
        "filename": "services/inputflinger/reader/EventHub.cpp",
        "patchSetId": 2
      },
      "lineNbr": 314,
      "author": {
        "id": 1149384
      },
      "writtenOn": "2021-06-23T23:14:35Z",
      "side": 1,
      "message": "you can use `atest inputflinger_tests` to build and run the tests.\n\ni don\u0027t think we need a while loop, we would just get \u0027/dev/\u0027 added to the inotify. Then, when inotify is triggered, we would check if it matches \u0027/dev/input\u0027 and reexecute the \u0027add /dev/input to inotify list\u0027. That code should probably be moved to a function.\n\nWhy do you say /dev/input will never be created in your device? Wouldn\u0027t running the tests cause that folder to be created? How does /dev/uinput work on your device?",
      "parentUuid": "4ee6a897_16507750",
      "range": {
        "startLine": 314,
        "startChar": 8,
        "endLine": 314,
        "endChar": 24
      },
      "revId": "506628e9fb3d646423dcafe6d7b567978bbe0c8d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ca77eb19_2b6eb18c",
        "filename": "services/inputflinger/reader/EventHub.cpp",
        "patchSetId": 2
      },
      "lineNbr": 314,
      "author": {
        "id": 1721573
      },
      "writtenOn": "2021-06-24T00:03:21Z",
      "side": 1,
      "message": "I was thinking that what you roughly meant was something like (rough code)\n\nif(!exists(DEVICE_PATH)) {\n    mINotifyFd \u003d inotify_init();\n    mInputWd \u003d inotify_add_watch(mINotifyFd, \"/dev\", IN_CREATE);\n\n    int res;\n    char event_buf[512];\n    int event_size;\n    int event_pos \u003d 0;\n    struct inotify_event* event;\n    \n    res \u003d read(mINotifyFd, event_buf, sizeof(event_buf));\n    while (res \u003e\u003d (int)sizeof(*event)) {\n        event \u003d (struct inotify_event*)(event_buf + event_pos);\n        if (event-\u003elen) {\n            if ((event-\u003ewd \u003d\u003d mInputWd) \u0026\u0026 (event-\u003emask \u0026 IN_CREATE) \u0026\u0026 (event-\u003ename \u003d\u003d input)) \n                // do the usual code for inotify_add_watch(... DEVICE_PATH...);\n            else\n                // blocking read again as the event in /dev/ was not related to /dev/input\n                res \u003d read(mINotifyFd, event_buf, sizeof(event_buf));\n        }\n    }\n}\n\n\u003e Why do you say /dev/input will never be created in your device? Wouldn\u0027t running the tests cause that folder to be created? How does /dev/uinput work on your device?\nWhat i was trying to address with this patch is to boot android on development platforms that dont have any inputs, i.e. no keyboards, no mouse, no touchscreen, etc. So /dev/input is never created by the kernel as there is no input device, so the above approach will always be stuck waiting for /dev/input to be created which will never happen on normal boot not running any tests, so wont work.",
      "parentUuid": "6b0ae82b_b3978506",
      "range": {
        "startLine": 314,
        "startChar": 8,
        "endLine": 314,
        "endChar": 24
      },
      "revId": "506628e9fb3d646423dcafe6d7b567978bbe0c8d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "519b024d_176592c7",
        "filename": "services/inputflinger/reader/EventHub.cpp",
        "patchSetId": 2
      },
      "lineNbr": 314,
      "author": {
        "id": 1721573
      },
      "writtenOn": "2021-06-24T00:32:07Z",
      "side": 1,
      "message": "Apologies, just realized in the code above around the else part isn\u0027t correct, so please ignore that. but the answer to your other question above stands\n\u003e  Then, when inotify is triggered, we would check if it matches \u0027/dev/input\u0027 \n\nThis will never happen with device without any input perihperals during boot.",
      "parentUuid": "ca77eb19_2b6eb18c",
      "range": {
        "startLine": 314,
        "startChar": 8,
        "endLine": 314,
        "endChar": 24
      },
      "revId": "506628e9fb3d646423dcafe6d7b567978bbe0c8d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a593d784_062214dd",
        "filename": "services/inputflinger/reader/EventHub.cpp",
        "patchSetId": 2
      },
      "lineNbr": 314,
      "author": {
        "id": 1149384
      },
      "writtenOn": "2021-06-24T19:30:39Z",
      "side": 1,
      "message": "It might not happen during boot, but wouldn\u0027t it happen when the integration tests are ran? Do you have /dev/uinput on your device? I\u0027m pretty sure it\u0027s a required kernel feature. That would create a virtual input device",
      "parentUuid": "519b024d_176592c7",
      "range": {
        "startLine": 314,
        "startChar": 8,
        "endLine": 314,
        "endChar": 24
      },
      "revId": "506628e9fb3d646423dcafe6d7b567978bbe0c8d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6b926563_d100916f",
        "filename": "services/inputflinger/reader/EventHub.cpp",
        "patchSetId": 2
      },
      "lineNbr": 314,
      "author": {
        "id": 1721573
      },
      "writtenOn": "2021-06-24T19:58:42Z",
      "side": 1,
      "message": "/dev/uinput is not there in my device during normal boot to completion which only happens with this patch.\n\nJust wanted to confirm, by integration test you mean InputReader_test and EventHub_test? The thing is they wont run during normal boot, so even if /dev/uinput is created during these tests, it wont be useful during normal boot when these tests wont be run at all by others using device without /dev/input.\n\nI did try to run atest inputflinger_tests but it failed with\n\ncom.android.tradefed.device.NoDeviceException[RUNNER_ALLOCATION_ERROR|500009|INFRA_FAILURE]: No device was allocated for the command. \n\nlikely as my development device doesnt have usb (no inputs :) )\n\nhowever it did place the test in userdata.img nativetest64/inputflinger_tests/inputflinger_tests so will try to run it manually, will update here after the test.",
      "parentUuid": "a593d784_062214dd",
      "range": {
        "startLine": 314,
        "startChar": 8,
        "endLine": 314,
        "endChar": 24
      },
      "revId": "506628e9fb3d646423dcafe6d7b567978bbe0c8d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}