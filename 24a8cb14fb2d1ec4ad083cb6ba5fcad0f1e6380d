{
  "comments": [
    {
      "key": {
        "uuid": "9dfa89bd_b52b2b31",
        "filename": "services/sensorservice/Android.bp",
        "patchSetId": 2
      },
      "lineNbr": 35,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2017-09-27T00:08:40Z",
      "side": 1,
      "message": "these headers should be exported as well",
      "range": {
        "startLine": 35,
        "startChar": 4,
        "endLine": 35,
        "endChar": 16
      },
      "revId": "24a8cb14fb2d1ec4ad083cb6ba5fcad0f1e6380d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "34339fa2_218453f5",
        "filename": "services/sensorservice/Android.bp",
        "patchSetId": 2
      },
      "lineNbr": 35,
      "author": {
        "id": 1182749
      },
      "writtenOn": "2017-09-27T12:40:34Z",
      "side": 1,
      "message": "Do you mean that this line is redundant? I can\u0027t test it with Android.bp, but for Android.mk line `LOCAL_C_INCLUDES :\u003d system/libvintf/include` is required.",
      "parentUuid": "9dfa89bd_b52b2b31",
      "range": {
        "startLine": 35,
        "startChar": 4,
        "endLine": 35,
        "endChar": 16
      },
      "revId": "24a8cb14fb2d1ec4ad083cb6ba5fcad0f1e6380d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "185ab4da_71014b2e",
        "filename": "services/sensorservice/Android.bp",
        "patchSetId": 2
      },
      "lineNbr": 35,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2017-09-27T20:14:03Z",
      "side": 1,
      "message": "It definitely shouldn\u0027t be required with either (since libvintf has \"export_include_dirs: [\"include\"],\")",
      "parentUuid": "34339fa2_218453f5",
      "range": {
        "startLine": 35,
        "startChar": 4,
        "endLine": 35,
        "endChar": 16
      },
      "revId": "24a8cb14fb2d1ec4ad083cb6ba5fcad0f1e6380d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "149f67c1_811209d1",
        "filename": "services/sensorservice/Android.bp",
        "patchSetId": 2
      },
      "lineNbr": 35,
      "author": {
        "id": 1182749
      },
      "writtenOn": "2017-09-28T12:37:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "185ab4da_71014b2e",
      "range": {
        "startLine": 35,
        "startChar": 4,
        "endLine": 35,
        "endChar": 16
      },
      "revId": "24a8cb14fb2d1ec4ad083cb6ba5fcad0f1e6380d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6e4338da_18f8e358",
        "filename": "services/sensorservice/SensorDevice.cpp",
        "patchSetId": 2
      },
      "lineNbr": 115,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2017-09-27T00:08:40Z",
      "side": 1,
      "message": "also, better is probably just \u0027mSensors-\u003eping().isOk()\u0027 depending on what you\u0027re trying to accomplish here",
      "range": {
        "startLine": 115,
        "startChar": 15,
        "endLine": 115,
        "endChar": 80
      },
      "revId": "24a8cb14fb2d1ec4ad083cb6ba5fcad0f1e6380d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "84b3d188_a16f63a1",
        "filename": "services/sensorservice/SensorDevice.cpp",
        "patchSetId": 2
      },
      "lineNbr": 115,
      "author": {
        "id": 1074523
      },
      "writtenOn": "2017-09-27T00:28:34Z",
      "side": 1,
      "message": "ping() does not work. This was a workaround of a problem sourced from incompatibility of legacy hal and treble.\n\nThis should be solved in ISensors 2.0.",
      "parentUuid": "6e4338da_18f8e358",
      "range": {
        "startLine": 115,
        "startChar": 15,
        "endLine": 115,
        "endChar": 80
      },
      "revId": "24a8cb14fb2d1ec4ad083cb6ba5fcad0f1e6380d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "20dd813b_c18cf847",
        "filename": "services/sensorservice/SensorDevice.cpp",
        "patchSetId": 2
      },
      "lineNbr": 132,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2017-09-26T16:25:50Z",
      "side": 1,
      "message": "this whole section should just be replaced by:\nmSensors \u003d ISensors::getService()\n\nhwservicemanager internally handles this, and accessing libvintf here will cost reading and processing XML files (which hwservicemanager has already done).",
      "range": {
        "startLine": 104,
        "startChar": 4,
        "endLine": 132,
        "endChar": 5
      },
      "revId": "24a8cb14fb2d1ec4ad083cb6ba5fcad0f1e6380d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e6d1a99d_f3a7514b",
        "filename": "services/sensorservice/SensorDevice.cpp",
        "patchSetId": 2
      },
      "lineNbr": 132,
      "author": {
        "id": 1182749
      },
      "writtenOn": "2017-09-26T17:00:54Z",
      "side": 1,
      "message": "I\u0027ve checked proposed version: replace whole body of the function on two lines: mSensors \u003d ISensors::getService(); return (mSensors !\u003d nullptr);. In my case (device without sensors) it works as expected - without any delays. But if you decide to simplify this code then better solution will be remove the `connectHidlService` function at all and perform this code in the constructor, isn\u0027t it?",
      "parentUuid": "20dd813b_c18cf847",
      "range": {
        "startLine": 104,
        "startChar": 4,
        "endLine": 132,
        "endChar": 5
      },
      "revId": "24a8cb14fb2d1ec4ad083cb6ba5fcad0f1e6380d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "647d49d8_95f3a0c2",
        "filename": "services/sensorservice/SensorDevice.cpp",
        "patchSetId": 2
      },
      "lineNbr": 132,
      "author": {
        "id": 1074523
      },
      "writtenOn": "2017-09-26T22:36:53Z",
      "side": 1,
      "message": "Is this always guaranteed even when hal service just crashed? I remember this logic was added to prevent situation that cause no sensor hal being found in some cases.\n\nAlso, poll check is necessary workaround for stuck poll thread. So I cannot replace the whole block with getService().",
      "parentUuid": "20dd813b_c18cf847",
      "range": {
        "startLine": 104,
        "startChar": 4,
        "endLine": 132,
        "endChar": 5
      },
      "revId": "24a8cb14fb2d1ec4ad083cb6ba5fcad0f1e6380d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9966eb6f_a6acff6b",
        "filename": "services/sensorservice/SensorDevice.cpp",
        "patchSetId": 2
      },
      "lineNbr": 132,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2017-09-27T00:08:40Z",
      "side": 1,
      "message": "If the hal service just crashed, getService will still wait on it to startup.",
      "parentUuid": "647d49d8_95f3a0c2",
      "range": {
        "startLine": 104,
        "startChar": 4,
        "endLine": 132,
        "endChar": 5
      },
      "revId": "24a8cb14fb2d1ec4ad083cb6ba5fcad0f1e6380d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "88431b21_d7d2dfd5",
        "filename": "services/sensorservice/SensorDevice.cpp",
        "patchSetId": 2
      },
      "lineNbr": 132,
      "author": {
        "id": 1074523
      },
      "writtenOn": "2017-09-27T00:28:34Z",
      "side": 1,
      "message": "I see.",
      "parentUuid": "9966eb6f_a6acff6b",
      "range": {
        "startLine": 104,
        "startChar": 4,
        "endLine": 132,
        "endChar": 5
      },
      "revId": "24a8cb14fb2d1ec4ad083cb6ba5fcad0f1e6380d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b49a8ff9_c61ae080",
        "filename": "services/sensorservice/SensorDevice.cpp",
        "patchSetId": 2
      },
      "lineNbr": 132,
      "author": {
        "id": 1182749
      },
      "writtenOn": "2017-10-02T09:59:57Z",
      "side": 1,
      "message": "\u003e this whole section should just be replaced by:\n \u003e mSensors \u003d ISensors::getService()\n \u003e \n \u003e hwservicemanager internally handles this, and accessing libvintf\n \u003e here will cost reading and processing XML files (which\n \u003e hwservicemanager has already done).\n\n\u003e So I cannot replace the whole block with getService().\n\nThe explicit call of `libvintf` is replaced by `ISensors::getService()`.",
      "parentUuid": "20dd813b_c18cf847",
      "range": {
        "startLine": 104,
        "startChar": 4,
        "endLine": 132,
        "endChar": 5
      },
      "revId": "24a8cb14fb2d1ec4ad083cb6ba5fcad0f1e6380d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}