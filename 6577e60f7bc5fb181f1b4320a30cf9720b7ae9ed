{
  "comments": [
    {
      "key": {
        "uuid": "4c0e8a38_1087b7ba",
        "filename": "libs/binder/tests/fuzzers/BinderFuzz.cpp",
        "patchSetId": 4
      },
      "lineNbr": 29,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-08-17T18:39:43Z",
      "side": 1,
      "message": "or better yet, specify BBinder here",
      "range": {
        "startLine": 29,
        "startChar": 7,
        "endLine": 29,
        "endChar": 14
      },
      "revId": "6577e60f7bc5fb181f1b4320a30cf9720b7ae9ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5db87ed9_f134979b",
        "filename": "libs/binder/tests/fuzzers/BinderFuzz.cpp",
        "patchSetId": 4
      },
      "lineNbr": 34,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-08-17T18:39:43Z",
      "side": 1,
      "message": "bbinder-\u003elocalBinder",
      "range": {
        "startLine": 34,
        "startChar": 34,
        "endLine": 34,
        "endChar": 76
      },
      "revId": "6577e60f7bc5fb181f1b4320a30cf9720b7ae9ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6b2a63ab_14bf62ab",
        "filename": "libs/binder/tests/fuzzers/BinderFuzzFunctions.h",
        "patchSetId": 4
      },
      "lineNbr": 37,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-08-17T18:39:43Z",
      "side": 1,
      "message": "prefer prefix \u0027g\u0027 for global variables",
      "range": {
        "startLine": 37,
        "startChar": 77,
        "endLine": 37,
        "endChar": 95
      },
      "revId": "6577e60f7bc5fb181f1b4320a30cf9720b7ae9ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9ec6228c_a1d25c57",
        "filename": "libs/binder/tests/fuzzers/BinderFuzzFunctions.h",
        "patchSetId": 4
      },
      "lineNbr": 37,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-08-17T18:39:43Z",
      "side": 1,
      "message": "always pass around sp\u003c..\u003e for binder types for their ownership model",
      "range": {
        "startLine": 37,
        "startChar": 65,
        "endLine": 37,
        "endChar": 73
      },
      "revId": "6577e60f7bc5fb181f1b4320a30cf9720b7ae9ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e3e22f80_7bacd598",
        "filename": "libs/binder/tests/fuzzers/BinderFuzzFunctions.h",
        "patchSetId": 4
      },
      "lineNbr": 40,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-08-17T18:39:43Z",
      "side": 1,
      "message": "try creating one (otherwise it fails early, right?)",
      "range": {
        "startLine": 40,
        "startChar": 34,
        "endLine": 40,
        "endChar": 41
      },
      "revId": "6577e60f7bc5fb181f1b4320a30cf9720b7ae9ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fd19fff4_cbcd63a7",
        "filename": "libs/binder/tests/fuzzers/BinderFuzzFunctions.h",
        "patchSetId": 4
      },
      "lineNbr": 40,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-08-17T18:39:43Z",
      "side": 1,
      "message": "try different cookie values?",
      "range": {
        "startLine": 40,
        "startChar": 68,
        "endLine": 40,
        "endChar": 81
      },
      "revId": "6577e60f7bc5fb181f1b4320a30cf9720b7ae9ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ff71279d_9f0bfdfe",
        "filename": "libs/binder/tests/fuzzers/BinderFuzzFunctions.h",
        "patchSetId": 4
      },
      "lineNbr": 43,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-08-17T18:39:43Z",
      "side": 1,
      "message": "nit: also try creating one (or using a previous one), but make sure we keep the \u0027nullptr\u0027 case",
      "range": {
        "startLine": 43,
        "startChar": 55,
        "endLine": 43,
        "endChar": 62
      },
      "revId": "6577e60f7bc5fb181f1b4320a30cf9720b7ae9ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9b75bf8a_13645983",
        "filename": "libs/binder/tests/fuzzers/BinderFuzzFunctions.h",
        "patchSetId": 4
      },
      "lineNbr": 45,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-08-17T18:39:43Z",
      "side": 1,
      "message": "same",
      "range": {
        "startLine": 45,
        "startChar": 36,
        "endLine": 45,
        "endChar": 84
      },
      "revId": "6577e60f7bc5fb181f1b4320a30cf9720b7ae9ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dd8ccda6_90687a82",
        "filename": "libs/binder/tests/fuzzers/BinderFuzzFunctions.h",
        "patchSetId": 4
      },
      "lineNbr": 48,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-08-17T18:39:43Z",
      "side": 1,
      "message": "this is a virtual method",
      "range": {
        "startLine": 48,
        "startChar": 61,
        "endLine": 48,
        "endChar": 84
      },
      "revId": "6577e60f7bc5fb181f1b4320a30cf9720b7ae9ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fd862abf_d055bef1",
        "filename": "libs/binder/tests/fuzzers/BinderFuzzFunctions.h",
        "patchSetId": 4
      },
      "lineNbr": 58,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-08-17T18:39:43Z",
      "side": 1,
      "message": "we also have these APIs now:\n    void                setMinSchedulerPolicy(int policy, int priority);\n    int                 getMinSchedulerPolicy();\n    int                 getMinSchedulerPriority",
      "revId": "6577e60f7bc5fb181f1b4320a30cf9720b7ae9ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "75f77a9d_5a067f3a",
        "filename": "libs/binder/tests/fuzzers/BpBinderFuzz.cpp",
        "patchSetId": 4
      },
      "lineNbr": 36,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-08-17T18:39:43Z",
      "side": 1,
      "message": "this will never get hit in practice, so we wouldn\u0027t be fuzzing this part of the code",
      "range": {
        "startLine": 36,
        "startChar": 8,
        "endLine": 36,
        "endChar": 32
      },
      "revId": "6577e60f7bc5fb181f1b4320a30cf9720b7ae9ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4800253f_7650dc73",
        "filename": "libs/binder/tests/fuzzers/BpBinderFuzz.cpp",
        "patchSetId": 4
      },
      "lineNbr": 37,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-08-17T18:39:43Z",
      "side": 1,
      "message": "move L30 here, since the value is only used here",
      "range": {
        "startLine": 37,
        "startChar": 36,
        "endLine": 37,
        "endChar": 42
      },
      "revId": "6577e60f7bc5fb181f1b4320a30cf9720b7ae9ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e077be03_d521ed59",
        "filename": "libs/binder/tests/fuzzers/BpBinderFuzz.cpp",
        "patchSetId": 4
      },
      "lineNbr": 59,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-08-17T18:39:43Z",
      "side": 1,
      "message": "these should automatically unlink for a couple of releases now. Are you seeing this is necessary? (that would be a bug)",
      "range": {
        "startLine": 55,
        "startChar": 0,
        "endLine": 59,
        "endChar": 86
      },
      "revId": "6577e60f7bc5fb181f1b4320a30cf9720b7ae9ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f964b82a_d37d63bf",
        "filename": "libs/binder/tests/fuzzers/BpBinderFuzzFunctions.h",
        "patchSetId": 4
      },
      "lineNbr": 42,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-08-17T18:39:43Z",
      "side": 1,
      "message": "same comments on these, prefer to use arbitrary values?",
      "range": {
        "startLine": 41,
        "startChar": 0,
        "endLine": 42,
        "endChar": 54
      },
      "revId": "6577e60f7bc5fb181f1b4320a30cf9720b7ae9ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1878d9f6_968b35fb",
        "filename": "libs/binder/tests/fuzzers/BpBinderFuzzFunctions.h",
        "patchSetId": 4
      },
      "lineNbr": 49,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-08-17T18:39:43Z",
      "side": 1,
      "message": "same",
      "range": {
        "startLine": 49,
        "startChar": 65,
        "endLine": 49,
        "endChar": 74
      },
      "revId": "6577e60f7bc5fb181f1b4320a30cf9720b7ae9ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1f496a00_48b10044",
        "filename": "libs/binder/tests/fuzzers/IBinderFuzzFunctions.h",
        "patchSetId": 4
      },
      "lineNbr": 50,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-08-17T18:39:43Z",
      "side": 1,
      "message": "?",
      "range": {
        "startLine": 49,
        "startChar": 0,
        "endLine": 50,
        "endChar": 20
      },
      "revId": "6577e60f7bc5fb181f1b4320a30cf9720b7ae9ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9ffe0396_3631b749",
        "filename": "libs/binder/tests/fuzzers/IBinderFuzzFunctions.h",
        "patchSetId": 4
      },
      "lineNbr": 52,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-08-17T18:39:43Z",
      "side": 1,
      "message": "do we want to pass random strings?/empty arrays, etc?",
      "range": {
        "startLine": 51,
        "startChar": 0,
        "endLine": 52,
        "endChar": 35
      },
      "revId": "6577e60f7bc5fb181f1b4320a30cf9720b7ae9ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f01698c4_bd3e578e",
        "filename": "libs/binder/tests/fuzzers/IBinderFuzzFunctions.h",
        "patchSetId": 4
      },
      "lineNbr": 61,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-08-17T18:39:43Z",
      "side": 1,
      "message": "b/c the BpBinder is calling into actual services, this would be sending empty transactions to many Android processes. Since we lose coverage here, it\u0027s somewhat of a black hole, and the fuzzer won\u0027t really be able to handle it",
      "range": {
        "startLine": 55,
        "startChar": 0,
        "endLine": 61,
        "endChar": 11
      },
      "revId": "6577e60f7bc5fb181f1b4320a30cf9720b7ae9ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "427b9c90_a48c5e27",
        "filename": "libs/binder/tests/fuzzers/IBinderFuzzFunctions.h",
        "patchSetId": 4
      },
      "lineNbr": 65,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-08-17T18:39:43Z",
      "side": 1,
      "message": "generate random values for these",
      "range": {
        "startLine": 63,
        "startChar": 0,
        "endLine": 65,
        "endChar": 44
      },
      "revId": "6577e60f7bc5fb181f1b4320a30cf9720b7ae9ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "95b67712_a3145ab8",
        "filename": "libs/binder/tests/fuzzers/IBinderFuzzFunctions.h",
        "patchSetId": 4
      },
      "lineNbr": 70,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-08-17T18:39:43Z",
      "side": 1,
      "message": "same",
      "range": {
        "startLine": 70,
        "startChar": 0,
        "endLine": 70,
        "endChar": 38
      },
      "revId": "6577e60f7bc5fb181f1b4320a30cf9720b7ae9ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "738a42bd_2ae103a4",
        "filename": "libs/binder/tests/fuzzers/IBinderFuzzFunctions.h",
        "patchSetId": 4
      },
      "lineNbr": 74,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-08-17T18:39:43Z",
      "side": 1,
      "message": "same",
      "range": {
        "startLine": 74,
        "startChar": 0,
        "endLine": 74,
        "endChar": 38
      },
      "revId": "6577e60f7bc5fb181f1b4320a30cf9720b7ae9ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "02fde236_0c0eadf4",
        "filename": "libs/binder/tests/fuzzers/MemoryHeapBaseFuzz.cpp",
        "patchSetId": 4
      },
      "lineNbr": 70,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-08-17T18:39:43Z",
      "side": 1,
      "message": "this would always end the loop, which we don\u0027t want, right?",
      "range": {
        "startLine": 70,
        "startChar": 58,
        "endLine": 70,
        "endChar": 73
      },
      "revId": "6577e60f7bc5fb181f1b4320a30cf9720b7ae9ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eecc1d43_f943e86e",
        "filename": "libs/binder/tests/fuzzers/MemoryHeapBaseFuzz.cpp",
        "patchSetId": 4
      },
      "lineNbr": 77,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-08-17T18:39:43Z",
      "side": 1,
      "message": "the important API here is mapfd. I think either:\n- we should test mapfd\n- delete this test and focus on MemoryDealer\n\n(fwiw, I think \u0027setDevice\u0027 can be removed, so trying at https://android-review.googlesource.com/c/platform/frameworks/native/+/1402750)",
      "range": {
        "startLine": 56,
        "startChar": 0,
        "endLine": 77,
        "endChar": 5
      },
      "revId": "6577e60f7bc5fb181f1b4320a30cf9720b7ae9ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d40510fb_c79a869d",
        "filename": "libs/binder/tests/fuzzers/ParcelBlobFuzz.cpp",
        "patchSetId": 4
      },
      "lineNbr": 40,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-08-17T18:39:43Z",
      "side": 1,
      "message": "always prefer \u0027at\u0027 over \u0027[]\u0027 when making assumptions like this, but it\u0027s pretty cryptic to do these operations -- in order to understand why, I have to look at the operations list\n\nAlso, it isn\u0027t clear why this should be done every iteration",
      "range": {
        "startLine": 34,
        "startChar": 0,
        "endLine": 40,
        "endChar": 9
      },
      "revId": "6577e60f7bc5fb181f1b4320a30cf9720b7ae9ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2b41e35d_ede1fca3",
        "filename": "libs/binder/tests/fuzzers/ParcelBlobFuzzFunctions.h",
        "patchSetId": 4
      },
      "lineNbr": 86,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-08-17T18:39:43Z",
      "side": 1,
      "message": "these seem to be testing std::vector",
      "range": {
        "startLine": 37,
        "startChar": 15,
        "endLine": 86,
        "endChar": 18
      },
      "revId": "6577e60f7bc5fb181f1b4320a30cf9720b7ae9ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d1ad6279_f9a4279f",
        "filename": "libs/binder/tests/fuzzers/ParcelBlobFuzzFunctions.h",
        "patchSetId": 4
      },
      "lineNbr": 179,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-08-17T18:39:43Z",
      "side": 1,
      "message": "none of these really do anything",
      "range": {
        "startLine": 86,
        "startChar": 18,
        "endLine": 179,
        "endChar": 40
      },
      "revId": "6577e60f7bc5fb181f1b4320a30cf9720b7ae9ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "546ba618_54868f13",
        "filename": "libs/binder/tests/fuzzers/ParcelBlobFuzzFunctions.h",
        "patchSetId": 4
      },
      "lineNbr": 181,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-08-17T18:39:43Z",
      "side": 1,
      "message": "I think our existing Parcel fuzzer tests should cover this, since they use the protected/private members of these classes that do something",
      "revId": "6577e60f7bc5fb181f1b4320a30cf9720b7ae9ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fa4602fa_8c6d1032",
        "filename": "libs/binder/tests/fuzzers/PersistableBundleFuzzFunctions.h",
        "patchSetId": 4
      },
      "lineNbr": 48,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-08-17T18:39:43Z",
      "side": 1,
      "message": "should initialize this with random data, for the test to be useful",
      "range": {
        "startLine": 48,
        "startChar": 0,
        "endLine": 48,
        "endChar": 35
      },
      "revId": "6577e60f7bc5fb181f1b4320a30cf9720b7ae9ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f5508ea8_9d4e88b8",
        "filename": "libs/binder/tests/fuzzers/StatusFuzz.cpp",
        "patchSetId": 4
      },
      "lineNbr": 41,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-08-17T18:39:43Z",
      "side": 1,
      "message": "there are many ways to create these. Should we be testing them?",
      "range": {
        "startLine": 41,
        "startChar": 44,
        "endLine": 41,
        "endChar": 61
      },
      "revId": "6577e60f7bc5fb181f1b4320a30cf9720b7ae9ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0c9079a8_9e3718d7",
        "filename": "libs/binder/tests/fuzzers/StatusFuzz.cpp",
        "patchSetId": 4
      },
      "lineNbr": 45,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-08-17T18:39:43Z",
      "side": 1,
      "message": "nit: out of curiosity, why not make this one of the functions, rather than having a separate mechanism here?",
      "range": {
        "startLine": 45,
        "startChar": 0,
        "endLine": 45,
        "endChar": 44
      },
      "revId": "6577e60f7bc5fb181f1b4320a30cf9720b7ae9ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "38972580_f33d58b4",
        "filename": "libs/binder/tests/fuzzers/StatusFuzzFunctions.h",
        "patchSetId": 4
      },
      "lineNbr": 78,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-08-17T18:39:43Z",
      "side": 1,
      "message": "these test constructors, but we don\u0027t test instance methods on what these return",
      "range": {
        "startLine": 56,
        "startChar": 3,
        "endLine": 78,
        "endChar": 18
      },
      "revId": "6577e60f7bc5fb181f1b4320a30cf9720b7ae9ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5e29edec_583fa65d",
        "filename": "libs/binder/tests/fuzzers/TextOutputFuzz.cpp",
        "patchSetId": 4
      },
      "lineNbr": 40,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-08-17T18:39:43Z",
      "side": 1,
      "message": "what about indent/etc apis?",
      "revId": "6577e60f7bc5fb181f1b4320a30cf9720b7ae9ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}