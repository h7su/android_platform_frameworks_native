{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "f7af79c7_d75a10e6",
        "filename": "libs/binder/RpcSession.cpp",
        "patchSetId": 7
      },
      "lineNbr": 288,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2021-07-01T03:54:29Z",
      "side": 1,
      "message": "Save this to a static variable using std::call_once because dlsym is a costly action?",
      "range": {
        "startLine": 288,
        "startChar": 8,
        "endLine": 288,
        "endChar": 66
      },
      "revId": "bfa711862c84782671d09cadf752974fc9bb23c5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e6406b58_07d39bb1",
        "filename": "libs/binder/RpcSession.cpp",
        "patchSetId": 7
      },
      "lineNbr": 288,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-07-01T19:58:06Z",
      "side": 1,
      "message": "Sure; that would add a few global variables, though (two std::once_flag and two pointers)",
      "parentUuid": "f7af79c7_d75a10e6",
      "range": {
        "startLine": 288,
        "startChar": 8,
        "endLine": 288,
        "endChar": 66
      },
      "revId": "bfa711862c84782671d09cadf752974fc9bb23c5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "98f9c50c_cda8717d",
        "filename": "libs/binder/RpcSession.cpp",
        "patchSetId": 7
      },
      "lineNbr": 288,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-07-01T20:04:14Z",
      "side": 1,
      "message": "And note that this would apply to all processes, even for those that doesn\u0027t call this code at all.\n\nI can squeeze them into one pointer to a struct that contains all four things, though. Then it would become one static pointer for all processes, and one heap allocation of the size of two std::once_flag and two pointers for system_server only",
      "parentUuid": "e6406b58_07d39bb1",
      "range": {
        "startLine": 288,
        "startChar": 8,
        "endLine": 288,
        "endChar": 66
      },
      "revId": "bfa711862c84782671d09cadf752974fc9bb23c5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b20a455_0a279828",
        "filename": "libs/binder/RpcSession.cpp",
        "patchSetId": 7
      },
      "lineNbr": 288,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-07-01T20:22:10Z",
      "side": 1,
      "message": "Actually, I think\n\n```\nstatic auto sym \u003d dlsym(RTLD_DEFAULT, \"androidJavaAttachThread\");\n```\n\nwould be thread safe too (since C++11), according to \n\nhttps://stackoverflow.com/a/1661564\n\nhttp://www.open-std.org/jtc1/sc22/wg21/docs/papers/2012/n3337.pdf , section 6.7.4",
      "parentUuid": "98f9c50c_cda8717d",
      "range": {
        "startLine": 288,
        "startChar": 8,
        "endLine": 288,
        "endChar": 66
      },
      "revId": "bfa711862c84782671d09cadf752974fc9bb23c5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8c44b50a_9ade67fd",
        "filename": "libs/binder/RpcSession.cpp",
        "patchSetId": 7
      },
      "lineNbr": 288,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2021-07-01T20:30:29Z",
      "side": 1,
      "message": "yes, it would. that\u0027s the style we usually recommend.",
      "parentUuid": "9b20a455_0a279828",
      "range": {
        "startLine": 288,
        "startChar": 8,
        "endLine": 288,
        "endChar": 66
      },
      "revId": "bfa711862c84782671d09cadf752974fc9bb23c5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "26857865_cccc5fc2",
        "filename": "libs/binder/RpcSession.cpp",
        "patchSetId": 7
      },
      "lineNbr": 288,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-07-01T20:34:06Z",
      "side": 1,
      "message": "Thanks Elliot! I\u0027ve been researching around this topic and I don\u0027t know if dlsym() would be evaluated twice if there are two threads entering JavaThreadAttacher(). (Though, even if it were evaluated twice, the assignment should only happen once atomically).\n\nDone changing it to static. Note: we pay the price of two pointers per process using binder. Hopefully this doesn\u0027t push over the page limit.",
      "parentUuid": "8c44b50a_9ade67fd",
      "range": {
        "startLine": 288,
        "startChar": 8,
        "endLine": 288,
        "endChar": 66
      },
      "revId": "bfa711862c84782671d09cadf752974fc9bb23c5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3eca1220_8385b069",
        "filename": "libs/binder/RpcSession.cpp",
        "patchSetId": 7
      },
      "lineNbr": 288,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2021-07-01T20:57:23Z",
      "side": 1,
      "message": "no, the compiler inserts the \"moral equivalent\" of the pthread_once_t code for you, so one thread will just block.",
      "parentUuid": "26857865_cccc5fc2",
      "range": {
        "startLine": 288,
        "startChar": 8,
        "endLine": 288,
        "endChar": 66
      },
      "revId": "bfa711862c84782671d09cadf752974fc9bb23c5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2f96f90a_ce26334b",
        "filename": "libs/binder/RpcSession.cpp",
        "patchSetId": 7
      },
      "lineNbr": 303,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2021-07-01T03:54:29Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 303,
        "startChar": 8,
        "endLine": 303,
        "endChar": 66
      },
      "revId": "bfa711862c84782671d09cadf752974fc9bb23c5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fd533a40_8b010b4f",
        "filename": "libs/binder/RpcSession.cpp",
        "patchSetId": 7
      },
      "lineNbr": 303,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-07-01T20:34:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2f96f90a_ce26334b",
      "range": {
        "startLine": 303,
        "startChar": 8,
        "endLine": 303,
        "endChar": 66
      },
      "revId": "bfa711862c84782671d09cadf752974fc9bb23c5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}