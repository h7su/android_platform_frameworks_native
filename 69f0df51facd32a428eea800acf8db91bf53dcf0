{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "58240b08_47bb051f",
        "filename": "libs/binder/IServiceManager.cpp",
        "patchSetId": 14
      },
      "lineNbr": 285,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-05-17T23:17:53Z",
      "side": 1,
      "message": "For getService (this function), I would expect this is the case sometimes. You can checkService without calling any threads.",
      "range": {
        "startLine": 283,
        "startChar": 0,
        "endLine": 285,
        "endChar": 41
      },
      "revId": "69f0df51facd32a428eea800acf8db91bf53dcf0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "88c83ab8_f132ec95",
        "filename": "libs/binder/IServiceManager.cpp",
        "patchSetId": 14
      },
      "lineNbr": 285,
      "author": {
        "id": 1944405
      },
      "writtenOn": "2022-05-17T23:57:40Z",
      "side": 1,
      "message": "Should it simply be a ALOGW or ALOGI instead?",
      "parentUuid": "58240b08_47bb051f",
      "range": {
        "startLine": 283,
        "startChar": 0,
        "endLine": 285,
        "endChar": 41
      },
      "revId": "69f0df51facd32a428eea800acf8db91bf53dcf0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "917aa664_22fc8b9b",
        "filename": "libs/binder/IServiceManager.cpp",
        "patchSetId": 14
      },
      "lineNbr": 285,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-05-18T00:02:37Z",
      "side": 1,
      "message": "For this function, it should be removed. No thread is needed to make calls (only to receive them).",
      "parentUuid": "88c83ab8_f132ec95",
      "range": {
        "startLine": 283,
        "startChar": 0,
        "endLine": 285,
        "endChar": 41
      },
      "revId": "69f0df51facd32a428eea800acf8db91bf53dcf0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7d8779ec_d0da60f9",
        "filename": "libs/binder/IServiceManager.cpp",
        "patchSetId": 14
      },
      "lineNbr": 285,
      "author": {
        "id": 1944405
      },
      "writtenOn": "2022-05-18T21:31:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "917aa664_22fc8b9b",
      "range": {
        "startLine": 283,
        "startChar": 0,
        "endLine": 285,
        "endChar": 41
      },
      "revId": "69f0df51facd32a428eea800acf8db91bf53dcf0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fb56e9d6_c6667e68",
        "filename": "libs/binder/IServiceManager.cpp",
        "patchSetId": 14
      },
      "lineNbr": 338,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-05-17T23:17:53Z",
      "side": 1,
      "message": "this is the function which requires another thread to be available",
      "range": {
        "startLine": 338,
        "startChar": 32,
        "endLine": 338,
        "endChar": 46
      },
      "revId": "69f0df51facd32a428eea800acf8db91bf53dcf0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "50e72546_f96ed08a",
        "filename": "libs/binder/IServiceManager.cpp",
        "patchSetId": 14
      },
      "lineNbr": 338,
      "author": {
        "id": 1944405
      },
      "writtenOn": "2022-05-18T21:31:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fb56e9d6_c6667e68",
      "range": {
        "startLine": 338,
        "startChar": 32,
        "endLine": 338,
        "endChar": 46
      },
      "revId": "69f0df51facd32a428eea800acf8db91bf53dcf0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "615d7767_b7d4e398",
        "filename": "libs/binder/IServiceManager.cpp",
        "patchSetId": 14
      },
      "lineNbr": 367,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-05-17T23:17:53Z",
      "side": 1,
      "message": "would want to check here (another thread isn\u0027t needed for L369, but we always want the check because L369 isn\u0027t guaranteed to pass) (again recommend separate CL)",
      "range": {
        "startLine": 367,
        "startChar": 0,
        "endLine": 367,
        "endChar": 0
      },
      "revId": "69f0df51facd32a428eea800acf8db91bf53dcf0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "09bcc578_a6214211",
        "filename": "libs/binder/IServiceManager.cpp",
        "patchSetId": 14
      },
      "lineNbr": 402,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-05-17T23:17:53Z",
      "side": 1,
      "message": "and here we could put more information in the log",
      "range": {
        "startLine": 402,
        "startChar": 61,
        "endLine": 402,
        "endChar": 102
      },
      "revId": "69f0df51facd32a428eea800acf8db91bf53dcf0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a60534d6_4d5c6397",
        "filename": "libs/binder/IServiceManager.cpp",
        "patchSetId": 14
      },
      "lineNbr": 402,
      "author": {
        "id": 1944405
      },
      "writtenOn": "2022-05-17T23:57:40Z",
      "side": 1,
      "message": "Added more but not putting it as resolved to check if there\u0027s more that can be done.",
      "parentUuid": "09bcc578_a6214211",
      "range": {
        "startLine": 402,
        "startChar": 61,
        "endLine": 402,
        "endChar": 102
      },
      "revId": "69f0df51facd32a428eea800acf8db91bf53dcf0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6475d8e0_03395557",
        "filename": "libs/binder/IServiceManager.cpp",
        "patchSetId": 14
      },
      "lineNbr": 402,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-05-18T00:02:37Z",
      "side": 1,
      "message": "please do split this file off into a separate bug, since everything else you\u0027ve done can be submitted w/o worrying about this particular problem",
      "parentUuid": "a60534d6_4d5c6397",
      "range": {
        "startLine": 402,
        "startChar": 61,
        "endLine": 402,
        "endChar": 102
      },
      "revId": "69f0df51facd32a428eea800acf8db91bf53dcf0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dfc17d68_75a22e54",
        "filename": "libs/binder/IServiceManager.cpp",
        "patchSetId": 14
      },
      "lineNbr": 402,
      "author": {
        "id": 1944405
      },
      "writtenOn": "2022-05-18T21:31:40Z",
      "side": 1,
      "message": "I\u0027ll create a bug to deal with the remaining comments as mentioned in 1 of your comments, however isn\u0027t the solution in PS17 viable?",
      "parentUuid": "6475d8e0_03395557",
      "range": {
        "startLine": 402,
        "startChar": 61,
        "endLine": 402,
        "endChar": 102
      },
      "revId": "69f0df51facd32a428eea800acf8db91bf53dcf0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3de42a81_ffd52a04",
        "filename": "libs/binder/tests/binderLibTest.cpp",
        "patchSetId": 14
      },
      "lineNbr": 1243,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-05-17T23:28:45Z",
      "side": 1,
      "message": "declare when used",
      "range": {
        "startLine": 1243,
        "startChar": 0,
        "endLine": 1243,
        "endChar": 32
      },
      "revId": "69f0df51facd32a428eea800acf8db91bf53dcf0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "70bb09f8_9501c17e",
        "filename": "libs/binder/tests/binderLibTest.cpp",
        "patchSetId": 14
      },
      "lineNbr": 1243,
      "author": {
        "id": 1944405
      },
      "writtenOn": "2022-05-17T23:55:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3de42a81_ffd52a04",
      "range": {
        "startLine": 1243,
        "startChar": 0,
        "endLine": 1243,
        "endChar": 32
      },
      "revId": "69f0df51facd32a428eea800acf8db91bf53dcf0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "90e23473_eda0e35e",
        "filename": "libs/binder/tests/binderLibTest.cpp",
        "patchSetId": 14
      },
      "lineNbr": 1246,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-05-17T23:28:45Z",
      "side": 1,
      "message": "\u0027sleep for 1ms\u0027 is out of sync. Though, specifically, what is the problem we are waiting for here? The issue is that the \u0027joinThreadPool\u0027 thread is not started yet?\n\nOne option is to allow replyi to be 15 or 16.",
      "range": {
        "startLine": 1246,
        "startChar": 19,
        "endLine": 1246,
        "endChar": 33
      },
      "revId": "69f0df51facd32a428eea800acf8db91bf53dcf0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "81021a56_f15ef1b5",
        "filename": "libs/binder/tests/binderLibTest.cpp",
        "patchSetId": 14
      },
      "lineNbr": 1246,
      "author": {
        "id": 1944405
      },
      "writtenOn": "2022-05-17T23:55:01Z",
      "side": 1,
      "message": "That\u0027s the issue with flaky tests I mentioned. Debugging in Binder.cpp to be done to find the root of the cause, and remove this sleep altogether.\n\nEven when allowing replyi to be 15 or 16, the flakiness happens still with the following error:\n\nframeworks/native/libs/binder/tests/binderLibTest.cpp:1263: Failure\nValue of: server-\u003etransact(BINDER_LIB_TEST_LOCK_UNLOCK, data, \u0026reply)\nExpected: is equal to 0\n  Actual: -32",
      "parentUuid": "90e23473_eda0e35e",
      "range": {
        "startLine": 1246,
        "startChar": 19,
        "endLine": 1246,
        "endChar": 33
      },
      "revId": "69f0df51facd32a428eea800acf8db91bf53dcf0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "70f01265_3a672ede",
        "filename": "libs/binder/tests/binderLibTest.cpp",
        "patchSetId": 14
      },
      "lineNbr": 1246,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-05-18T00:02:37Z",
      "side": 1,
      "message": "Can you share the output of \u0027adb logcat *:F\u0027 after this? If the process crashed, we should be able to see the output there.",
      "parentUuid": "81021a56_f15ef1b5",
      "range": {
        "startLine": 1246,
        "startChar": 19,
        "endLine": 1246,
        "endChar": 33
      },
      "revId": "69f0df51facd32a428eea800acf8db91bf53dcf0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1869f1d9_ad9be2b6",
        "filename": "libs/binder/tests/binderLibTest.cpp",
        "patchSetId": 14
      },
      "lineNbr": 1246,
      "author": {
        "id": 1944405
      },
      "writtenOn": "2022-05-18T21:31:40Z",
      "side": 1,
      "message": "Done, thanks for the help!",
      "parentUuid": "70f01265_3a672ede",
      "range": {
        "startLine": 1246,
        "startChar": 19,
        "endLine": 1246,
        "endChar": 33
      },
      "revId": "69f0df51facd32a428eea800acf8db91bf53dcf0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "16438688_4e3a5e1d",
        "filename": "libs/binder/tests/binderLibTest.cpp",
        "patchSetId": 14
      },
      "lineNbr": 1249,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-05-17T23:28:45Z",
      "side": 1,
      "message": "A few things:\n- declare variable when used (the rest of this file is old C style, but we don\u0027t need to do things that way\n- use semantic name\n\nConsider:\n\n    int32_t threadCount \u003d reply.readInt32();",
      "range": {
        "startLine": 1249,
        "startChar": 0,
        "endLine": 1249,
        "endChar": 31
      },
      "revId": "69f0df51facd32a428eea800acf8db91bf53dcf0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fd0b6cc4_770ff922",
        "filename": "libs/binder/tests/binderLibTest.cpp",
        "patchSetId": 14
      },
      "lineNbr": 1249,
      "author": {
        "id": 1944405
      },
      "writtenOn": "2022-05-17T23:55:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "16438688_4e3a5e1d",
      "range": {
        "startLine": 1249,
        "startChar": 0,
        "endLine": 1249,
        "endChar": 31
      },
      "revId": "69f0df51facd32a428eea800acf8db91bf53dcf0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4d4922ef_9ba5dd19",
        "filename": "libs/binder/tests/binderLibTest.cpp",
        "patchSetId": 14
      },
      "lineNbr": 1250,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-05-17T23:28:45Z",
      "side": 1,
      "message": "So, this is WET (write everything twice) instead of DRY (don\u0027t repeat yourself) because the value in ProcessState.cpp (DEFAULT_MAX_BINDER_THREADS) could be out of sync with this, and we wouldn\u0027t know. Now, it doesn\u0027t really matter here because this is binder and it will never get changed, but it\u0027s still decoupled.\n\nLet me make 3 specific suggestions, for how to handle this problem.\n\n1. (we can\u0027t do it in this case) - expose DEFAULT_MAX_BINDER_THREADS in a header somewhere. Then put EXPECT_EQ(replyi, DEFAULT_MAX_BINDER_THREADS + 1 /*join*/) here. The reason I don\u0027t recommend this is that it requires exposing an API.\n\n2. (I do not recommend this in this case, but it\u0027s an improvement/okay) - add \u0027contexpr size_t kKernelThreads \u003d 15;\u0027 here. Then \u0027EXPECT_EQ(replyi, kKernelThreads + 1 /*join*/);. The reason I don\u0027t recommend this is that even though the ideas in the comment are expressed directly in the code, it\u0027s still WET.\n\n3. (here is what I do recommend) - remove the dependency on the default. Add \u0027constexpr size_t kKernelThreads \u003d 15;\u0027 at the top of the file. Then before startThreadPool, use setThreadPoolMaxThreadCount. Then use that variable here as well.",
      "range": {
        "startLine": 1250,
        "startChar": 0,
        "endLine": 1250,
        "endChar": 61
      },
      "revId": "69f0df51facd32a428eea800acf8db91bf53dcf0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5b67ee43_126e42c4",
        "filename": "libs/binder/tests/binderLibTest.cpp",
        "patchSetId": 14
      },
      "lineNbr": 1250,
      "author": {
        "id": 1944405
      },
      "writtenOn": "2022-05-17T23:55:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4d4922ef_9ba5dd19",
      "range": {
        "startLine": 1250,
        "startChar": 0,
        "endLine": 1250,
        "endChar": 61
      },
      "revId": "69f0df51facd32a428eea800acf8db91bf53dcf0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4998e3d7_11bca741",
        "filename": "libs/binder/tests/binderLibTest.cpp",
        "patchSetId": 14
      },
      "lineNbr": 1254,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-05-17T23:28:45Z",
      "side": 1,
      "message": "this comment explains what is being done, not why. Try to only explain why (also \u002715\u0027 is prone to getting out of sync)",
      "range": {
        "startLine": 1254,
        "startChar": 46,
        "endLine": 1254,
        "endChar": 89
      },
      "revId": "69f0df51facd32a428eea800acf8db91bf53dcf0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bbfc3e0f_d0e17959",
        "filename": "libs/binder/tests/binderLibTest.cpp",
        "patchSetId": 14
      },
      "lineNbr": 1254,
      "author": {
        "id": 1944405
      },
      "writtenOn": "2022-05-17T23:55:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4998e3d7_11bca741",
      "range": {
        "startLine": 1254,
        "startChar": 46,
        "endLine": 1254,
        "endChar": 89
      },
      "revId": "69f0df51facd32a428eea800acf8db91bf53dcf0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eba0ea4b_35084e14",
        "filename": "libs/binder/tests/binderLibTest.cpp",
        "patchSetId": 14
      },
      "lineNbr": 1254,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-05-18T00:02:37Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "bbfc3e0f_d0e17959",
      "range": {
        "startLine": 1254,
        "startChar": 46,
        "endLine": 1254,
        "endChar": 89
      },
      "revId": "69f0df51facd32a428eea800acf8db91bf53dcf0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "995e25c5_7edaccad",
        "filename": "libs/binder/tests/binderLibTest.cpp",
        "patchSetId": 14
      },
      "lineNbr": 1284,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-05-17T23:28:45Z",
      "side": 1,
      "message": "hey, feel free to handle/count the deadlock separately or file a bug to deal with it separately, since as discussed offline it requires a few different tricks",
      "range": {
        "startLine": 1275,
        "startChar": 0,
        "endLine": 1284,
        "endChar": 3
      },
      "revId": "69f0df51facd32a428eea800acf8db91bf53dcf0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "551f6095_5596b70f",
        "filename": "libs/binder/tests/binderLibTest.cpp",
        "patchSetId": 14
      },
      "lineNbr": 1284,
      "author": {
        "id": 1944405
      },
      "writtenOn": "2022-05-17T23:55:01Z",
      "side": 1,
      "message": "I actually added it while waiting for feedback on the previous PS.",
      "parentUuid": "995e25c5_7edaccad",
      "range": {
        "startLine": 1275,
        "startChar": 0,
        "endLine": 1284,
        "endChar": 3
      },
      "revId": "69f0df51facd32a428eea800acf8db91bf53dcf0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ec11d0c8_b3aabf6f",
        "filename": "libs/binder/tests/binderLibTest.cpp",
        "patchSetId": 14
      },
      "lineNbr": 1284,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-05-18T00:02:37Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "551f6095_5596b70f",
      "range": {
        "startLine": 1275,
        "startChar": 0,
        "endLine": 1284,
        "endChar": 3
      },
      "revId": "69f0df51facd32a428eea800acf8db91bf53dcf0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}