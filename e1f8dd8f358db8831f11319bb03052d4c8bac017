{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e409a901_2d979748",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1060831
      },
      "writtenOn": "2023-01-05T18:06:51Z",
      "side": 1,
      "message": "I\u0027m not totally comfortable with doing this here, but we\u0027ve encapsulated the call to android_get_control_socket here so this is the only available spot.",
      "revId": "e1f8dd8f358db8831f11319bb03052d4c8bac017",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "208cf5fa_ee38e3bc",
        "filename": "libs/binder/libbinder_rpc_unstable.cpp",
        "patchSetId": 1
      },
      "lineNbr": 110,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-01-05T21:28:50Z",
      "side": 1,
      "message": "should CLOEXEC be set inside this function?",
      "range": {
        "startLine": 110,
        "startChar": 24,
        "endLine": 110,
        "endChar": 50
      },
      "revId": "e1f8dd8f358db8831f11319bb03052d4c8bac017",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "34832157_365bd994",
        "filename": "libs/binder/libbinder_rpc_unstable.cpp",
        "patchSetId": 1
      },
      "lineNbr": 110,
      "author": {
        "id": 1060831
      },
      "writtenOn": "2023-01-06T10:46:46Z",
      "side": 1,
      "message": "Well, if I was creating it now, I might well do that. But I don\u0027t want to have to audit the 175 existing use cases.\n\nAlso: Anyone directly calling android_get_control_socket is free to set O_CLOEXEC if they want and if it\u0027s relevant to them. That\u0027s what I\u0027m doing here.\n\nWhat\u0027s slightly unusual I suspect is that we\u0027re doing this in library code where our caller doesn\u0027t get direct access to the socket so can\u0027t do it themselves.",
      "parentUuid": "208cf5fa_ee38e3bc",
      "range": {
        "startLine": 110,
        "startChar": 24,
        "endLine": 110,
        "endChar": 50
      },
      "revId": "e1f8dd8f358db8831f11319bb03052d4c8bac017",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b9f6e771_3b05ca5d",
        "filename": "libs/binder/libbinder_rpc_unstable.cpp",
        "patchSetId": 1
      },
      "lineNbr": 110,
      "author": {
        "id": 1060831
      },
      "writtenOn": "2023-01-06T12:04:55Z",
      "side": 1,
      "message": "Also we know that the socket here is being used by us to host a binder server, which makes it extremely unlikely we want to share it with a child process.",
      "parentUuid": "34832157_365bd994",
      "range": {
        "startLine": 110,
        "startChar": 24,
        "endLine": 110,
        "endChar": 50
      },
      "revId": "e1f8dd8f358db8831f11319bb03052d4c8bac017",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7d92e0ff_9f4ca153",
        "filename": "libs/binder/libbinder_rpc_unstable.cpp",
        "patchSetId": 1
      },
      "lineNbr": 110,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-01-07T02:34:54Z",
      "side": 1,
      "message": "Double-setting FD_CLOEXEC doesn\u0027t matter here, but consider dropping a note to the maintainer of the function please? This is the exact type feedback I would want to hear about something I\u0027m maintaining. :D",
      "parentUuid": "b9f6e771_3b05ca5d",
      "range": {
        "startLine": 110,
        "startChar": 24,
        "endLine": 110,
        "endChar": 50
      },
      "revId": "e1f8dd8f358db8831f11319bb03052d4c8bac017",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8744d38b_499220e0",
        "filename": "libs/binder/libbinder_rpc_unstable.cpp",
        "patchSetId": 1
      },
      "lineNbr": 110,
      "author": {
        "id": 1958315
      },
      "writtenOn": "2023-01-09T08:51:45Z",
      "side": 1,
      "message": "+1. Thanks for checking this!",
      "parentUuid": "7d92e0ff_9f4ca153",
      "range": {
        "startLine": 110,
        "startChar": 24,
        "endLine": 110,
        "endChar": 50
      },
      "revId": "e1f8dd8f358db8831f11319bb03052d4c8bac017",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "921bc41b_24d5d441",
        "filename": "libs/binder/libbinder_rpc_unstable.cpp",
        "patchSetId": 1
      },
      "lineNbr": 110,
      "author": {
        "id": 1060831
      },
      "writtenOn": "2023-01-09T09:08:16Z",
      "side": 1,
      "message": "Ack, will do.",
      "parentUuid": "8744d38b_499220e0",
      "range": {
        "startLine": 110,
        "startChar": 24,
        "endLine": 110,
        "endChar": 50
      },
      "revId": "e1f8dd8f358db8831f11319bb03052d4c8bac017",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "17f4715a_497323ac",
        "filename": "libs/binder/libbinder_rpc_unstable.cpp",
        "patchSetId": 1
      },
      "lineNbr": 118,
      "author": {
        "id": 1958315
      },
      "writtenOn": "2023-01-06T08:51:14Z",
      "side": 1,
      "message": "The other socket vm_payload_service handled this flag in microdroid[1]. Should we delete that if we want to set the flag here for everyone?\n\n[1] https://cs.android.com/android/platform/superproject/+/master:packages/modules/Virtualization/microdroid_manager/src/main.rs;l\u003d194;drc\u003dbe453f2959206b6b4100c4b6a4bedffd6bce2057",
      "range": {
        "startLine": 118,
        "startChar": 45,
        "endLine": 118,
        "endChar": 46
      },
      "revId": "e1f8dd8f358db8831f11319bb03052d4c8bac017",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2ed44c19_0f099c20",
        "filename": "libs/binder/libbinder_rpc_unstable.cpp",
        "patchSetId": 1
      },
      "lineNbr": 118,
      "author": {
        "id": 1060831
      },
      "writtenOn": "2023-01-06T10:46:46Z",
      "side": 1,
      "message": "That\u0027s an excellent point. I\u0027ll upload a CL for that.\n(And that\u0027s exactly the sort of code I was trying to avoid clients having to write.)",
      "parentUuid": "17f4715a_497323ac",
      "range": {
        "startLine": 118,
        "startChar": 45,
        "endLine": 118,
        "endChar": 46
      },
      "revId": "e1f8dd8f358db8831f11319bb03052d4c8bac017",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8fbbdff1_259fcecb",
        "filename": "libs/binder/libbinder_rpc_unstable.cpp",
        "patchSetId": 1
      },
      "lineNbr": 118,
      "author": {
        "id": 1060831
      },
      "writtenOn": "2023-01-06T12:04:55Z",
      "side": 1,
      "message": "Actually, no, we still need that - exec() is called before we run the server in that case.",
      "parentUuid": "2ed44c19_0f099c20",
      "range": {
        "startLine": 118,
        "startChar": 45,
        "endLine": 118,
        "endChar": 46
      },
      "revId": "e1f8dd8f358db8831f11319bb03052d4c8bac017",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}