{
  "comments": [
    {
      "key": {
        "uuid": "37fb3ac5_178d5a5d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2018-09-07T14:17:26Z",
      "side": 1,
      "message": "This is the reason why. If the client wants to use get the object before deleting it, they\u0027ll have to findObject + detachObject now. However, in most cases, they can just take advantage of the destructor/the cleanup function to get ahold of data that they need.\n\nThese functions aren\u0027t really used in many places either, and so I\u0027d rather support the common use case without the client having to worry about locks.",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 24,
        "endChar": 16
      },
      "revId": "b7dcc20588be513ad178e35a8c8b7be6a367a823",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a46e480e_92654812",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2018-09-06T18:03:38Z",
      "side": 1,
      "message": "this refers to this which has not been submitted yet:\nhttps://android-review.googlesource.com/c/platform/frameworks/native/+/748214/3/libs/binder/ndk/AIBinder.cpp#149\n\n(and will not be if this change makes it in first)",
      "range": {
        "startLine": 29,
        "startChar": 6,
        "endLine": 30,
        "endChar": 52
      },
      "revId": "b7dcc20588be513ad178e35a8c8b7be6a367a823",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c20bb75d_5ded4568",
        "filename": "libs/binder/BpBinder.cpp",
        "patchSetId": 1
      },
      "lineNbr": 88,
      "author": {
        "id": 1013030
      },
      "writtenOn": "2018-09-07T11:41:33Z",
      "side": 1,
      "message": "I think the semantics of detach shouldn\u0027t imply deletion; it suggests the lifecycle of the object is no longer tied to this object, but that the object continues to exist.\n\nI think this is what you\u0027re trying to say in the commit message as well, by saying that it would be nice if we could somehow force the caller to clean up instead.\n\nWhy can\u0027t you let the BpHwBinder destructor clean this up? I guess it\u0027s because you hold a wp\u003c\u003e to the BpHwBinder in the attached object itself? I\u0027d say there\u0027s nothing wrong with code that cleans up the reference manually (as you have it right now), but if you really want to deal with this here, I think we should just add a new function.",
      "range": {
        "startLine": 87,
        "startChar": 0,
        "endLine": 88,
        "endChar": 1
      },
      "revId": "b7dcc20588be513ad178e35a8c8b7be6a367a823",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1e81f672_1aac2d52",
        "filename": "libs/binder/BpBinder.cpp",
        "patchSetId": 1
      },
      "lineNbr": 97,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2018-09-06T18:03:38Z",
      "side": 1,
      "message": "I considered using \u0027ssize_t removeItemsAt(size_t index, size_t count \u003d 1)\u0027 here instead, but the plural \u0027Items\u0027 looks so vile to me in this context, I couldn\u0027t bring myself to do it. Here I have traded aesthetics for correctness, I guess...",
      "range": {
        "startLine": 97,
        "startChar": 13,
        "endLine": 97,
        "endChar": 23
      },
      "revId": "b7dcc20588be513ad178e35a8c8b7be6a367a823",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}