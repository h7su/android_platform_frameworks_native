{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "bbf79219_d6a7369c",
        "filename": "libs/binder/include_rpc_unstable/binder_rpc_unstable.hpp",
        "patchSetId": 43
      },
      "lineNbr": 32,
      "author": {
        "id": 1416371
      },
      "writtenOn": "2024-01-17T16:58:11Z",
      "side": 1,
      "message": "Why is this declaration not conditional?",
      "revId": "9c167672b6252bee43664a3c254635f37bb3408d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b62f6f63_c54f020c",
        "filename": "libs/binder/include_rpc_unstable/binder_rpc_unstable.hpp",
        "patchSetId": 43
      },
      "lineNbr": 32,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2024-01-18T03:05:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bbf79219_d6a7369c",
      "revId": "9c167672b6252bee43664a3c254635f37bb3408d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5adabfb7_f2488631",
        "filename": "libs/binder/trusty/rust/binder_rpc_server/src/server.rs",
        "patchSetId": 43
      },
      "lineNbr": 21,
      "author": {
        "id": 1416371
      },
      "writtenOn": "2024-01-17T16:58:11Z",
      "side": 1,
      "message": "We should maybe visibility restrict foreign_types and not use it.\n\nIt\u0027s imported because `openssl` (which we will likely be restricting soon too) depends on it. However, the version we have imported is 0.3 because that\u0027s what `openssl` requires, which is 6 years old, and the crate is now at 0.5 (update is still 4 years old).\n\nI see that the other RPC server code uses this, so we\u0027ve already gone down this rabbit hole a bit.",
      "revId": "9c167672b6252bee43664a3c254635f37bb3408d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "255f305e_fc675ff5",
        "filename": "libs/binder/trusty/rust/binder_rpc_server/src/server.rs",
        "patchSetId": 43
      },
      "lineNbr": 21,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2024-01-18T01:14:22Z",
      "side": 1,
      "message": "Yeah I copied this from the old rpcbinder code. I think we could avoid it and implement what we need manually, especially since we\u0027re wrapping the native `RpcServerTrusty` instead of exporting it directly.\n\nI\u0027ll give it a try.",
      "parentUuid": "5adabfb7_f2488631",
      "revId": "9c167672b6252bee43664a3c254635f37bb3408d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bda50e94_a7eb04fa",
        "filename": "libs/binder/trusty/rust/binder_rpc_server/src/server.rs",
        "patchSetId": 43
      },
      "lineNbr": 21,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2024-01-18T03:05:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "255f305e_fc675ff5",
      "revId": "9c167672b6252bee43664a3c254635f37bb3408d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b330d817_6eecddb5",
        "filename": "libs/binder/trusty/rust/binder_rpc_server/src/server.rs",
        "patchSetId": 43
      },
      "lineNbr": 25,
      "author": {
        "id": 1416371
      },
      "writtenOn": "2024-01-17T16:58:11Z",
      "side": 1,
      "message": "Why can\u0027t you use `std::ffi::c_void` here? Does Trusty have two non-equal `c_void`s?",
      "revId": "9c167672b6252bee43664a3c254635f37bb3408d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6a869302_a94f2324",
        "filename": "libs/binder/trusty/rust/binder_rpc_server/src/server.rs",
        "patchSetId": 43
      },
      "lineNbr": 25,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2024-01-18T01:14:22Z",
      "side": 1,
      "message": "\u003e  Does Trusty have two non-equal c_voids?\n\nI think so, because it didn\u0027t have `std` at first. We should probably fix that now.",
      "parentUuid": "b330d817_6eecddb5",
      "revId": "9c167672b6252bee43664a3c254635f37bb3408d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "136b3d13_1748545c",
        "filename": "libs/binder/trusty/rust/binder_rpc_server/src/server.rs",
        "patchSetId": 43
      },
      "lineNbr": 25,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2024-01-18T03:05:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6a869302_a94f2324",
      "revId": "9c167672b6252bee43664a3c254635f37bb3408d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ff300318_671e0523",
        "filename": "libs/binder/trusty/rust/binder_rpc_server/src/server.rs",
        "patchSetId": 43
      },
      "lineNbr": 35,
      "author": {
        "id": 1416371
      },
      "writtenOn": "2024-01-17T16:58:11Z",
      "side": 1,
      "message": "Where are we borrowing the CRpcServer? If we\u0027re not borrowing it, why are we using foreign_type and declaring this?",
      "revId": "9c167672b6252bee43664a3c254635f37bb3408d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3811af27_557d4729",
        "filename": "libs/binder/trusty/rust/binder_rpc_server/src/server.rs",
        "patchSetId": 43
      },
      "lineNbr": 35,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2024-01-18T01:14:22Z",
      "side": 1,
      "message": "Copied from rpcbinder. I think the macro requires this second type name, but we\u0027re not using it for anything. I\u0027ll try to get rid of it.",
      "parentUuid": "ff300318_671e0523",
      "revId": "9c167672b6252bee43664a3c254635f37bb3408d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "340be247_535bb27b",
        "filename": "libs/binder/trusty/rust/binder_rpc_server/src/server.rs",
        "patchSetId": 43
      },
      "lineNbr": 35,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2024-01-18T03:05:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3811af27_557d4729",
      "revId": "9c167672b6252bee43664a3c254635f37bb3408d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f6947b34_d2d06dc2",
        "filename": "libs/binder/trusty/rust/binder_rpc_server/src/server.rs",
        "patchSetId": 43
      },
      "lineNbr": 38,
      "author": {
        "id": 1416371
      },
      "writtenOn": "2024-01-17T16:58:11Z",
      "side": 1,
      "message": "This safety comment doesn\u0027t seem relevant to implementing Send? Send is about safety of transferring ownership of this to another thread.",
      "range": {
        "startLine": 38,
        "startChar": 37,
        "endLine": 38,
        "endChar": 51
      },
      "revId": "9c167672b6252bee43664a3c254635f37bb3408d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b2da6bc7_c93eaa95",
        "filename": "libs/binder/trusty/rust/binder_rpc_server/src/server.rs",
        "patchSetId": 43
      },
      "lineNbr": 38,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2024-01-18T03:05:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f6947b34_d2d06dc2",
      "range": {
        "startLine": 38,
        "startChar": 37,
        "endLine": 38,
        "endChar": 51
      },
      "revId": "9c167672b6252bee43664a3c254635f37bb3408d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "60caa26d_5bca83f4",
        "filename": "libs/binder/trusty/rust/binder_rpc_server/src/server.rs",
        "patchSetId": 43
      },
      "lineNbr": 49,
      "author": {
        "id": 1416371
      },
      "writtenOn": "2024-01-17T16:58:11Z",
      "side": 1,
      "message": "Two alternate patterns to consider here:\n1. Change per_session_cb_wrapper to take an RpcServer rather than a `*mut Box\u003cdyn PerSessionCallback\u003e\u003e`, then call the per_session_cb directly. It will then be \"used\", and you don\u0027t have a pointer",
      "revId": "9c167672b6252bee43664a3c254635f37bb3408d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "94a564f6_0b8bd3c9",
        "filename": "libs/binder/trusty/rust/binder_rpc_server/src/server.rs",
        "patchSetId": 43
      },
      "lineNbr": 49,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2024-01-18T03:10:45Z",
      "side": 1,
      "message": "Looks like your comment cut off early. What was the second one?",
      "parentUuid": "60caa26d_5bca83f4",
      "revId": "9c167672b6252bee43664a3c254635f37bb3408d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cadb1028_fa90ae06",
        "filename": "libs/binder/trusty/rust/binder_rpc_server/src/server.rs",
        "patchSetId": 43
      },
      "lineNbr": 49,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2024-01-19T02:18:24Z",
      "side": 1,
      "message": "Switched to `Pin\u003cBox\u003cRpcServer\u003e\u003e`.",
      "parentUuid": "94a564f6_0b8bd3c9",
      "revId": "9c167672b6252bee43664a3c254635f37bb3408d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}