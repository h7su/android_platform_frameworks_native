{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "37bbfd2d_471dbf61",
        "filename": "libs/binder/IServiceManager.cpp",
        "patchSetId": 4
      },
      "lineNbr": 403,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-04-30T00:41:49Z",
      "side": 1,
      "message": "Btw, we do want to deadlock (to make debugging easier - sent you the disgracefully explode doc on chat). The problem that we have no signal for now is if we wait 1s for a service to start and then we get the service (very hard to notice a 1s delay that happens randomly)",
      "range": {
        "startLine": 403,
        "startChar": 0,
        "endLine": 403,
        "endChar": 27
      },
      "revId": "cebc6c7b2d25684a6d171aac45d1c7f4a482d15e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d6a1b88e_2ca99102",
        "filename": "libs/binder/tests/binderLibTest.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1245,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-04-30T00:41:49Z",
      "side": 1,
      "message": "This would need to be something like String16(\"SomeUnstartedService\")",
      "range": {
        "startLine": 1245,
        "startChar": 48,
        "endLine": 1245,
        "endChar": 68
      },
      "revId": "cebc6c7b2d25684a6d171aac45d1c7f4a482d15e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c2a1ca18_c1364f14",
        "filename": "libs/binder/tests/binderLibTest.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1245,
      "author": {
        "id": 1944405
      },
      "writtenOn": "2022-05-03T16:54:55Z",
      "side": 1,
      "message": "I left it as is right now and not as a String as I\u0027m not sure if we have a mock Service that isn\u0027t run and we could use. However this makes me want to ask, are we able to insert ANY name and it\u0027ll be interpreted as a service? (thus your recommendation).",
      "parentUuid": "d6a1b88e_2ca99102",
      "range": {
        "startLine": 1245,
        "startChar": 48,
        "endLine": 1245,
        "endChar": 68
      },
      "revId": "cebc6c7b2d25684a6d171aac45d1c7f4a482d15e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f5dcdae7_4ff32ca5",
        "filename": "libs/binder/tests/binderLibTest.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1245,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-05-03T17:00:39Z",
      "side": 1,
      "message": "Each test will typically create its own server (with addServer). If you waitForService which doesn\u0027t exist, it will pause forever. So, waitForService, to use this without deadlocking, you would need to call \u0027addService\u0027 first so that the service is registered with servicemanager.\n\nservicemanager will have a list of services in it, so if you getService/waitForService/checkService, addService would need to be called first by some process (and you can use list service to see the services).\n\nFor this test, you will probably want to avoid calling servicemanager (since getting the same service back will return a pointer to the local object).",
      "parentUuid": "c2a1ca18_c1364f14",
      "range": {
        "startLine": 1245,
        "startChar": 48,
        "endLine": 1245,
        "endChar": 68
      },
      "revId": "cebc6c7b2d25684a6d171aac45d1c7f4a482d15e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e765e54b_2ca388b3",
        "filename": "libs/binder/tests/binderLibTest.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1245,
      "author": {
        "id": 1944405
      },
      "writtenOn": "2022-05-04T21:38:05Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "f5dcdae7_4ff32ca5",
      "range": {
        "startLine": 1245,
        "startChar": 48,
        "endLine": 1245,
        "endChar": 68
      },
      "revId": "cebc6c7b2d25684a6d171aac45d1c7f4a482d15e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "40539e98_a35ea653",
        "filename": "libs/binder/tests/binderLibTest.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1248,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-04-30T00:41:49Z",
      "side": 1,
      "message": "e.g. \u0027sm-\u003eaddService(\"...\", sp\u003cBBinder\u003e::make())\u0027\n\nwould add a new empty service\n\n\nMaybe this is what you mean:\n\n    sp\u003cIBinder\u003e service \u003d sp\u003cBBinder\u003e::make();\n    status_t status \u003d sm-\u003eaddService(String16(\"SomeUnstartedService\"), service);\n    EXPECT_EQ(OK, status);\n\n\nBtw, I suspect the confusion is that I told you that \u0027addService\u0027 creates a new service, but it is actually \u0027::addServer()\u0027 which does that. \u0027sm-\u003eaddService\u0027 registers an already created service with servicemanager.",
      "range": {
        "startLine": 1248,
        "startChar": 32,
        "endLine": 1248,
        "endChar": 52
      },
      "revId": "cebc6c7b2d25684a6d171aac45d1c7f4a482d15e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c39ca669_c2b28d7a",
        "filename": "libs/binder/tests/binderLibTest.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1248,
      "author": {
        "id": 1944405
      },
      "writtenOn": "2022-05-03T16:54:55Z",
      "side": 1,
      "message": "The confusion actually stems from \u0027addServer\u0027 returning a pointer to a Binder instance. That\u0027s why I thought more of \u0027addService\u0027 over \u0027addServer\u0027.\n\nFollowing that logic, would I need to \u0027addServer\u0027 followed by the rest? (still confused)",
      "parentUuid": "40539e98_a35ea653",
      "range": {
        "startLine": 1248,
        "startChar": 32,
        "endLine": 1248,
        "endChar": 52
      },
      "revId": "cebc6c7b2d25684a6d171aac45d1c7f4a482d15e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0755736f_bad704e3",
        "filename": "libs/binder/tests/binderLibTest.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1248,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-05-03T17:00:39Z",
      "side": 1,
      "message": "Right, you\u0027ll want to use \u0027addServer\u0027 to create another process and get ahold of a server that is there.\n\nThen you could:\n- add a transaction which returns the threadpool count\n- add some code which makes many transactions at the same time, to force the threadpool count to the max\n\nThough to get this patch started, it might be easier to add an invariant elsewhere, so that each tests tests the threadcount in real time when new threads get started/created.",
      "parentUuid": "c39ca669_c2b28d7a",
      "range": {
        "startLine": 1248,
        "startChar": 32,
        "endLine": 1248,
        "endChar": 52
      },
      "revId": "cebc6c7b2d25684a6d171aac45d1c7f4a482d15e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "df27f073_dd031394",
        "filename": "libs/binder/tests/binderLibTest.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1248,
      "author": {
        "id": 1944405
      },
      "writtenOn": "2022-05-04T21:38:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0755736f_bad704e3",
      "range": {
        "startLine": 1248,
        "startChar": 32,
        "endLine": 1248,
        "endChar": 52
      },
      "revId": "cebc6c7b2d25684a6d171aac45d1c7f4a482d15e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a4e51635_9f0c74fa",
        "filename": "libs/binder/tests/binderLibTest.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1251,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-04-30T00:41:49Z",
      "side": 1,
      "message": "I would expect this to happen sometimes (with some chance, if the kernel asks for a new thread to be started)",
      "range": {
        "startLine": 1250,
        "startChar": 6,
        "endLine": 1251,
        "endChar": 67
      },
      "revId": "cebc6c7b2d25684a6d171aac45d1c7f4a482d15e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}