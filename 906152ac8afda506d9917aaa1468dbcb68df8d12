{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e4080b97_13773bb8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 11,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2021-06-30T07:17:04Z",
      "side": 1,
      "message": "Does this assume that the new hook mechanism is used only to attach/detach Java threads? What happens if a client has registered a different hook?",
      "range": {
        "startLine": 10,
        "startChar": 34,
        "endLine": 11,
        "endChar": 34
      },
      "revId": "906152ac8afda506d9917aaa1468dbcb68df8d12",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "77a55b15_65364fc9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 11,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-06-30T22:43:12Z",
      "side": 1,
      "message": "\u003e Does this assume that the new hook mechanism is used only to attach/detach Java threads?\n\nFrom libbinder\u0027s perspective, the hook can be used however the client wants. Right now it is only used for attaching / detaching Java threads.\n\nHence, this text is only in the commit message, not in the code comments.",
      "parentUuid": "e4080b97_13773bb8",
      "range": {
        "startLine": 10,
        "startChar": 34,
        "endLine": 11,
        "endChar": 34
      },
      "revId": "906152ac8afda506d9917aaa1468dbcb68df8d12",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c565e18b_7651dacd",
        "filename": "libs/binder/RpcSession.cpp",
        "patchSetId": 3
      },
      "lineNbr": 286,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2021-06-30T07:17:04Z",
      "side": 1,
      "message": "This looks odd to me because this parameter is used for both Pre and Post hooks. I know that this works because the type of the two functions are the same, but still that doesn\u0027t look intuitive to me.\n\nI don\u0027t have a strong opinion, but wish that this can be written as ...\n\nvoid runHook(bool pre) {\n    if (pre) {getThreadPreHook(...);}\n    else {getThreadPostHook(...);}\n    ...\n}\n\nor\n\ntemplate\u003ctypename F\u003e\nvoid runHook(F getter) { ... }\n\nthough the latter generates slightly bigger code.",
      "range": {
        "startLine": 286,
        "startChar": 17,
        "endLine": 286,
        "endChar": 44
      },
      "revId": "906152ac8afda506d9917aaa1468dbcb68df8d12",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cd8ced59_d3fc7134",
        "filename": "libs/binder/RpcSession.cpp",
        "patchSetId": 3
      },
      "lineNbr": 286,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2021-06-30T16:36:20Z",
      "side": 1,
      "message": "can we avoid exposing the getters completely?\n\nthis seems very weird \"action at a distance\" to me --- someone set a global thread hook (which is itself a somewhat confusing concept --- i\u0027d assumed they were meant to be per-thread, not global) and it magically infects this code?",
      "parentUuid": "c565e18b_7651dacd",
      "range": {
        "startLine": 286,
        "startChar": 17,
        "endLine": 286,
        "endChar": 44
      },
      "revId": "906152ac8afda506d9917aaa1468dbcb68df8d12",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "72932ee8_ad873bd0",
        "filename": "libs/binder/RpcSession.cpp",
        "patchSetId": 3
      },
      "lineNbr": 286,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-06-30T16:52:33Z",
      "side": 1,
      "message": "agreed, see:\nhttps://android-review.googlesource.com/c/platform/system/core/+/1751787/5/libutils/Threads.cpp#67\n\nThough, I know the pre/post-hook things might have been my suggestion, but I\u0027m wondering, could we use javaCreateThreadEtc here? Is it possible to create a android_thread_func_t function here, and we can pass this to the existing API?",
      "parentUuid": "cd8ced59_d3fc7134",
      "range": {
        "startLine": 286,
        "startChar": 17,
        "endLine": 286,
        "endChar": 44
      },
      "revId": "906152ac8afda506d9917aaa1468dbcb68df8d12",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aa2be175_0c7696fa",
        "filename": "libs/binder/RpcSession.cpp",
        "patchSetId": 3
      },
      "lineNbr": 286,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-06-30T17:06:56Z",
      "side": 1,
      "message": "oops see also https://android-review.googlesource.com/c/platform/frameworks/base/+/1751551/1/core/jni/AndroidRuntime.cpp#1593\n\nPlease ignore the javaCreateThreadEtc/android_thread_func_t suggestion. We needed the hooks specifically because we want to attach the JVM even for some threads which we don\u0027t create (where we join).",
      "parentUuid": "72932ee8_ad873bd0",
      "range": {
        "startLine": 286,
        "startChar": 17,
        "endLine": 286,
        "endChar": 44
      },
      "revId": "906152ac8afda506d9917aaa1468dbcb68df8d12",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "44d5aece_a954eaad",
        "filename": "libs/binder/RpcSession.cpp",
        "patchSetId": 3
      },
      "lineNbr": 286,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-06-30T22:33:05Z",
      "side": 1,
      "message": "They were indeed meant to be global, not per-thread. See my explanation in https://android-review.googlesource.com/c/platform/system/core/+/1751787/5..8/libutils/Threads.cpp#b67.\n\nIt is meant to magically infects this code, indeed. This is so that libbinder can call vm-\u003eAttachThread in zygote and not call it in other processes. libbinder itself doesn\u0027t know anything about JVM.",
      "parentUuid": "aa2be175_0c7696fa",
      "range": {
        "startLine": 286,
        "startChar": 17,
        "endLine": 286,
        "endChar": 44
      },
      "revId": "906152ac8afda506d9917aaa1468dbcb68df8d12",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bd0ab5b0_91da38d7",
        "filename": "libs/binder/RpcSession.cpp",
        "patchSetId": 3
      },
      "lineNbr": 286,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-06-30T22:43:12Z",
      "side": 1,
      "message": "Resolving. Elliot, do you have any concerns with this?",
      "parentUuid": "44d5aece_a954eaad",
      "range": {
        "startLine": 286,
        "startChar": 17,
        "endLine": 286,
        "endChar": 44
      },
      "revId": "906152ac8afda506d9917aaa1468dbcb68df8d12",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "10800975_5dc7630e",
        "filename": "libs/binder/RpcSession.cpp",
        "patchSetId": 3
      },
      "lineNbr": 286,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2021-06-30T22:48:48Z",
      "side": 1,
      "message": "\u003e Elliot, do you have any concerns with this?\n\nyeah, i really don\u0027t like \"It is meant to magically infects this code, indeed\". that feels like we\u0027re making things worse from a libutils/pthread_create/std::thread interop perspective.\n\nif libbinder needs to know whether it\u0027s running in the zygote or not, can\u0027t it use a weak symbol or something?",
      "parentUuid": "bd0ab5b0_91da38d7",
      "range": {
        "startLine": 286,
        "startChar": 17,
        "endLine": 286,
        "endChar": 44
      },
      "revId": "906152ac8afda506d9917aaa1468dbcb68df8d12",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bf26c37c_349e4973",
        "filename": "libs/binder/RpcSession.cpp",
        "patchSetId": 3
      },
      "lineNbr": 296,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2021-06-30T07:17:04Z",
      "side": 1,
      "message": "I don\u0027t understand what the the name is used for in the hook routines, especially given that it falls back to the default name \u0027RpcBinder\u0027.",
      "range": {
        "startLine": 292,
        "startChar": 0,
        "endLine": 296,
        "endChar": 9
      },
      "revId": "906152ac8afda506d9917aaa1468dbcb68df8d12",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "683bad83_41dec337",
        "filename": "libs/binder/RpcSession.cpp",
        "patchSetId": 3
      },
      "lineNbr": 296,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-06-30T16:34:21Z",
      "side": 1,
      "message": "It\u0027s used as the thread name. +1 - see \u0027ProcessState::makeBinderThreadName\u0027. I don\u0027t think we\u0027ll need any more information in the thread name (we don\u0027t really need numbers - we have TIDs). Maybe call it RpcSessionThread for now?",
      "parentUuid": "bf26c37c_349e4973",
      "range": {
        "startLine": 292,
        "startChar": 0,
        "endLine": 296,
        "endChar": 9
      },
      "revId": "906152ac8afda506d9917aaa1468dbcb68df8d12",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3fd8ca06_45317ccd",
        "filename": "libs/binder/RpcSession.cpp",
        "patchSetId": 3
      },
      "lineNbr": 296,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-06-30T22:33:05Z",
      "side": 1,
      "message": "L293 is meant to be the default thread name. Normally, the thread name should be retrieved in L295.\n\nThe hook itself requires me to provide a thread name for logging purposes:\n\nhttps://android-review.googlesource.com/c/platform/frameworks/base/+/1751551/1/core/jni/AndroidRuntime.cpp#1349",
      "parentUuid": "683bad83_41dec337",
      "range": {
        "startLine": 292,
        "startChar": 0,
        "endLine": 296,
        "endChar": 9
      },
      "revId": "906152ac8afda506d9917aaa1468dbcb68df8d12",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a9b8514b_72d9987e",
        "filename": "libs/binder/RpcSession.cpp",
        "patchSetId": 3
      },
      "lineNbr": 296,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-06-30T22:43:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3fd8ca06_45317ccd",
      "range": {
        "startLine": 292,
        "startChar": 0,
        "endLine": 296,
        "endChar": 9
      },
      "revId": "906152ac8afda506d9917aaa1468dbcb68df8d12",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}