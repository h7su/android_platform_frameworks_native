{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "1598e0d5_9602eb07",
        "filename": "libs/binder/RpcServer.cpp",
        "patchSetId": 18
      },
      "lineNbr": 184,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-08-02T20:20:01Z",
      "side": 1,
      "message": "nit: is there any reason to do this on the main server thread?",
      "range": {
        "startLine": 179,
        "startChar": 0,
        "endLine": 184,
        "endChar": 95
      },
      "revId": "034d562fc9cd020c31cf07f32eb1178f9f4cc5ce",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a4c716eb_17e20508",
        "filename": "libs/binder/RpcServer.cpp",
        "patchSetId": 18
      },
      "lineNbr": 184,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-08-03T16:49:27Z",
      "side": 1,
      "message": "What do you mean? This should only be done once right after accept(), not multiple times in individual threads.",
      "parentUuid": "1598e0d5_9602eb07",
      "range": {
        "startLine": 179,
        "startChar": 0,
        "endLine": 184,
        "endChar": 95
      },
      "revId": "034d562fc9cd020c31cf07f32eb1178f9f4cc5ce",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fb91f014_62403088",
        "filename": "libs/binder/RpcServer.cpp",
        "patchSetId": 18
      },
      "lineNbr": 184,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-08-03T21:46:30Z",
      "side": 1,
      "message": "Each thread corresponds to one accept (even if the thread doesn\u0027t stick around).\n\nThis main thread repeatedly accepts, and then it spawns a new thread in order to handle the accepted thread.\n\nFor instance, if \u0027newTransport\u0027 could ever block, then you can DOS the server completely.",
      "parentUuid": "a4c716eb_17e20508",
      "range": {
        "startLine": 179,
        "startChar": 0,
        "endLine": 184,
        "endChar": 95
      },
      "revId": "034d562fc9cd020c31cf07f32eb1178f9f4cc5ce",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dd4f6d88_414b9c2f",
        "filename": "libs/binder/RpcServer.cpp",
        "patchSetId": 18
      },
      "lineNbr": 184,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-08-03T23:58:09Z",
      "side": 1,
      "message": "You have a very good point. Indeed, newTransport could block if the client never writes anything to the socket.\n\nSee new PS.",
      "parentUuid": "fb91f014_62403088",
      "range": {
        "startLine": 179,
        "startChar": 0,
        "endLine": 184,
        "endChar": 95
      },
      "revId": "034d562fc9cd020c31cf07f32eb1178f9f4cc5ce",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3489bd7a_6804775d",
        "filename": "libs/binder/RpcState.cpp",
        "patchSetId": 18
      },
      "lineNbr": 285,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-08-02T20:20:01Z",
      "side": 1,
      "message": "nit: should we be using unique_ptr\u0026?",
      "range": {
        "startLine": 285,
        "startChar": 91,
        "endLine": 285,
        "endChar": 97
      },
      "revId": "034d562fc9cd020c31cf07f32eb1178f9f4cc5ce",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ffc16197_565cffe9",
        "filename": "libs/binder/RpcState.cpp",
        "patchSetId": 18
      },
      "lineNbr": 285,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-08-03T16:49:27Z",
      "side": 1,
      "message": "Does interruptable*Fully require the caller to **own** this RpcTransport? No. So I don\u0027t think it should be unique_ptr\u0026.",
      "parentUuid": "3489bd7a_6804775d",
      "range": {
        "startLine": 285,
        "startChar": 91,
        "endLine": 285,
        "endChar": 97
      },
      "revId": "034d562fc9cd020c31cf07f32eb1178f9f4cc5ce",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "093f9f3c_20007802",
        "filename": "libs/binder/include/binder/RpcServer.h",
        "patchSetId": 18
      },
      "lineNbr": 36,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-08-02T20:20:01Z",
      "side": 1,
      "message": "unneeded if RpcTransport.h imported?",
      "range": {
        "startLine": 36,
        "startChar": 0,
        "endLine": 36,
        "endChar": 19
      },
      "revId": "034d562fc9cd020c31cf07f32eb1178f9f4cc5ce",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "db85cdfd_ac899d26",
        "filename": "libs/binder/include/binder/RpcServer.h",
        "patchSetId": 18
      },
      "lineNbr": 36,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-08-03T17:40:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "093f9f3c_20007802",
      "range": {
        "startLine": 36,
        "startChar": 0,
        "endLine": 36,
        "endChar": 19
      },
      "revId": "034d562fc9cd020c31cf07f32eb1178f9f4cc5ce",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "73f5585e_e0d5d83e",
        "filename": "libs/binder/tests/parcel_fuzzer/random_parcel.cpp",
        "patchSetId": 18
      },
      "lineNbr": 39,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-08-02T20:20:01Z",
      "side": 1,
      "message": "nullptr/default arg should work here?",
      "range": {
        "startLine": 39,
        "startChar": 0,
        "endLine": 39,
        "endChar": 87
      },
      "revId": "034d562fc9cd020c31cf07f32eb1178f9f4cc5ce",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dd4023d4_a8e616f0",
        "filename": "libs/binder/tests/parcel_fuzzer/random_parcel.cpp",
        "patchSetId": 18
      },
      "lineNbr": 39,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-08-03T16:49:27Z",
      "side": 1,
      "message": "It should work. But for L40 (addNullDebuggingClient), only raw sockets works. So I think it is better to make it explicit.\n\nThat\u0027s also the reason why RpcTransportRaw is in the exported headers of libbinder.",
      "parentUuid": "73f5585e_e0d5d83e",
      "range": {
        "startLine": 39,
        "startChar": 0,
        "endLine": 39,
        "endChar": 87
      },
      "revId": "034d562fc9cd020c31cf07f32eb1178f9f4cc5ce",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}