{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "6387656f_705ac570",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1884457
      },
      "writtenOn": "2023-01-05T18:57:47Z",
      "side": 1,
      "message": "ping for review.",
      "revId": "8a2b3c22ca9e3b3bdef8f9eeb9ce62faddc37e6e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6d93d976_871dd829",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1884457
      },
      "writtenOn": "2023-01-06T19:02:32Z",
      "side": 1,
      "message": "ping for view.",
      "revId": "8a2b3c22ca9e3b3bdef8f9eeb9ce62faddc37e6e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "afb19e11_ac7f467e",
        "filename": "services/surfaceflinger/DisplayHardware/HWC2.cpp",
        "patchSetId": 3
      },
      "lineNbr": 833,
      "author": {
        "id": 1012974
      },
      "writtenOn": "2023-01-06T19:44:36Z",
      "side": 1,
      "message": "I\u0027m not very familiar with per frame metadata, but I\u0027ll note that previously we would\u0027ve still done the below work, whereas now we\u0027re returning early. I\u0027m not clear on why this change was made - can you explain why in the commit message?",
      "range": {
        "startLine": 833,
        "startChar": 12,
        "endLine": 833,
        "endChar": 24
      },
      "revId": "8a2b3c22ca9e3b3bdef8f9eeb9ce62faddc37e6e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "63f4b3fc_aa94cdee",
        "filename": "services/surfaceflinger/DisplayHardware/HWC2.cpp",
        "patchSetId": 3
      },
      "lineNbr": 833,
      "author": {
        "id": 1470474
      },
      "writtenOn": "2023-01-09T08:18:02Z",
      "side": 1,
      "message": "I don\u0027t think it matters too much - the only way setLayerPerFrameMetadata can error out is if composer 2.1 is installed on the device. But the below code would only really work for composer 2.3+ since that\u0027s when the per frame metadata blobs started being supported.\n\nSo returning early would save a few instructions on older chips.",
      "parentUuid": "afb19e11_ac7f467e",
      "range": {
        "startLine": 833,
        "startChar": 12,
        "endLine": 833,
        "endChar": 24
      },
      "revId": "8a2b3c22ca9e3b3bdef8f9eeb9ce62faddc37e6e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "23336ef2_39ac68b7",
        "filename": "services/surfaceflinger/DisplayHardware/HWC2.cpp",
        "patchSetId": 3
      },
      "lineNbr": 835,
      "author": {
        "id": 1012974
      },
      "writtenOn": "2023-01-06T19:44:36Z",
      "side": 1,
      "message": "nit: Another way to limit the scope of this variable would be to put it in the if statement, e.g.\n\n```\nif (const auto error \u003d static_cast\u003cError\u003e(...); error !\u003d Error::NONE) {\n    return error;\n}\n```\n\nThat seems a little bit cleaner to me, but I don\u0027t have a strong preference.",
      "range": {
        "startLine": 829,
        "startChar": 0,
        "endLine": 835,
        "endChar": 5
      },
      "revId": "8a2b3c22ca9e3b3bdef8f9eeb9ce62faddc37e6e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "17f09bcf_19f1442d",
        "filename": "services/surfaceflinger/DisplayHardware/HWC2.cpp",
        "patchSetId": 3
      },
      "lineNbr": 853,
      "author": {
        "id": 1012974
      },
      "writtenOn": "2023-01-06T19:44:36Z",
      "side": 1,
      "message": "What is the intent of this block? Because of the `||` and the fact that these are separate `Error`s that don\u0027t overlap, won\u0027t this just *always* return `error`?",
      "range": {
        "startLine": 851,
        "startChar": 0,
        "endLine": 853,
        "endChar": 9
      },
      "revId": "8a2b3c22ca9e3b3bdef8f9eeb9ce62faddc37e6e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "43f1221f_4d052e63",
        "filename": "services/surfaceflinger/DisplayHardware/HWC2.cpp",
        "patchSetId": 3
      },
      "lineNbr": 853,
      "author": {
        "id": 1470474
      },
      "writtenOn": "2023-01-09T08:18:02Z",
      "side": 1,
      "message": "I think this needs to be an AND predicate",
      "parentUuid": "17f09bcf_19f1442d",
      "range": {
        "startLine": 851,
        "startChar": 0,
        "endLine": 853,
        "endChar": 9
      },
      "revId": "8a2b3c22ca9e3b3bdef8f9eeb9ce62faddc37e6e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "40481f8b_90acd001",
        "filename": "services/surfaceflinger/DisplayHardware/HWC2.cpp",
        "patchSetId": 3
      },
      "lineNbr": 853,
      "author": {
        "id": 1012974
      },
      "writtenOn": "2023-01-09T14:49:07Z",
      "side": 1,
      "message": "i.e.\n\n```\nif (error !\u003d Error::NONE \u0026\u0026 error !\u003d Error::UNSUPPORTED) {\n    return error;\n}\n```\n?\n\nThat would mean that `UNSUPPORTED` should effectively be ignored, and we\u0027ll return `NONE` instead? Perhaps that\u0027s the right behavior, but it could probably use a comment explaining it?\n\nThe simplest thing to do here would be to just `return error`. If we want to treat `UNSUPPORTED` as `NONE` (which is what the AND predicate would do, unless I\u0027m missing something), I think it\u0027d be clearer as something like:\n\n```\nif (error \u003d\u003d Error::UNSUPPORTED) {\n    // This isn\u0027t supported, but the caller doesn\u0027t care because\n    // \u003c insert reason here \u003e\n    return Error::NONE;\n}\n\nreturn error;\n```",
      "parentUuid": "43f1221f_4d052e63",
      "range": {
        "startLine": 851,
        "startChar": 0,
        "endLine": 853,
        "endChar": 9
      },
      "revId": "8a2b3c22ca9e3b3bdef8f9eeb9ce62faddc37e6e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}