{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "63e6fe65_1218d548",
        "filename": "libs/binder/BpBinder.cpp",
        "patchSetId": 2
      },
      "lineNbr": 159,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-09-10T23:53:21Z",
      "side": 1,
      "message": "Is it intentional that this (and almost all changes in this CL) a uint64_t, not an RpcWireAddress?\n\nIf so, why?",
      "range": {
        "startLine": 159,
        "startChar": 61,
        "endLine": 159,
        "endChar": 69
      },
      "revId": "5623d1a7fac2fca2d8cd51af65a764aadd31bc43",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b67824aa_30920775",
        "filename": "libs/binder/BpBinder.cpp",
        "patchSetId": 2
      },
      "lineNbr": 159,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-09-10T23:54:25Z",
      "side": 1,
      "message": "it\u0027s to avoid exposing the RpcWireAddress structure in the headers and keep it by the wire protocol stuff. Do you think it\u0027s being too protective?",
      "parentUuid": "63e6fe65_1218d548",
      "range": {
        "startLine": 159,
        "startChar": 61,
        "endLine": 159,
        "endChar": 69
      },
      "revId": "5623d1a7fac2fca2d8cd51af65a764aadd31bc43",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6d0cdab7_5e04822c",
        "filename": "libs/binder/BpBinder.cpp",
        "patchSetId": 2
      },
      "lineNbr": 159,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-09-10T23:54:51Z",
      "side": 1,
      "message": "I get that this is a public API, resolving but see the other comment",
      "parentUuid": "63e6fe65_1218d548",
      "range": {
        "startLine": 159,
        "startChar": 61,
        "endLine": 159,
        "endChar": 69
      },
      "revId": "5623d1a7fac2fca2d8cd51af65a764aadd31bc43",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c5f60f99_d26950bc",
        "filename": "libs/binder/BpBinder.cpp",
        "patchSetId": 2
      },
      "lineNbr": 159,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-09-10T23:57:02Z",
      "side": 1,
      "message": "IMO, in the public API, an\n\n```\nusing RpcAddress \u003d uint64_t;\n```\n\nmight be clearer than using uint64_t directly. It is also easier to keep RpcWireAddress and this type aligned in case we need more information in the future.",
      "parentUuid": "6d0cdab7_5e04822c",
      "range": {
        "startLine": 159,
        "startChar": 61,
        "endLine": 159,
        "endChar": 69
      },
      "revId": "5623d1a7fac2fca2d8cd51af65a764aadd31bc43",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d0c8b743_1967def0",
        "filename": "libs/binder/BpBinder.cpp",
        "patchSetId": 2
      },
      "lineNbr": 159,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-09-10T23:58:01Z",
      "side": 1,
      "message": "... keep them aligned by checking sizeof(RpcAddress) \u003d\u003d sizeof(RpcWireAddress), for example",
      "parentUuid": "c5f60f99_d26950bc",
      "range": {
        "startLine": 159,
        "startChar": 61,
        "endLine": 159,
        "endChar": 69
      },
      "revId": "5623d1a7fac2fca2d8cd51af65a764aadd31bc43",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ed8cddc8_46dfbf3f",
        "filename": "libs/binder/BpBinder.cpp",
        "patchSetId": 2
      },
      "lineNbr": 159,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-09-11T00:38:24Z",
      "side": 1,
      "message": "C++ typedefs don\u0027t provide any additional type safety.",
      "parentUuid": "d0c8b743_1967def0",
      "range": {
        "startLine": 159,
        "startChar": 61,
        "endLine": 159,
        "endChar": 69
      },
      "revId": "5623d1a7fac2fca2d8cd51af65a764aadd31bc43",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b42e32a_8faaa096",
        "filename": "libs/binder/BpBinder.cpp",
        "patchSetId": 2
      },
      "lineNbr": 159,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2021-09-12T23:35:13Z",
      "side": 1,
      "message": "Why not `struct RpcAddress { uint64_t value; }`?\n\nI see that some details about RpcWireAddress are already exposed. e.g. RPC_WIRE_ADDRESS_OPTION_CREATED. It would be nicer if those are abstracted in RpcAddress. `bool RpcAddress::Created()`.\n\nWith uint64_t, the readability became worse than before, IMO.",
      "parentUuid": "ed8cddc8_46dfbf3f",
      "range": {
        "startLine": 159,
        "startChar": 61,
        "endLine": 159,
        "endChar": 69
      },
      "revId": "5623d1a7fac2fca2d8cd51af65a764aadd31bc43",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "57a148d3_5a4522e2",
        "filename": "libs/binder/BpBinder.cpp",
        "patchSetId": 2
      },
      "lineNbr": 159,
      "author": {
        "id": 1644679
      },
      "writtenOn": "2021-09-13T16:11:50Z",
      "side": 1,
      "message": "I lean towards having a more explicit type instead of uint64_t, and Jiyong\u0027s suggestion sounds like it would be a good change.",
      "parentUuid": "3b42e32a_8faaa096",
      "range": {
        "startLine": 159,
        "startChar": 61,
        "endLine": 159,
        "endChar": 69
      },
      "revId": "5623d1a7fac2fca2d8cd51af65a764aadd31bc43",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a5496a2c_a4db6f24",
        "filename": "libs/binder/BpBinder.cpp",
        "patchSetId": 2
      },
      "lineNbr": 159,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-09-13T16:32:18Z",
      "side": 1,
      "message": "\u003e Why not `struct RpcAddress { uint64_t value; }`?\n\nI considered it (surely since I suggested it!), but it\u0027s all in internal headers, and the name is always used w/ the type here (\u0027uint64_t address\u0027), and this is consistent with how the existing binder ID is already being done. Using a struct buys us type safety, but it is atypical in C++ programs, and it makes things slightly more complicated, and, as I mentioned earlier, this type _would_ have to be exposed in headers, but I want it to remain internal.\n\n\u003e see that some details about RpcWireAddress are already exposed\n\nNo, this is a private header.",
      "parentUuid": "57a148d3_5a4522e2",
      "range": {
        "startLine": 159,
        "startChar": 61,
        "endLine": 159,
        "endChar": 69
      },
      "revId": "5623d1a7fac2fca2d8cd51af65a764aadd31bc43",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eb4158fe_f6e160ad",
        "filename": "libs/binder/Parcel.cpp",
        "patchSetId": 2
      },
      "lineNbr": 206,
      "author": {
        "id": 1644679
      },
      "writtenOn": "2021-09-13T16:11:50Z",
      "side": 1,
      "message": "define a constant somewhere for present/not-present? null/non-null works too.",
      "range": {
        "startLine": 206,
        "startChar": 45,
        "endLine": 206,
        "endChar": 56
      },
      "revId": "5623d1a7fac2fca2d8cd51af65a764aadd31bc43",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6ef8fc1d_3f724d81",
        "filename": "libs/binder/Parcel.cpp",
        "patchSetId": 2
      },
      "lineNbr": 206,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-09-13T16:32:18Z",
      "side": 1,
      "message": "This convention is repeated throughout libbinder and the SDK Java code. If we want to fix it, we should do it separately.",
      "parentUuid": "eb4158fe_f6e160ad",
      "range": {
        "startLine": 206,
        "startChar": 45,
        "endLine": 206,
        "endChar": 56
      },
      "revId": "5623d1a7fac2fca2d8cd51af65a764aadd31bc43",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "953d1a4b_352341cb",
        "filename": "libs/binder/Parcel.cpp",
        "patchSetId": 2
      },
      "lineNbr": 208,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-09-10T23:54:51Z",
      "side": 1,
      "message": "Is it intentional that this (and almost all changes in this CL that doesn\u0027t involve public APIs) a uint64_t, not an RpcWireAddress?\n\nIf so, why?",
      "range": {
        "startLine": 208,
        "startChar": 12,
        "endLine": 208,
        "endChar": 20
      },
      "revId": "5623d1a7fac2fca2d8cd51af65a764aadd31bc43",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1bd96228_cfd28602",
        "filename": "libs/binder/Parcel.cpp",
        "patchSetId": 2
      },
      "lineNbr": 208,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-09-11T00:38:24Z",
      "side": 1,
      "message": "RpcWireProtocol.h isn\u0027t accessible from the headers. I mean, I could add it as a member class of RpcSession, for instance, and keep it hidden, but this would also mean moving it out of the wire protocol file. int32_t handle is used for binder (for comparison)",
      "parentUuid": "953d1a4b_352341cb",
      "range": {
        "startLine": 208,
        "startChar": 12,
        "endLine": 208,
        "endChar": 20
      },
      "revId": "5623d1a7fac2fca2d8cd51af65a764aadd31bc43",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "232d65df_3c9bc3cc",
        "filename": "libs/binder/Parcel.cpp",
        "patchSetId": 2
      },
      "lineNbr": 288,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2021-09-12T23:35:13Z",
      "side": 1,
      "message": "Is this RPC_WIRE_ADDRESS_OPTION_CREATED ?",
      "range": {
        "startLine": 288,
        "startChar": 24,
        "endLine": 288,
        "endChar": 25
      },
      "revId": "5623d1a7fac2fca2d8cd51af65a764aadd31bc43",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}