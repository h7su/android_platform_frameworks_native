{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6500102a_5cb57e17",
        "filename": "libs/binder/RpcTransportRaw.cpp",
        "patchSetId": 6
      },
      "lineNbr": 49,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-09-15T22:58:19Z",
      "side": 1,
      "message": "auto, or Buffer, or decltype(buffer)",
      "range": {
        "startLine": 49,
        "startChar": 8,
        "endLine": 49,
        "endChar": 22
      },
      "revId": "775d6d046cc095569fa3552dc8e6daf993d11126",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "956b838d_e1066283",
        "filename": "libs/binder/RpcTransportRaw.cpp",
        "patchSetId": 6
      },
      "lineNbr": 49,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-09-15T22:58:58Z",
      "side": 1,
      "message": "(nit; I just realize that this is only useful for comparisons)",
      "parentUuid": "6500102a_5cb57e17",
      "range": {
        "startLine": 49,
        "startChar": 8,
        "endLine": 49,
        "endChar": 22
      },
      "revId": "775d6d046cc095569fa3552dc8e6daf993d11126",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1fcdd505_4cf6488f",
        "filename": "libs/binder/RpcTransportRaw.cpp",
        "patchSetId": 6
      },
      "lineNbr": 70,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-09-15T22:49:27Z",
      "side": 1,
      "message": "Also check EAGAIN. Both are possible on non-blocking sockets",
      "range": {
        "startLine": 70,
        "startChar": 44,
        "endLine": 70,
        "endChar": 55
      },
      "revId": "775d6d046cc095569fa3552dc8e6daf993d11126",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "547dd6fb_4e96a1d5",
        "filename": "libs/binder/RpcTransportRaw.cpp",
        "patchSetId": 6
      },
      "lineNbr": 70,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-09-15T22:58:19Z",
      "side": 1,
      "message": "nit: technically you can infer this from size, buffer and end, but I agree a new boolean is easier to read",
      "range": {
        "startLine": 70,
        "startChar": 20,
        "endLine": 70,
        "endChar": 26
      },
      "revId": "775d6d046cc095569fa3552dc8e6daf993d11126",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bcc37041_09be9a5f",
        "filename": "libs/binder/RpcTransportRaw.cpp",
        "patchSetId": 6
      },
      "lineNbr": 71,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2021-09-15T05:01:57Z",
      "side": 1,
      "message": "nit: this should be parameterized",
      "range": {
        "startLine": 71,
        "startChar": 49,
        "endLine": 71,
        "endChar": 55
      },
      "revId": "775d6d046cc095569fa3552dc8e6daf993d11126",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ed4b514a_ee3da42a",
        "filename": "libs/binder/RpcTransportRaw.cpp",
        "patchSetId": 6
      },
      "lineNbr": 75,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-09-15T22:58:19Z",
      "side": 1,
      "message": "nit:\n\n```\n} else if (processSize \u003d\u003d 0) {...}\n} else {...}\n```\n\nOr even\n\n```\nif(processSize \u003d\u003d 0) { return ...}\nif (processSize \u003c 0) {...}\nelse {...}\n```",
      "range": {
        "startLine": 74,
        "startChar": 0,
        "endLine": 75,
        "endChar": 57
      },
      "revId": "775d6d046cc095569fa3552dc8e6daf993d11126",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "90123824_6646376c",
        "filename": "libs/binder/RpcTransportRaw.cpp",
        "patchSetId": 6
      },
      "lineNbr": 89,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-09-15T22:58:19Z",
      "side": 1,
      "message": "nit: this cast is only necessary to do pointer arithmatic. Maybe don\u0027t cast here and move before L49?\n\nIf so you can also infer `first` from `buffer !\u003d data`",
      "range": {
        "startLine": 89,
        "startChar": 51,
        "endLine": 89,
        "endChar": 67
      },
      "revId": "775d6d046cc095569fa3552dc8e6daf993d11126",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}