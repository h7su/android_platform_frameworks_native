{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "f4cd0350_e673a23c",
        "filename": "libs/binder/RpcTransportRaw.cpp",
        "patchSetId": 16
      },
      "lineNbr": 49,
      "author": {
        "id": 1944400
      },
      "writtenOn": "2022-05-16T20:33:39Z",
      "side": 1,
      "message": "This returns OK when `ret \u003d\u003d 0`. The new docs for this say that an OK return means there is data available, so this seems wrong. Maybe update the code or clarify the docs.\n\nBefore the 0 case was checked in RpcState, so there is a slight behavior difference vs HEAD as well. It isn\u0027t immediately obvious to me that it matters though, seems like both cases eventually will end up propagating DEAD_OBJECT.",
      "revId": "ca8061ae0c411cfb173fe28aa7a745a5198137c9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0ee1ad7d_7fb2d389",
        "filename": "libs/binder/RpcTransportRaw.cpp",
        "patchSetId": 16
      },
      "lineNbr": 49,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2022-05-16T21:06:34Z",
      "side": 1,
      "message": "Good point, that\u0027s an interesting corner case. The manual page for recv says\n```\n       When a stream socket peer has performed an orderly shutdown, the return value will be 0 (the traditional \"end-of-file\" return).\n\n       Datagram sockets in various domains (e.g., the UNIX and Internet domains) permit zero-length datagrams.  When such a datagram is received, the return value is 0.\n\n       The value 0 may also be returned if the requested number of bytes to receive from a stream socket was 0.\n\n```\n\nWe\u0027re using streaming sockets, which rules out the second case. We always request exactly 1 byte, so the third case doesn\u0027t hold either. That leaves the first case, so we could return DEAD_OBJECT for ret\u003d\u003d0? (it\u0027s what we do in interruptableReadFully too)",
      "parentUuid": "f4cd0350_e673a23c",
      "revId": "ca8061ae0c411cfb173fe28aa7a745a5198137c9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cbe3c6bd_19823564",
        "filename": "libs/binder/RpcTransportRaw.cpp",
        "patchSetId": 16
      },
      "lineNbr": 49,
      "author": {
        "id": 1944400
      },
      "writtenOn": "2022-05-16T21:17:37Z",
      "side": 1,
      "message": "Yeah DEAD_OBJECT for EOF makes sense to me.",
      "parentUuid": "0ee1ad7d_7fb2d389",
      "revId": "ca8061ae0c411cfb173fe28aa7a745a5198137c9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}