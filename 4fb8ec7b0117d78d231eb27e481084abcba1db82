{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "dedccb10_d66d8fbd",
        "filename": "libs/binder/parcel_fuzzer/binder_ndk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 64,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-10-19T22:26:27Z",
      "side": 1,
      "message": "This should call AParcel_reset on p, the parcel we are fuzzing",
      "range": {
        "startLine": 58,
        "startChar": 0,
        "endLine": 64,
        "endChar": 10
      },
      "revId": "4fb8ec7b0117d78d231eb27e481084abcba1db82",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ceb98480_63a4ef18",
        "filename": "libs/binder/parcel_fuzzer/binder_ndk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 64,
      "author": {
        "id": 1386891
      },
      "writtenOn": "2020-10-21T15:36:54Z",
      "side": 1,
      "message": "got it, but it looks like fuzzer injects input data once, and test several read functions on it. but \u0027reset\u0027 is not \u0027const\u0027 behavior, and it looks like it\u0027s not suitable..\n\nis it okay to \u0027reset\u0027 the parcel during instructions running?",
      "parentUuid": "dedccb10_d66d8fbd",
      "range": {
        "startLine": 58,
        "startChar": 0,
        "endLine": 64,
        "endChar": 10
      },
      "revId": "4fb8ec7b0117d78d231eb27e481084abcba1db82",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "56bf763c_0b4d5d3e",
        "filename": "libs/binder/parcel_fuzzer/binder_ndk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 64,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-10-21T19:55:18Z",
      "side": 1,
      "message": "oh yeah, you\u0027re right, so we should just remove this, yeah. It doesn\u0027t add any more coverage than just testing AParcel_reset, which you are doing in CtsNdkBinderTestCases.\n\nWe only need to fuzz read behavior here.",
      "parentUuid": "ceb98480_63a4ef18",
      "range": {
        "startLine": 58,
        "startChar": 0,
        "endLine": 64,
        "endChar": 10
      },
      "revId": "4fb8ec7b0117d78d231eb27e481084abcba1db82",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "55505b47_35b22ba6",
        "filename": "libs/binder/parcel_fuzzer/binder_ndk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 64,
      "author": {
        "id": 1386891
      },
      "writtenOn": "2020-10-22T10:29:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "56bf763c_0b4d5d3e",
      "range": {
        "startLine": 58,
        "startChar": 0,
        "endLine": 64,
        "endChar": 10
      },
      "revId": "4fb8ec7b0117d78d231eb27e481084abcba1db82",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5602ea05_e68337dd",
        "filename": "libs/binder/parcel_fuzzer/binder_ndk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 75,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-10-19T22:26:27Z",
      "side": 1,
      "message": "this is just a test for AParcel_create/delete. We can avoid this in the fuzzer",
      "range": {
        "startLine": 70,
        "startChar": 0,
        "endLine": 75,
        "endChar": 10
      },
      "revId": "4fb8ec7b0117d78d231eb27e481084abcba1db82",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "86b99fb4_1ba04b61",
        "filename": "libs/binder/parcel_fuzzer/binder_ndk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 75,
      "author": {
        "id": 1386891
      },
      "writtenOn": "2020-10-22T10:29:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5602ea05_e68337dd",
      "range": {
        "startLine": 70,
        "startChar": 0,
        "endLine": 75,
        "endChar": 10
      },
      "revId": "4fb8ec7b0117d78d231eb27e481084abcba1db82",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "83a8a100_7c83185c",
        "filename": "libs/binder/parcel_fuzzer/binder_ndk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 78,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-10-19T22:26:27Z",
      "side": 1,
      "message": "2",
      "range": {
        "startLine": 78,
        "startChar": 47,
        "endLine": 78,
        "endChar": 48
      },
      "revId": "4fb8ec7b0117d78d231eb27e481084abcba1db82",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bc61992b_c213486a",
        "filename": "libs/binder/parcel_fuzzer/binder_ndk.cpp",
        "patchSetId": 2
      },
      "lineNbr": 78,
      "author": {
        "id": 1386891
      },
      "writtenOn": "2020-10-22T10:29:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "83a8a100_7c83185c",
      "range": {
        "startLine": 78,
        "startChar": 47,
        "endLine": 78,
        "endChar": 48
      },
      "revId": "4fb8ec7b0117d78d231eb27e481084abcba1db82",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}