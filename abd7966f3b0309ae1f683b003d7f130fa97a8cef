{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "a677a726_55586db9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1644679
      },
      "writtenOn": "2021-10-11T23:18:43Z",
      "side": 1,
      "message": "Oops! This latest patch set is unrelated to the initial stuff in this CL... the testing I had initially was really close the Default testing I was doing and just kept amending this commit with this Change-Id. But, I removed all that and went with a very simple test case in binderRpcTest instead.",
      "revId": "abd7966f3b0309ae1f683b003d7f130fa97a8cef",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bc191c92_b9dae1cb",
        "filename": "libs/binder/tests/binderRpcTest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1288,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-10-12T00:43:59Z",
      "side": 1,
      "message": "nit: pref sp\u003cIBinderRpcTestDelegate\u003e::make(...)",
      "range": {
        "startLine": 1288,
        "startChar": 44,
        "endLine": 1288,
        "endChar": 47
      },
      "revId": "abd7966f3b0309ae1f683b003d7f130fa97a8cef",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "48fd9479_7cb7ef92",
        "filename": "libs/binder/tests/binderRpcTest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1288,
      "author": {
        "id": 1644679
      },
      "writtenOn": "2021-10-12T18:16:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bc191c92_b9dae1cb",
      "range": {
        "startLine": 1288,
        "startChar": 44,
        "endLine": 1288,
        "endChar": 47
      },
      "revId": "abd7966f3b0309ae1f683b003d7f130fa97a8cef",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6f6c3fc8_fdce4ccd",
        "filename": "libs/binder/tests/binderRpcTest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1296,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-10-12T00:43:59Z",
      "side": 1,
      "message": "this shouldn\u0027t be needed (should be implicit in L1288), because it happens in ~sp\u003cIBinderRpcTestDelegate\u003e\n\nI would think this would crash the program, but maybe something else is causing it. You can debug seeing how many refcounts are added here by calling \u0027myDelegate-\u003egetStrongCount()\u0027 - I would expect it to be 1 here\n\nOne other possibility is that there is a leak somewhere else.",
      "range": {
        "startLine": 1296,
        "startChar": 0,
        "endLine": 1296,
        "endChar": 35
      },
      "revId": "abd7966f3b0309ae1f683b003d7f130fa97a8cef",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0260f0d0_b538db6d",
        "filename": "libs/binder/tests/binderRpcTest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1296,
      "author": {
        "id": 1644679
      },
      "writtenOn": "2021-10-12T18:16:22Z",
      "side": 1,
      "message": "Without it, the tests fail in the ProcessSession destructor because countBinders is 1.\nIs ProcessSession destructor called before the Delegator destructor? Things I\u0027ve seen online say the destructors should be called in revers order of their construction(stack), so in this case the Delegator should be destructed first.\n\nAfter I addService(), getStrongCount() is 2, not 1.\nI see the same strong count behavior when registering a regular interface in binderStabilityTest main(), so it is expected to be 2 here?",
      "parentUuid": "6f6c3fc8_fdce4ccd",
      "range": {
        "startLine": 1296,
        "startChar": 0,
        "endLine": 1296,
        "endChar": 35
      },
      "revId": "abd7966f3b0309ae1f683b003d7f130fa97a8cef",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "69cde4b3_a76180a7",
        "filename": "libs/binder/tests/binderRpcTest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1296,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-10-12T18:33:54Z",
      "side": 1,
      "message": "Oh, that\u0027s the reason, we are giving a refcount to defaultServiceManager. I guess in this case, defaultServiceManager won\u0027t drop the ref until it gets a death notification, which will happen much later. Though, it would cause use-after-delete if this did happen, or if another service registered over shimmy (e.g. if you run two instances of this test at the same time).\n\nWe should either avoid registering this with the defaultServiceManager, or we should register something else over it (this could be racey to cleanup the ref though - might need to ping it or similar).",
      "parentUuid": "0260f0d0_b538db6d",
      "range": {
        "startLine": 1296,
        "startChar": 0,
        "endLine": 1296,
        "endChar": 35
      },
      "revId": "abd7966f3b0309ae1f683b003d7f130fa97a8cef",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8e1c64b6_2f596f44",
        "filename": "libs/binder/tests/binderRpcTest.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1296,
      "author": {
        "id": 1644679
      },
      "writtenOn": "2021-10-12T23:10:11Z",
      "side": 1,
      "message": "I\u0027ll just avoid registering it to avoid the racing. \nI don\u0027t imagine there will be changes to the delegator that would break the ability to register with service manager. I just needed to make sure it would work for developing it in the first place.",
      "parentUuid": "69cde4b3_a76180a7",
      "range": {
        "startLine": 1296,
        "startChar": 0,
        "endLine": 1296,
        "endChar": 35
      },
      "revId": "abd7966f3b0309ae1f683b003d7f130fa97a8cef",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}