{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b835e76e_73aa0fb1",
        "filename": "cmds/servicemanager/main.cpp",
        "patchSetId": 3
      },
      "lineNbr": 107,
      "author": {
        "id": 1013030
      },
      "writtenOn": "2024-01-08T08:35:38Z",
      "side": 1,
      "message": "I think Arve\u0027s suggestion was to set O_NONBLOCK just before this call, and then clear it again. I agree with that because it would make this change less risky, as the regular non-blocking WRITE/READ path isn\u0027t as well tested. Talking about risk: should we flag this change? It is hard to see all the possible implications here.",
      "range": {
        "startLine": 107,
        "startChar": 32,
        "endLine": 107,
        "endChar": 52
      },
      "revId": "461b076602003f4f8efefe8da66d96fc3cc3ca71",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e7758dae_fb3eb387",
        "filename": "cmds/servicemanager/main.cpp",
        "patchSetId": 3
      },
      "lineNbr": 107,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2024-01-08T18:25:16Z",
      "side": 1,
      "message": "Well, if it\u0027s not safe all the time, weird UB this 1:1,000,000 case would not be so great. We\u0027d prefer to make sure it\u0027s safe all the time. What could break?\n\nAlso, since it\u0027s servicemanager we can\u0027t do runtime flagging.",
      "parentUuid": "b835e76e_73aa0fb1",
      "range": {
        "startLine": 107,
        "startChar": 32,
        "endLine": 107,
        "endChar": 52
      },
      "revId": "461b076602003f4f8efefe8da66d96fc3cc3ca71",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a1a1ff49_0decf43b",
        "filename": "cmds/servicemanager/main.cpp",
        "patchSetId": 3
      },
      "lineNbr": 107,
      "author": {
        "id": 1013030
      },
      "writtenOn": "2024-01-09T08:20:40Z",
      "side": 1,
      "message": "I think O_NONBLOCK just isn\u0027t a well-tested path, and limiting its usage to where it is needed seems safer. Though I guess you could argue that as long as servicemanager doesn\u0027t make any outgoing transactions, this all boils down to the same write/read ioctl, so you don\u0027t really hit any different code paths. Really what it boils down to is - how do we build confidence in this change, and how can we make sure we\u0027re not introducing another subtle error path?",
      "parentUuid": "e7758dae_fb3eb387",
      "range": {
        "startLine": 107,
        "startChar": 32,
        "endLine": 107,
        "endChar": 52
      },
      "revId": "461b076602003f4f8efefe8da66d96fc3cc3ca71",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f68e7ddb_53471a4a",
        "filename": "cmds/servicemanager/main.cpp",
        "patchSetId": 3
      },
      "lineNbr": 107,
      "author": {
        "id": 1892347
      },
      "writtenOn": "2024-01-09T09:01:51Z",
      "side": 1,
      "message": "One other option is to flush the file descriptor just before talking to the driver. That way, `looper_need_return` will be true when we enter the kernel, so it\u0027s guaranteed to not go to sleep. And this codepath doesn\u0027t return EINVAL to userspace.",
      "parentUuid": "a1a1ff49_0decf43b",
      "range": {
        "startLine": 107,
        "startChar": 32,
        "endLine": 107,
        "endChar": 52
      },
      "revId": "461b076602003f4f8efefe8da66d96fc3cc3ca71",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bca3b160_a72a3819",
        "filename": "cmds/servicemanager/main.cpp",
        "patchSetId": 3
      },
      "lineNbr": 107,
      "author": {
        "id": 1892347
      },
      "writtenOn": "2024-01-09T09:03:01Z",
      "side": 1,
      "message": "Sorry, I meant EAGAIN.",
      "parentUuid": "f68e7ddb_53471a4a",
      "range": {
        "startLine": 107,
        "startChar": 32,
        "endLine": 107,
        "endChar": 52
      },
      "revId": "461b076602003f4f8efefe8da66d96fc3cc3ca71",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2a469bea_91c40eef",
        "filename": "cmds/servicemanager/main.cpp",
        "patchSetId": 3
      },
      "lineNbr": 107,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2024-01-09T19:05:59Z",
      "side": 1,
      "message": "So, only flushCommands and forget both of the changes here? That sounds safer, and I think we could merge it no problem.\n\nRe re maco, if we take the patch, we should take it like this so that we\u0027d become aware of issues during development rather than have those subtle issues happen in a case that is already 1:100,000 or similar. Otherwise, we\u0027d never get to the bottom of it.",
      "parentUuid": "bca3b160_a72a3819",
      "range": {
        "startLine": 107,
        "startChar": 32,
        "endLine": 107,
        "endChar": 52
      },
      "revId": "461b076602003f4f8efefe8da66d96fc3cc3ca71",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9c30ecb9_e2eec318",
        "filename": "cmds/servicemanager/main.cpp",
        "patchSetId": 3
      },
      "lineNbr": 107,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2024-01-09T23:26:21Z",
      "side": 1,
      "message": "staged this at http://r.android.com/2903184 in case that\u0027s what you mean",
      "parentUuid": "2a469bea_91c40eef",
      "range": {
        "startLine": 107,
        "startChar": 32,
        "endLine": 107,
        "endChar": 52
      },
      "revId": "461b076602003f4f8efefe8da66d96fc3cc3ca71",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "78ec867c_5f01c2c3",
        "filename": "cmds/servicemanager/main.cpp",
        "patchSetId": 3
      },
      "lineNbr": 107,
      "author": {
        "id": 1892347
      },
      "writtenOn": "2024-01-10T10:21:08Z",
      "side": 1,
      "message": "Sorry, what I meant by \"flush\" was to trigger the [`binder_deferred_flush`](https://cs.android.com/android/kernel/superproject/+/common-android-mainline:common/drivers/android/binder.c;l\u003d5914-5934;drc\u003df955e6e98c348b65772fdc1db2a9eeac3a4c3fc8) function in the Kernel by performing the flush syscall with something along the lines of `fflush(binder_fd)`.",
      "parentUuid": "9c30ecb9_e2eec318",
      "range": {
        "startLine": 107,
        "startChar": 32,
        "endLine": 107,
        "endChar": 52
      },
      "revId": "461b076602003f4f8efefe8da66d96fc3cc3ca71",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}