{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "251da7de_032d5adb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-06-07T19:38:20Z",
      "side": 1,
      "message": "c",
      "revId": "1a40626a09493fcc3bb6898b7e48670d94fd326c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a06bf652_702370a3",
        "filename": "libs/binder/servicedispatcher.cpp",
        "patchSetId": 7
      },
      "lineNbr": 64,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-06-07T19:38:20Z",
      "side": 1,
      "message": "also - this will do a sleep/wait loop. We probably want to use \u0027checkService\u0027 to get an already started service.",
      "range": {
        "startLine": 64,
        "startChar": 22,
        "endLine": 64,
        "endChar": 32
      },
      "revId": "1a40626a09493fcc3bb6898b7e48670d94fd326c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e1285bac_4915b719",
        "filename": "libs/binder/servicedispatcher.cpp",
        "patchSetId": 7
      },
      "lineNbr": 64,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-06-07T19:39:56Z",
      "side": 1,
      "message": "I think this is intentional? If the service is not started then we do want to start the lazy service, right?",
      "parentUuid": "a06bf652_702370a3",
      "range": {
        "startLine": 64,
        "startChar": 22,
        "endLine": 64,
        "endChar": 32
      },
      "revId": "1a40626a09493fcc3bb6898b7e48670d94fd326c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ec1534a6_4a75f801",
        "filename": "libs/binder/servicedispatcher.cpp",
        "patchSetId": 7
      },
      "lineNbr": 64,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-06-07T19:43:57Z",
      "side": 1,
      "message": "Welllllllll. There might not always be a lazy service. We\u0027ll actually want a few different APIs here. getService is dangerous to use with lazy services, since it\u0027ll still return nullptr if the lazy service has some delay. waitForService should be used with to use instead.\n\nOn host, when you call \u0027checkService\u0027 we\u0027ll want to checkService on the device. When we call \u0027getService\u0027 we\u0027ll want to getService on the device etc...",
      "parentUuid": "e1285bac_4915b719",
      "range": {
        "startLine": 64,
        "startChar": 22,
        "endLine": 64,
        "endChar": 32
      },
      "revId": "1a40626a09493fcc3bb6898b7e48670d94fd326c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "daab1832_45d406f3",
        "filename": "libs/binder/servicedispatcher.cpp",
        "patchSetId": 7
      },
      "lineNbr": 64,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-06-07T20:05:09Z",
      "side": 1,
      "message": "How many getService-related commands are there as of now? getService / checkService are the only two, right?\n\nIf so I\u0027ll add an extra argument to distinguish getService and checkService.",
      "parentUuid": "ec1534a6_4a75f801",
      "range": {
        "startLine": 64,
        "startChar": 22,
        "endLine": 64,
        "endChar": 32
      },
      "revId": "1a40626a09493fcc3bb6898b7e48670d94fd326c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fc9abce9_549e2659",
        "filename": "libs/binder/servicedispatcher.cpp",
        "patchSetId": 7
      },
      "lineNbr": 116,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-06-07T19:51:27Z",
      "side": 1,
      "message": "this is WARNING, but L98 will hide it from stdio, right? we want to see it directly",
      "range": {
        "startLine": 116,
        "startChar": 8,
        "endLine": 116,
        "endChar": 15
      },
      "revId": "1a40626a09493fcc3bb6898b7e48670d94fd326c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e98737d3_cea451f8",
        "filename": "libs/binder/servicedispatcher.cpp",
        "patchSetId": 7
      },
      "lineNbr": 116,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-06-07T20:05:09Z",
      "side": 1,
      "message": "No. LOG(WARNING) goes to stderr.",
      "parentUuid": "fc9abce9_549e2659",
      "range": {
        "startLine": 116,
        "startChar": 8,
        "endLine": 116,
        "endChar": 15
      },
      "revId": "1a40626a09493fcc3bb6898b7e48670d94fd326c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6bdbadd8_ec66d1a0",
        "filename": "libs/binder/servicedispatcher.cpp",
        "patchSetId": 7
      },
      "lineNbr": 116,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-06-07T20:05:39Z",
      "side": 1,
      "message": "Oh you are right. I\u0027ll fix this.",
      "parentUuid": "e98737d3_cea451f8",
      "range": {
        "startLine": 116,
        "startChar": 8,
        "endLine": 116,
        "endChar": 15
      },
      "revId": "1a40626a09493fcc3bb6898b7e48670d94fd326c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}