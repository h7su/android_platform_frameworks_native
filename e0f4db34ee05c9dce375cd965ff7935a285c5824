{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b366de54_48186329",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1010103
      },
      "writtenOn": "2023-08-30T16:21:36Z",
      "side": 1,
      "message": "I\u0027d prefer instead marking the entire type as requiring API 34. Can `__INTRODUCED_IN()` be applied to a class? If not mark the relevant methods as such.\n\nHandling back-compat isn\u0027t something this should be doing itself as this class really only exists to handle AIDL compat which wasn\u0027t available prior to 34. So it should be whoever is trying to use this wrapper\u0027s responsibility to ensure it\u0027s not used when it isn\u0027t available",
      "revId": "e0f4db34ee05c9dce375cd965ff7935a285c5824",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0dc9170c_7c419186",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-08-30T16:36:17Z",
      "side": 1,
      "message": "FWIW - we use __builtin_available inside the libbinder_ndk types a lot. Since it\u0027s easy for people to mix up \u002734\u0027 or \u002732\u0027, it\u0027s nice to have it here. Though - if you\u0027re saying this - I hope Sungtak is moving use of __builtin_available elsewhere.",
      "parentUuid": "b366de54_48186329",
      "revId": "e0f4db34ee05c9dce375cd965ff7935a285c5824",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "18ed58c1_a8c66817",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1018606
      },
      "writtenOn": "2023-08-31T23:56:43Z",
      "side": 1,
      "message": "the build error without this change looks like:\n\n```\nIn file included from frameworks/av/media/codec2/hal/client/client.cpp:40:\nIn file included from out/soong/.intermediates/hardware/interfaces/media/c2/aidl/android.hardware.media.c2-V1-ndk-source/gen/include/aidl/android/hardware/media/c2/IComponent.h:25:\nIn file included from out/soong/.intermediates/hardware/interfaces/media/c2/aidl/android.hardware.media.c2-V1-ndk-source/gen/include/aidl/android/hardware/media/c2/IGraphicBufferAllocator.h:15:\nframeworks/native/libs/nativewindow/include/android/hardware_buffer_aidl.h:98:16: error: \u0027AHardwareBuffer_readFromParcel\u0027 is only available on Android 34 or newer [-Werror,-Wunguarded-availability]\n        return AHardwareBuffer_readFromParcel(parcel, \u0026mBuffer);\n               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n```\n\nSince this is coming from include directives, I can\u0027t use `__builtin_available` to guard against the usage. The only option I can think of is ignoring this error using something like `#pragma clang diagnostic ignored \"-Wunguarded-availability\"`. WDYT?",
      "parentUuid": "0dc9170c_7c419186",
      "revId": "e0f4db34ee05c9dce375cd965ff7935a285c5824",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "caae7664_fcb12168",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-09-05T23:05:41Z",
      "side": 1,
      "message": "John, if you can reconsider this CL, I\u0027d appreciate it",
      "parentUuid": "18ed58c1_a8c66817",
      "revId": "e0f4db34ee05c9dce375cd965ff7935a285c5824",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a2513ecc_d6a2fff3",
        "filename": "libs/nativewindow/include/android/hardware_buffer_aidl.h",
        "patchSetId": 1
      },
      "lineNbr": 98,
      "author": {
        "id": 1156740
      },
      "writtenOn": "2023-08-29T22:54:44Z",
      "side": 1,
      "message": "Could we have a define in some header?",
      "range": {
        "startLine": 98,
        "startChar": 40,
        "endLine": 98,
        "endChar": 42
      },
      "revId": "e0f4db34ee05c9dce375cd965ff7935a285c5824",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6a63536d_94478e80",
        "filename": "libs/nativewindow/include/android/hardware_buffer_aidl.h",
        "patchSetId": 1
      },
      "lineNbr": 161,
      "author": {
        "id": 1156740
      },
      "writtenOn": "2023-08-29T22:54:44Z",
      "side": 1,
      "message": "Ditto",
      "range": {
        "startLine": 161,
        "startChar": 40,
        "endLine": 161,
        "endChar": 42
      },
      "revId": "e0f4db34ee05c9dce375cd965ff7935a285c5824",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}