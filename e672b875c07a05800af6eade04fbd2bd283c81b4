{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "390a7d76_34fb0570",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1650665
      },
      "writtenOn": "2021-01-13T18:09:21Z",
      "side": 1,
      "message": "Needs review by OWNERS",
      "revId": "e672b875c07a05800af6eade04fbd2bd283c81b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ae685d5e_8184058d",
        "filename": "libs/binder/LazyServiceRegistrar.cpp",
        "patchSetId": 3
      },
      "lineNbr": 142,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-01-13T19:26:17Z",
      "side": 1,
      "message": "I suppose this makes sense, but would an abort work here equally as well? (and anyway, it seems unrelated)\n\nIf we ever hit this point, then either:\n- if someone is planning on registering a service, they can simply avoid calling this function, since this is the default\n- if someone isn\u0027t planning on registering a service, then this is an error state because they have made some configuration for a lazy service, but it won\u0027t shutdown or ever get a notification to (abort would be useful to point out this mistake)",
      "range": {
        "startLine": 142,
        "startChar": 23,
        "endLine": 142,
        "endChar": 53
      },
      "revId": "e672b875c07a05800af6eade04fbd2bd283c81b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7f77a99f_c166e8f1",
        "filename": "libs/binder/LazyServiceRegistrar.cpp",
        "patchSetId": 3
      },
      "lineNbr": 142,
      "author": {
        "id": 1650665
      },
      "writtenOn": "2021-01-13T21:33:14Z",
      "side": 1,
      "message": "I don\u0027t see a case where both the callback and the force persist flag would be used at the same time.\nAs a matter of fact, the callback can actually do what \"force persist\" does and more.\nHowever, I\u0027m not explicitly disallowing it at this point. \nDo you prefer forcePersist() to abort if a callback is set?",
      "parentUuid": "ae685d5e_8184058d",
      "range": {
        "startLine": 142,
        "startChar": 23,
        "endLine": 142,
        "endChar": 53
      },
      "revId": "e672b875c07a05800af6eade04fbd2bd283c81b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b83a3d88_43a6fbc9",
        "filename": "libs/binder/LazyServiceRegistrar.cpp",
        "patchSetId": 3
      },
      "lineNbr": 142,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-01-15T02:20:48Z",
      "side": 1,
      "message": "Sorry - I understand now - the callback here gets called whenever there is any change in the number of connected services. This extra check is preventing L187..L190 from being executed.\n\nMaybe we can keep the mNumConnectedServices check above the call to mActiveServicesCountCallback, then we only hvae the check once (not here and L195).",
      "parentUuid": "7f77a99f_c166e8f1",
      "range": {
        "startLine": 142,
        "startChar": 23,
        "endLine": 142,
        "endChar": 53
      },
      "revId": "e672b875c07a05800af6eade04fbd2bd283c81b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "996e0076_17cbe338",
        "filename": "libs/binder/LazyServiceRegistrar.cpp",
        "patchSetId": 3
      },
      "lineNbr": 142,
      "author": {
        "id": 1650665
      },
      "writtenOn": "2021-01-15T19:27:58Z",
      "side": 1,
      "message": "I\u0027m not sure I fully understand how I can move the mNumConnectedServices check above the call to mActiveServicesCountCallback().\nmaybeTryShutdown() is mainly called by onClients(), and mActiveServicesCountCallback() is called irrespective of the value of mNumConnectedServices.\n\nThe forcePersist() method reads like this: if we are turning off persistance (!mForcePersist) and the number of connected service dropped to zero (mNumConnectedServices \u003d\u003d 0) while persistance was on, we should try to shut down the service.\n\nWe *could* remove the extra check for (mNumConnectedServices \u003d\u003d 0) in forcePersist(), which may result in an additional call to mActiveServicesCountCallback() (which should be harmless).",
      "parentUuid": "b83a3d88_43a6fbc9",
      "range": {
        "startLine": 142,
        "startChar": 23,
        "endLine": 142,
        "endChar": 53
      },
      "revId": "e672b875c07a05800af6eade04fbd2bd283c81b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "662fd2b4_0891e7b6",
        "filename": "libs/binder/LazyServiceRegistrar.cpp",
        "patchSetId": 3
      },
      "lineNbr": 142,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-01-15T21:33:41Z",
      "side": 1,
      "message": "I meant, removing it, in the case we also don\u0027t share the update for ever case that the number of active clients changes.",
      "parentUuid": "996e0076_17cbe338",
      "range": {
        "startLine": 142,
        "startChar": 23,
        "endLine": 142,
        "endChar": 53
      },
      "revId": "e672b875c07a05800af6eade04fbd2bd283c81b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3e5f24ae_bde8d02f",
        "filename": "libs/binder/LazyServiceRegistrar.cpp",
        "patchSetId": 3
      },
      "lineNbr": 142,
      "author": {
        "id": 1650665
      },
      "writtenOn": "2021-01-15T22:17:04Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "662fd2b4_0891e7b6",
      "range": {
        "startLine": 142,
        "startChar": 23,
        "endLine": 142,
        "endChar": 53
      },
      "revId": "e672b875c07a05800af6eade04fbd2bd283c81b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "360e65e7_7ccf3cef",
        "filename": "libs/binder/include/binder/LazyServiceRegistrar.h",
        "patchSetId": 3
      },
      "lineNbr": 76,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-01-15T02:20:48Z",
      "side": 1,
      "message": "why is this integer useful? and if we need it, should we prefer size_t (to match mNumConnectedServices)?\n\nThe motivation behind \u0027onClients\u0027 returning a binder is so you know which binder is shutting down (and can potentially clear resources associated with that particular binder).\n\nIn this case, we know how many binders are shutdown, but I don\u0027t know how having 3 or 2 would be useful here (only 0 seems useful).",
      "range": {
        "startLine": 76,
        "startChar": 66,
        "endLine": 76,
        "endChar": 69
      },
      "revId": "e672b875c07a05800af6eade04fbd2bd283c81b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f9065b01_51031b0a",
        "filename": "libs/binder/include/binder/LazyServiceRegistrar.h",
        "patchSetId": 3
      },
      "lineNbr": 76,
      "author": {
        "id": 1650665
      },
      "writtenOn": "2021-01-15T19:27:58Z",
      "side": 1,
      "message": "Would you prefer to have just a bool here telling if there are/aren\u0027t services with clients?\n\nIt would require the following changes:\n\n* Modify ag/12599701\n* Modify ag/13308435 and ag/13307999 (since unit test in this patch would need to be changed)\n* Possibly modify the corresponding HIDL change for consistency (aosp/q/topic:%22lazy_hal_shutdown%22+status:merged)",
      "parentUuid": "360e65e7_7ccf3cef",
      "range": {
        "startLine": 76,
        "startChar": 66,
        "endLine": 76,
        "endChar": 69
      },
      "revId": "e672b875c07a05800af6eade04fbd2bd283c81b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8ff9b3ae_762a7389",
        "filename": "libs/binder/include/binder/LazyServiceRegistrar.h",
        "patchSetId": 3
      },
      "lineNbr": 76,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-01-15T21:33:41Z",
      "side": 1,
      "message": "Sorry - yes, this is a cherry-pick. Approving.\n\nThen, perhaps do a delta on top of this, which should land cleanly on AOSP (hopefully). Do you know of any use for this parameter? I feel it is more dangerous than useful.",
      "parentUuid": "f9065b01_51031b0a",
      "range": {
        "startLine": 76,
        "startChar": 66,
        "endLine": 76,
        "endChar": 69
      },
      "revId": "e672b875c07a05800af6eade04fbd2bd283c81b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b0d5a312_9d27f532",
        "filename": "libs/binder/include/binder/LazyServiceRegistrar.h",
        "patchSetId": 3
      },
      "lineNbr": 76,
      "author": {
        "id": 1650665
      },
      "writtenOn": "2021-01-15T22:17:04Z",
      "side": 1,
      "message": "Sounds good, I\u0027ll push another patch on top of this.",
      "parentUuid": "8ff9b3ae_762a7389",
      "range": {
        "startLine": 76,
        "startChar": 66,
        "endLine": 76,
        "endChar": 69
      },
      "revId": "e672b875c07a05800af6eade04fbd2bd283c81b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}