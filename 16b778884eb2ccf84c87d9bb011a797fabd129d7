{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "45b9d92e_cb39ab13",
        "filename": "libs/binder/IPCThreadState.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1448,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-03-08T19:23:13Z",
      "side": 1,
      "message": "unnecessary variable",
      "range": {
        "startLine": 1448,
        "startChar": 0,
        "endLine": 1448,
        "endChar": 63
      },
      "revId": "16b778884eb2ccf84c87d9bb011a797fabd129d7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "18a6463f_821e138f",
        "filename": "libs/binder/IPCThreadState.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1448,
      "author": {
        "id": 1869395
      },
      "writtenOn": "2022-03-08T21:33:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "45b9d92e_cb39ab13",
      "range": {
        "startLine": 1448,
        "startChar": 0,
        "endLine": 1448,
        "endChar": 63
      },
      "revId": "16b778884eb2ccf84c87d9bb011a797fabd129d7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a3909a34_cee9080b",
        "filename": "libs/binder/IPCThreadState.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1452,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-03-08T19:23:13Z",
      "side": 1,
      "message": "nit: We check here to save the log right? I wonder, could we remove the allocations of the std::string and read the file into a buffer, if we\u0027ll call this in this case?",
      "range": {
        "startLine": 1451,
        "startChar": 0,
        "endLine": 1452,
        "endChar": 15
      },
      "revId": "16b778884eb2ccf84c87d9bb011a797fabd129d7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "685087a3_80d755cf",
        "filename": "libs/binder/IPCThreadState.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1452,
      "author": {
        "id": 1869395
      },
      "writtenOn": "2022-03-08T21:33:02Z",
      "side": 1,
      "message": "We are trying to avoid calling the ioctl() here, sorry I don\u0027t follow the removing the string allocs?",
      "parentUuid": "a3909a34_cee9080b",
      "range": {
        "startLine": 1451,
        "startChar": 0,
        "endLine": 1452,
        "endChar": 15
      },
      "revId": "16b778884eb2ccf84c87d9bb011a797fabd129d7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "46f9f275_b1054916",
        "filename": "libs/binder/IPCThreadState.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1452,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-03-08T22:33:11Z",
      "side": 1,
      "message": "isDriverFeatureEnabled makes allocations internally, but they\u0027re not necessary (these are added in the CL above this, but it\u0027s only a few allocations per process startup, rather this which happens potentially per operation, and in an error condition).\n\nFor instance, this line while make an allocation (depending on the libc++ implementation):\n        std::string path \u003d \"/dev/binderfs/features/\";\n\nso will .append. Potentially also ifstream (we could read a single byte using the C APIs without allocations). We could add an error case to binderAllocationLimits to check this, though honestly it\u0027s not extremely critical (hence nit).",
      "parentUuid": "685087a3_80d755cf",
      "range": {
        "startLine": 1451,
        "startChar": 0,
        "endLine": 1452,
        "endChar": 15
      },
      "revId": "16b778884eb2ccf84c87d9bb011a797fabd129d7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "57cbac5b_d6739c3d",
        "filename": "libs/binder/IPCThreadState.cpp",
        "patchSetId": 7
      },
      "lineNbr": 1452,
      "author": {
        "id": 1869395
      },
      "writtenOn": "2022-03-08T22:59:38Z",
      "side": 1,
      "message": "oh! you are absolutely right. We don\u0027t need that append logic anymore. I can use a define for the path and let preprocessor concat the filenames. Thanks much better, thanks!",
      "parentUuid": "46f9f275_b1054916",
      "range": {
        "startLine": 1451,
        "startChar": 0,
        "endLine": 1452,
        "endChar": 15
      },
      "revId": "16b778884eb2ccf84c87d9bb011a797fabd129d7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}