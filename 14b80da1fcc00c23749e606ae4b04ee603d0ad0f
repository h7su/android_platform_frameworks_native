{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e0b8b695_0537828a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1944400
      },
      "writtenOn": "2022-05-12T01:18:28Z",
      "side": 1,
      "message": "I assume we don\u0027t have any test coverage for non __linux__ builds so we\u0027ll probably re-break this occasionally down the line.",
      "revId": "14b80da1fcc00c23749e606ae4b04ee603d0ad0f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cd03bae1_c409896a",
        "filename": "libs/binder/Parcel.cpp",
        "patchSetId": 8
      },
      "lineNbr": 34,
      "author": {
        "id": 1944400
      },
      "writtenOn": "2022-05-12T01:18:28Z",
      "side": 1,
      "message": "this header isn\u0027t for rlimit, right?\n\ni assume it is for SCHED_NORMAL, which is being disabled with BINDER_WITH_KERNEL_IPC (in a separate CL), so i\u0027d recommend using that same flag to guard the include",
      "revId": "14b80da1fcc00c23749e606ae4b04ee603d0ad0f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "907de092_a97357dc",
        "filename": "libs/binder/Parcel.cpp",
        "patchSetId": 8
      },
      "lineNbr": 34,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2022-05-12T03:59:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cd03bae1_c409896a",
      "revId": "14b80da1fcc00c23749e606ae4b04ee603d0ad0f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad48a292_7bb58d79",
        "filename": "libs/binder/Parcel.cpp",
        "patchSetId": 8
      },
      "lineNbr": 2646,
      "author": {
        "id": 1944400
      },
      "writtenOn": "2022-05-12T01:18:28Z",
      "side": 1,
      "message": "maybe we should init gMaxFds so that the FlattenableHelperInterface methods don\u0027t break. i\u0027d guess they don\u0027t matter for trusty, but the condition is vague so it might apply to more than trusty at some point\n\naside: it seems like gMaxFds is only used to reject unreasonable inputs. maybe we could do something simpler and delete this",
      "revId": "14b80da1fcc00c23749e606ae4b04ee603d0ad0f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2c4c9bfc_c9ef94c7",
        "filename": "libs/binder/Parcel.cpp",
        "patchSetId": 8
      },
      "lineNbr": 2646,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2022-05-12T20:53:56Z",
      "side": 1,
      "message": "FlattenableHelper isn\u0027t part of AIDL, you have to create one manually and write it to a Parcel. I could disable it altogether, although adding #ifdef\u0027s to headers could cause ABI problems (mostly when a virtual function is disabled on some builds but not others).",
      "parentUuid": "ad48a292_7bb58d79",
      "revId": "14b80da1fcc00c23749e606ae4b04ee603d0ad0f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "28e243dc_ae993a12",
        "filename": "libs/binder/Parcel.cpp",
        "patchSetId": 8
      },
      "lineNbr": 2646,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-05-23T23:33:12Z",
      "side": 1,
      "message": "Btw b/26696080 didn\u0027t really get fixed until b/131868573. I am suspicious these rlimit checks really do anything. The clones of these FDs should fail anyway, and this code can\u0027t be fixing the whole problem (if 999 fds are open in the process, you can still have a Parcel with 1023), so we still need to handle too big of allocations (and the fuzzer should also be able to detect if we remove this and another solution is still needed).\n\nI think it should be fine to:\n- send FYI to ctate we are removing this (I can once we have the CL)\n- remove all this code (as Frederick suggests)\n- make sure we add a test that tries to add more FDs to the Parcel than rlimit to see the test",
      "parentUuid": "2c4c9bfc_c9ef94c7",
      "revId": "14b80da1fcc00c23749e606ae4b04ee603d0ad0f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c496a17f_ed07881f",
        "filename": "libs/binder/Parcel.cpp",
        "patchSetId": 8
      },
      "lineNbr": 2646,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2022-06-09T03:21:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "28e243dc_ae993a12",
      "revId": "14b80da1fcc00c23749e606ae4b04ee603d0ad0f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}