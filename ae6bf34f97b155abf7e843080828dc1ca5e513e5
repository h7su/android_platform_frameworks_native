{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "49576709_8aee4557",
        "filename": "libs/binder/ndk/include_cpp/android/binder_parcelable_utils.h",
        "patchSetId": 1
      },
      "lineNbr": 42,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-10-13T19:30:10Z",
      "side": 1,
      "message": "undef in file",
      "range": {
        "startLine": 38,
        "startChar": 0,
        "endLine": 42,
        "endChar": 19
      },
      "revId": "ae6bf34f97b155abf7e843080828dc1ca5e513e5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7b1e15e9_730124f5",
        "filename": "libs/binder/ndk/include_cpp/android/binder_parcelable_utils.h",
        "patchSetId": 1
      },
      "lineNbr": 42,
      "author": {
        "id": 1386891
      },
      "writtenOn": "2020-10-14T12:39:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "49576709_8aee4557",
      "range": {
        "startLine": 38,
        "startChar": 0,
        "endLine": 42,
        "endChar": 19
      },
      "revId": "ae6bf34f97b155abf7e843080828dc1ca5e513e5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b25379e_734aec6b",
        "filename": "libs/binder/ndk/include_cpp/android/binder_parcelable_utils.h",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-10-13T19:30:10Z",
      "side": 1,
      "message": "why rename?",
      "range": {
        "startLine": 76,
        "startChar": 0,
        "endLine": 76,
        "endChar": 39
      },
      "revId": "ae6bf34f97b155abf7e843080828dc1ca5e513e5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "159aad06_197a1eb0",
        "filename": "libs/binder/ndk/include_cpp/android/binder_parcelable_utils.h",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 1386891
      },
      "writtenOn": "2020-10-14T12:39:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3b25379e_734aec6b",
      "range": {
        "startLine": 76,
        "startChar": 0,
        "endLine": 76,
        "endChar": 39
      },
      "revId": "ae6bf34f97b155abf7e843080828dc1ca5e513e5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0b56c213_ef4d4d86",
        "filename": "libs/binder/ndk/include_ndk/android/binder_parcel.h",
        "patchSetId": 1
      },
      "lineNbr": 1123,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-10-13T19:30:10Z",
      "side": 1,
      "message": "these APIs need documentation",
      "revId": "ae6bf34f97b155abf7e843080828dc1ca5e513e5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "81814fa7_8bb26d91",
        "filename": "libs/binder/ndk/include_ndk/android/binder_parcel.h",
        "patchSetId": 1
      },
      "lineNbr": 1123,
      "author": {
        "id": 1386891
      },
      "writtenOn": "2020-10-14T12:39:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0b56c213_ef4d4d86",
      "revId": "ae6bf34f97b155abf7e843080828dc1ca5e513e5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9665b13e_743ff641",
        "filename": "libs/binder/ndk/include_ndk/android/binder_parcel.h",
        "patchSetId": 1
      },
      "lineNbr": 1124,
      "author": {
        "id": 1010103
      },
      "writtenOn": "2020-10-13T20:31:35Z",
      "side": 1,
      "message": "Adjusting capacity I\u0027d get to avoid re-allocation churn, but why do we want to let things set the actual size? This looks super error prone to me?",
      "revId": "ae6bf34f97b155abf7e843080828dc1ca5e513e5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "802e5922_124bd107",
        "filename": "libs/binder/ndk/include_ndk/android/binder_parcel.h",
        "patchSetId": 1
      },
      "lineNbr": 1124,
      "author": {
        "id": 1386891
      },
      "writtenOn": "2020-10-14T12:39:13Z",
      "side": 1,
      "message": "for now, the only use case is setDataSize(0), in this case, I\u0027d better expose freeData() instead?",
      "parentUuid": "9665b13e_743ff641",
      "revId": "ae6bf34f97b155abf7e843080828dc1ca5e513e5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "962e780e_c2deb458",
        "filename": "libs/binder/ndk/include_ndk/android/binder_parcel.h",
        "patchSetId": 1
      },
      "lineNbr": 1124,
      "author": {
        "id": 1010103
      },
      "writtenOn": "2020-10-14T16:44:01Z",
      "side": 1,
      "message": "Looking at the usage I\u0027d suggest instead a reset() method instead that both sets the data size to 0 and sets the position back to 0. And can then also reset any other state that might be forgotten about or added latter (eg, flags)",
      "parentUuid": "802e5922_124bd107",
      "revId": "ae6bf34f97b155abf7e843080828dc1ca5e513e5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d552f4f2_e7136d33",
        "filename": "libs/binder/ndk/include_ndk/android/binder_parcel.h",
        "patchSetId": 1
      },
      "lineNbr": 1125,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-10-13T19:30:10Z",
      "side": 1,
      "message": "size_t?",
      "range": {
        "startLine": 1125,
        "startChar": 0,
        "endLine": 1125,
        "endChar": 7
      },
      "revId": "ae6bf34f97b155abf7e843080828dc1ca5e513e5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4e9be50b_c9138ff0",
        "filename": "libs/binder/ndk/include_ndk/android/binder_parcel.h",
        "patchSetId": 1
      },
      "lineNbr": 1125,
      "author": {
        "id": 1386891
      },
      "writtenOn": "2020-10-14T12:39:13Z",
      "side": 1,
      "message": "It looks like the other method(such as setDataPosition, and so on) uses int32_t, should we keep the consistency? or let new one\u0027s field be size_t?",
      "parentUuid": "d552f4f2_e7136d33",
      "range": {
        "startLine": 1125,
        "startChar": 0,
        "endLine": 1125,
        "endChar": 7
      },
      "revId": "ae6bf34f97b155abf7e843080828dc1ca5e513e5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7944e46e_84dca644",
        "filename": "libs/binder/ndk/include_ndk/android/binder_parcel.h",
        "patchSetId": 1
      },
      "lineNbr": 1125,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-10-14T23:46:12Z",
      "side": 1,
      "message": "I was thinking this b/c libbinder uses these types - you might check what happens when passed a big value (either abort or silent failure, depending on the API).\n\nWonder what jreck thinks here? Maybe it is better to be consistent. I think I was doing it to match Java Parcel API",
      "parentUuid": "4e9be50b_c9138ff0",
      "range": {
        "startLine": 1125,
        "startChar": 0,
        "endLine": 1125,
        "endChar": 7
      },
      "revId": "ae6bf34f97b155abf7e843080828dc1ca5e513e5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "22da7e64_020987c3",
        "filename": "libs/binder/ndk/include_ndk/android/binder_parcel.h",
        "patchSetId": 1
      },
      "lineNbr": 1126,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-10-13T19:30:10Z",
      "side": 1,
      "message": "size_t?",
      "range": {
        "startLine": 1126,
        "startChar": 69,
        "endLine": 1126,
        "endChar": 76
      },
      "revId": "ae6bf34f97b155abf7e843080828dc1ca5e513e5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8afe2d8a_1db81adf",
        "filename": "libs/binder/ndk/include_ndk/android/binder_parcel.h",
        "patchSetId": 1
      },
      "lineNbr": 1126,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-10-13T19:30:10Z",
      "side": 1,
      "message": "size_t?",
      "range": {
        "startLine": 1126,
        "startChar": 84,
        "endLine": 1126,
        "endChar": 91
      },
      "revId": "ae6bf34f97b155abf7e843080828dc1ca5e513e5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c464171f_ff9cee76",
        "filename": "libs/binder/ndk/include_ndk/android/binder_parcel.h",
        "patchSetId": 1
      },
      "lineNbr": 1128,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-10-13T19:30:10Z",
      "side": 1,
      "message": "is this needed? (we\u0027ve avoided it so far because you get one when you start a transaction that already has the transaction header written to it)",
      "range": {
        "startLine": 1128,
        "startChar": 0,
        "endLine": 1128,
        "endChar": 46
      },
      "revId": "ae6bf34f97b155abf7e843080828dc1ca5e513e5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cbe36890_061a9438",
        "filename": "libs/binder/ndk/include_ndk/android/binder_parcel.h",
        "patchSetId": 1
      },
      "lineNbr": 1128,
      "author": {
        "id": 1010103
      },
      "writtenOn": "2020-10-13T20:31:35Z",
      "side": 1,
      "message": "fwiw I\u0027m in favor of having AParcel_create() if for no other reason than to make it easier to unit-test parceling code. It\u0027s way clunky to setup an IPC transaction just to assert the parceling code.",
      "parentUuid": "c464171f_ff9cee76",
      "range": {
        "startLine": 1128,
        "startChar": 0,
        "endLine": 1128,
        "endChar": 46
      },
      "revId": "ae6bf34f97b155abf7e843080828dc1ca5e513e5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2a0c6c7c_d4314fce",
        "filename": "libs/binder/ndk/include_ndk/android/binder_parcel.h",
        "patchSetId": 1
      },
      "lineNbr": 1128,
      "author": {
        "id": 1386891
      },
      "writtenOn": "2020-10-14T12:39:13Z",
      "side": 1,
      "message": "ParcelableHolder needs to have an internal Parcel object before transaction to hold the extension in it.",
      "parentUuid": "cbe36890_061a9438",
      "range": {
        "startLine": 1128,
        "startChar": 0,
        "endLine": 1128,
        "endChar": 46
      },
      "revId": "ae6bf34f97b155abf7e843080828dc1ca5e513e5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}