{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "07972bb0_0aed4db5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-11-30T17:53:15Z",
      "side": 1,
      "message": "Hey Pawan - I suspect that these aborts are due to an FD leak (resource exhaustion). Can you investigate this?\n\nSome things you can try:\n- \u0027CHECK_NE(fd, -1) \u003c\u003c (system(\"ls /proc/self/fd\")), \"fd\"\u0027 (quick hack to dump fds in this situation)\n- repro locally and use strace or lsof\n- ??? use fdsan (I haven\u0027t tried it, but I believe it should help in cases like this)",
      "revId": "28a6ae0c58bf0c81d59115afb3b224a1fcb31ffb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1a785c1f_c4c8b024",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1956258
      },
      "writtenOn": "2022-12-02T15:26:51Z",
      "side": 1,
      "message": "I checked this issue further. it looks like https://source.corp.google.com/android/frameworks/native/libs/binder/tests/parcel_fuzzer/libbinder_driver.cpp;l\u003d73?q\u003dlibbinder_driver\u0026sq\u003dpackage:%5Eandroid$ \n\noptions.extraFds vector is never cleared. It is growing continuously in size for certain fuzzer inputs. We can have clear this fds vector after certain threshold. This can be one of the cause of hitting open fd limits. I have updated CL to clear extraFds when reached 50 percent threshold of max limit which is 32768. I have tested this solution with example_service_fuzzer with test case from infra and this seems to clear the test.",
      "parentUuid": "07972bb0_0aed4db5",
      "revId": "28a6ae0c58bf0c81d59115afb3b224a1fcb31ffb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9af3b08f_2c7c4c4f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-12-02T16:09:36Z",
      "side": 1,
      "message": "It should be cleared after every run. If it\u0027s growing within a single run of fuzzService, I wonder why are so many FDs being added to it? (it likely means a service is returning many FDs - why is it?).",
      "parentUuid": "1a785c1f_c4c8b024",
      "revId": "28a6ae0c58bf0c81d59115afb3b224a1fcb31ffb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5a2d3aa7_2a741403",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1956258
      },
      "writtenOn": "2022-12-05T13:08:35Z",
      "side": 1,
      "message": "for each iteration, around 3K fds were added in this vector for example_service_fuzzer. I will check from this perspective. I still think we should have this check if any service actually uses those many fds. This issue is now with one other service as well, I am not sure if that is service dependent, more towards parcel data.",
      "parentUuid": "9af3b08f_2c7c4c4f",
      "revId": "28a6ae0c58bf0c81d59115afb3b224a1fcb31ffb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1a8191df_ac721870",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-12-05T20:31:03Z",
      "side": 1,
      "message": "I suspect there is a leak. Even if there is not a leak, no code should use this many fd resources, so we should consider redesigning it.\n\nThank yoU!",
      "parentUuid": "5a2d3aa7_2a741403",
      "revId": "28a6ae0c58bf0c81d59115afb3b224a1fcb31ffb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}