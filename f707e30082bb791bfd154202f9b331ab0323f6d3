{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "8e74c12e_4f3aa049",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1211949
      },
      "writtenOn": "2020-10-22T21:17:26Z",
      "side": 1,
      "message": "This CL fixes device association on gamepads.\nThis is useful when gaming in desktop mode while possibly focusing smartphone\u0027s screen.",
      "revId": "f707e30082bb791bfd154202f9b331ab0323f6d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e9f0745c_33318034",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1109308
      },
      "writtenOn": "2020-10-22T22:13:58Z",
      "side": 1,
      "message": "Folks:\n\nThis could be useful for OEM who are making gaming devices on top of Android that have built-in gamepads, in a way that the built-in gamepads is associated to the built-in display.\n\nThis needs to be approved by either svv@, lzye@ or michaelwr@ at last though.",
      "revId": "f707e30082bb791bfd154202f9b331ab0323f6d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "896daab9_9c450672",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1149384
      },
      "writtenOn": "2020-10-23T16:50:28Z",
      "side": 1,
      "message": "Please add a test for this in InputReader_test. You can refer to:\n \n    TEST_F(InputReaderTest, Device_CanDispatchToDisplay) {",
      "revId": "f707e30082bb791bfd154202f9b331ab0323f6d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "41df8193_a116d20b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1211949
      },
      "writtenOn": "2020-10-24T15:37:56Z",
      "side": 1,
      "message": "I did a mapper test rather than a reader test, but I think that\u0027s more appropriate.",
      "parentUuid": "896daab9_9c450672",
      "revId": "f707e30082bb791bfd154202f9b331ab0323f6d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "92a542ff_2867817b",
        "filename": "services/inputflinger/reader/mapper/JoystickInputMapper.cpp",
        "patchSetId": 1
      },
      "lineNbr": 199,
      "author": {
        "id": 1149384
      },
      "writtenOn": "2020-10-23T16:50:28Z",
      "side": 1,
      "message": "use full type here, i think it\u0027s std::optional\u003cViewPort\u003e?",
      "range": {
        "startLine": 199,
        "startChar": 4,
        "endLine": 199,
        "endChar": 8
      },
      "revId": "f707e30082bb791bfd154202f9b331ab0323f6d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "57e2d9d9_a540d890",
        "filename": "services/inputflinger/reader/mapper/JoystickInputMapper.cpp",
        "patchSetId": 1
      },
      "lineNbr": 199,
      "author": {
        "id": 1211949
      },
      "writtenOn": "2020-10-24T15:37:56Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "92a542ff_2867817b",
      "range": {
        "startLine": 199,
        "startChar": 4,
        "endLine": 199,
        "endChar": 8
      },
      "revId": "f707e30082bb791bfd154202f9b331ab0323f6d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1c000df5_15547ad6",
        "filename": "services/inputflinger/reader/mapper/JoystickInputMapper.cpp",
        "patchSetId": 1
      },
      "lineNbr": 204,
      "author": {
        "id": 1109308
      },
      "writtenOn": "2020-10-22T22:13:58Z",
      "side": 1,
      "message": "mDisplayId \u003d viewport ? viewport-\u003edisplayId : ADISPLAY_ID_NONE;",
      "range": {
        "startLine": 200,
        "startChar": 4,
        "endLine": 204,
        "endChar": 5
      },
      "revId": "f707e30082bb791bfd154202f9b331ab0323f6d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eb21f9b4_fa9f2656",
        "filename": "services/inputflinger/reader/mapper/JoystickInputMapper.cpp",
        "patchSetId": 1
      },
      "lineNbr": 204,
      "author": {
        "id": 1149384
      },
      "writtenOn": "2020-10-23T16:50:28Z",
      "side": 1,
      "message": "I\u0027m actually ok with the more explicit block here, will leave it up to the CL owner to decide",
      "parentUuid": "1c000df5_15547ad6",
      "range": {
        "startLine": 200,
        "startChar": 4,
        "endLine": 204,
        "endChar": 5
      },
      "revId": "f707e30082bb791bfd154202f9b331ab0323f6d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2ada4a87_fcea1fa2",
        "filename": "services/inputflinger/reader/mapper/JoystickInputMapper.cpp",
        "patchSetId": 1
      },
      "lineNbr": 204,
      "author": {
        "id": 1109308
      },
      "writtenOn": "2020-10-23T18:41:30Z",
      "side": 1,
      "message": "If you decide to take the if-else, which is more verbose, you should at least leave a space between if keyword and the parenthesis.\n\nI still strongly prefer ternary because it\u0027s more concise and it\u0027s not complicated enough in this case to make it hard to parse. I would ask for if-else blocks if it\u0027d be an embedded ternary.",
      "parentUuid": "eb21f9b4_fa9f2656",
      "range": {
        "startLine": 200,
        "startChar": 4,
        "endLine": 204,
        "endChar": 5
      },
      "revId": "f707e30082bb791bfd154202f9b331ab0323f6d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "42748554_17a36be5",
        "filename": "services/inputflinger/reader/mapper/JoystickInputMapper.cpp",
        "patchSetId": 1
      },
      "lineNbr": 204,
      "author": {
        "id": 1211949
      },
      "writtenOn": "2020-10-24T15:37:56Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "2ada4a87_fcea1fa2",
      "range": {
        "startLine": 200,
        "startChar": 4,
        "endLine": 204,
        "endChar": 5
      },
      "revId": "f707e30082bb791bfd154202f9b331ab0323f6d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ebaafd63_2d88c01c",
        "filename": "services/inputflinger/reader/mapper/JoystickInputMapper.cpp",
        "patchSetId": 1
      },
      "lineNbr": 348,
      "author": {
        "id": 1149384
      },
      "writtenOn": "2020-10-23T16:50:28Z",
      "side": 1,
      "message": "I wonder if more generally, this call should go through the context. The context would then append the event id, device id, and display id.\n\nThis way, we dont need to cache all these values in the mappers, and add support for display association to all mappers at once.\n\nThis would look something like:\n\n    mContext-\u003enotifyMotion(when, AINPUT_SOURCE_JOYSTICK, policyFlags, AMOTION_EVENT_ACTION_MOVE, 0, 0, ...);\n\nJust a thought, maybe we can address this in the future.",
      "range": {
        "startLine": 342,
        "startChar": 4,
        "endLine": 348,
        "endChar": 39
      },
      "revId": "f707e30082bb791bfd154202f9b331ab0323f6d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5a909d28_c4b0c4c0",
        "filename": "services/inputflinger/reader/mapper/JoystickInputMapper.cpp",
        "patchSetId": 1
      },
      "lineNbr": 348,
      "author": {
        "id": 1211949
      },
      "writtenOn": "2020-10-24T15:37:56Z",
      "side": 1,
      "message": "This is probably right, since it doesn\u0027t make much attaching just some specific input types to a display. I\u0027m sure someone can find a usecase for mapping rotary encoders. However it feels a too big a refactor for me :-)",
      "parentUuid": "ebaafd63_2d88c01c",
      "range": {
        "startLine": 342,
        "startChar": 4,
        "endLine": 348,
        "endChar": 39
      },
      "revId": "f707e30082bb791bfd154202f9b331ab0323f6d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e3942b16_735649e5",
        "filename": "services/inputflinger/reader/mapper/JoystickInputMapper.h",
        "patchSetId": 1
      },
      "lineNbr": 109,
      "author": {
        "id": 1109308
      },
      "writtenOn": "2020-10-22T22:15:41Z",
      "side": 1,
      "message": "Actually, move the initialization here:\n\n```\nint32_t mDisplayId{ADISPLAY_ID_NONE};\n```\n\nand remove the change in L24 in the CPP file.",
      "range": {
        "startLine": 109,
        "startChar": 12,
        "endLine": 109,
        "endChar": 23
      },
      "revId": "f707e30082bb791bfd154202f9b331ab0323f6d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}