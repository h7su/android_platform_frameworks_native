{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6584f016_27bb3691",
        "filename": "libs/binder/rust/src/native.rs",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1638873
      },
      "writtenOn": "2020-12-15T23:26:01Z",
      "side": 1,
      "message": "See comment below; is this Box needed anymore?",
      "revId": "a8ec79d524771dae409f27e30c9c7de4793873e4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9f2c9aa3_fe01b3dc",
        "filename": "libs/binder/rust/src/native.rs",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 1093255
      },
      "writtenOn": "2020-12-16T00:48:24Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "6584f016_27bb3691",
      "revId": "a8ec79d524771dae409f27e30c9c7de4793873e4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "df543fcc_fdca9c88",
        "filename": "libs/binder/rust/src/native.rs",
        "patchSetId": 1
      },
      "lineNbr": 181,
      "author": {
        "id": 1638873
      },
      "writtenOn": "2020-12-15T23:26:01Z",
      "side": 1,
      "message": "If userdata is no longer rust_object, then do you need the latter to be *mut T? It could be T instead and embed the Rust object directly inside the Binder.",
      "revId": "a8ec79d524771dae409f27e30c9c7de4793873e4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9601dd22_c2e13301",
        "filename": "libs/binder/rust/src/native.rs",
        "patchSetId": 1
      },
      "lineNbr": 181,
      "author": {
        "id": 1093255
      },
      "writtenOn": "2020-12-16T00:48:24Z",
      "side": 1,
      "message": "I guess not. I couldn\u0027t convince myself that Binder\u003cT\u003e would have the correct lifetime, but I\u0027m confident it does now, reading back through things.",
      "parentUuid": "df543fcc_fdca9c88",
      "revId": "a8ec79d524771dae409f27e30c9c7de4793873e4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f8c2f77b_a20f2c8b",
        "filename": "libs/binder/rust/src/native.rs",
        "patchSetId": 1
      },
      "lineNbr": 260,
      "author": {
        "id": 1638873
      },
      "writtenOn": "2020-12-15T23:26:01Z",
      "side": 1,
      "message": "If you keep rust_object as *mut T, you\u0027ll need to drop the Box here, I think.",
      "revId": "a8ec79d524771dae409f27e30c9c7de4793873e4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9ed4a92a_e859ecad",
        "filename": "libs/binder/rust/src/native.rs",
        "patchSetId": 1
      },
      "lineNbr": 260,
      "author": {
        "id": 1093255
      },
      "writtenOn": "2020-12-16T00:48:24Z",
      "side": 1,
      "message": "No, we want to drop T when on_destroy is called. That\u0027s a moot point now that we\u0027re holding the Binder alive from the userdata reference.",
      "parentUuid": "f8c2f77b_a20f2c8b",
      "revId": "a8ec79d524771dae409f27e30c9c7de4793873e4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1ae2be5d_4df9d110",
        "filename": "libs/binder/rust/src/native.rs",
        "patchSetId": 1
      },
      "lineNbr": 327,
      "author": {
        "id": 1638873
      },
      "writtenOn": "2020-12-15T23:26:01Z",
      "side": 1,
      "message": "If you\u0027re trying to call Arc::clone(), you should call it as an associated function and not a method.",
      "revId": "a8ec79d524771dae409f27e30c9c7de4793873e4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "330174ce_7c2a914d",
        "filename": "libs/binder/rust/src/native.rs",
        "patchSetId": 1
      },
      "lineNbr": 327,
      "author": {
        "id": 1093255
      },
      "writtenOn": "2020-12-16T00:48:24Z",
      "side": 1,
      "message": "From the Rust docs:\n\n    // The two syntaxes below are equivalent.\n    let a \u003d foo.clone();\n    let b \u003d Arc::clone(\u0026foo);\n\nStill, it\u0027s probably clearer using the associated function.",
      "parentUuid": "1ae2be5d_4df9d110",
      "revId": "a8ec79d524771dae409f27e30c9c7de4793873e4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}