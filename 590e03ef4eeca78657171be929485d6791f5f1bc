{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e854402a_ba10df6a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 8,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-04-25T23:17:24Z",
      "side": 1,
      "message": "you\u0027ll want to add it to binderLibTest, can you add a case that checks it for the main process, or a case that returns the value for a spawned process?",
      "range": {
        "startLine": 8,
        "startChar": 6,
        "endLine": 8,
        "endChar": 9
      },
      "revId": "590e03ef4eeca78657171be929485d6791f5f1bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7ea7010a_94a60ecf",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 8,
      "author": {
        "id": 1944405
      },
      "writtenOn": "2022-04-30T00:30:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e854402a_ba10df6a",
      "range": {
        "startLine": 8,
        "startChar": 6,
        "endLine": 8,
        "endChar": 9
      },
      "revId": "590e03ef4eeca78657171be929485d6791f5f1bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d3e8e80a_ee79b6b6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1644679
      },
      "writtenOn": "2022-04-25T18:07:41Z",
      "side": 1,
      "message": "Delete this line in `git commit --amend`.\n\nThis seems to happen when there are other lines of text directly above \"Test:\" and the hook adds another \"Change-Id:\" line.\nI mad a bug for it when I first joined and no one cared ðŸ˜Š\nhttps://buganizer.corp.google.com/issues/154343841\n\nSo try to have those lines with \"Test:\"/\"Bug:\" next to each other always starting with \"Test:\" or \"Bug:\" and keep an empty line between the CL description and the \"Test:\"/\"Bug:\" lines.",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 52
      },
      "revId": "590e03ef4eeca78657171be929485d6791f5f1bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a7e61830_9843d6ee",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1944405
      },
      "writtenOn": "2022-04-30T00:30:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d3e8e80a_ee79b6b6",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 52
      },
      "revId": "590e03ef4eeca78657171be929485d6791f5f1bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "028ecc29_80265125",
        "filename": "libs/binder/Binder.cpp",
        "patchSetId": 1
      },
      "lineNbr": 542,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-04-25T23:17:24Z",
      "side": 1,
      "message": "This is problematic, because it doesn\u0027t take into account if a process does this:\n\n    setThreadPoolMaxThreadCount(1); // kernel can start one\n    joinThreadPool(); // adds one more\n\nHowever, the current threadpool count would be able to tell this apart.",
      "range": {
        "startLine": 542,
        "startChar": 38,
        "endLine": 542,
        "endChar": 90
      },
      "revId": "590e03ef4eeca78657171be929485d6791f5f1bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aa9e2d23_87ae9a7a",
        "filename": "libs/binder/IPCThreadState.cpp",
        "patchSetId": 1
      },
      "lineNbr": 642,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-04-25T23:17:24Z",
      "side": 1,
      "message": "this will be racey - please use \u0027mLock\u0027 or std::atomic",
      "range": {
        "startLine": 641,
        "startChar": 0,
        "endLine": 642,
        "endChar": 61
      },
      "revId": "590e03ef4eeca78657171be929485d6791f5f1bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd69bc36_9ac5edea",
        "filename": "libs/binder/IPCThreadState.cpp",
        "patchSetId": 1
      },
      "lineNbr": 642,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-04-25T23:19:52Z",
      "side": 1,
      "message": "Note specifically, the race is that mCurrentThreads will be read from two threads, say as 2. Each thread will increment this and write 3, under the lock inside of this function.\n\nAlso, consider adding a CHECK here, for instance the current threadcount (excluding polling threads) should always be \u003c\u003d maxThreads + numberOfExplicitJoins",
      "parentUuid": "aa9e2d23_87ae9a7a",
      "range": {
        "startLine": 641,
        "startChar": 0,
        "endLine": 642,
        "endChar": 61
      },
      "revId": "590e03ef4eeca78657171be929485d6791f5f1bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ac55b24e_5b1b1f95",
        "filename": "libs/binder/IPCThreadState.cpp",
        "patchSetId": 1
      },
      "lineNbr": 673,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-04-25T23:17:24Z",
      "side": 1,
      "message": "configuration",
      "range": {
        "startLine": 673,
        "startChar": 75,
        "endLine": 673,
        "endChar": 89
      },
      "revId": "590e03ef4eeca78657171be929485d6791f5f1bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bfea53b8_7baa5d11",
        "filename": "libs/binder/IPCThreadState.cpp",
        "patchSetId": 1
      },
      "lineNbr": 675,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-04-25T23:17:24Z",
      "side": 1,
      "message": "same",
      "range": {
        "startLine": 674,
        "startChar": 0,
        "endLine": 675,
        "endChar": 61
      },
      "revId": "590e03ef4eeca78657171be929485d6791f5f1bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "649ef4bc_7508c7a3",
        "filename": "libs/binder/IPCThreadState.cpp",
        "patchSetId": 1
      },
      "lineNbr": 701,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-04-25T23:17:24Z",
      "side": 1,
      "message": "you\u0027ll also want to keep track of these threads (I\u0027m curious also if any process calls setupPolling multiple times)",
      "range": {
        "startLine": 678,
        "startChar": 0,
        "endLine": 701,
        "endChar": 1
      },
      "revId": "590e03ef4eeca78657171be929485d6791f5f1bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7b197582_ce6a9e74",
        "filename": "libs/binder/IServiceManager.cpp",
        "patchSetId": 1
      },
      "lineNbr": 283,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-04-25T23:17:24Z",
      "side": 1,
      "message": "here, we should check that:\n\n    numberOfThreads - (isCurrentThreadABinderThread() ? 1 : 0)\n\nIs a positive number (expectation that a thread will be able to serve)",
      "revId": "590e03ef4eeca78657171be929485d6791f5f1bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6b4f2162_f3eb7a7f",
        "filename": "libs/binder/ProcessState.cpp",
        "patchSetId": 1
      },
      "lineNbr": 398,
      "author": {
        "id": 1644679
      },
      "writtenOn": "2022-04-25T18:07:41Z",
      "side": 1,
      "message": "This is the call to the kernel driver to tell it what the max threads should be so it can know if it can ask userspace to spawn more threads.\nI imagine that the threads are spawned later and would use joinThreadPool, so does this make the CurrentThreadCount 2x what it should be?",
      "range": {
        "startLine": 398,
        "startChar": 8,
        "endLine": 398,
        "endChar": 37
      },
      "revId": "590e03ef4eeca78657171be929485d6791f5f1bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8cda6b09_cb83a2cc",
        "filename": "libs/binder/ProcessState.cpp",
        "patchSetId": 1
      },
      "lineNbr": 398,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-04-25T23:17:24Z",
      "side": 1,
      "message": "Right, we should avoid setting it here",
      "parentUuid": "6b4f2162_f3eb7a7f",
      "range": {
        "startLine": 398,
        "startChar": 8,
        "endLine": 398,
        "endChar": 37
      },
      "revId": "590e03ef4eeca78657171be929485d6791f5f1bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "46f182c0_6202adc5",
        "filename": "libs/binder/ProcessState.cpp",
        "patchSetId": 1
      },
      "lineNbr": 407,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-04-25T23:17:24Z",
      "side": 1,
      "message": "so this is one of the bugs we want to solve",
      "range": {
        "startLine": 407,
        "startChar": 0,
        "endLine": 407,
        "endChar": 60
      },
      "revId": "590e03ef4eeca78657171be929485d6791f5f1bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b9c38404_3fe1093a",
        "filename": "libs/binder/ProcessState.cpp",
        "patchSetId": 1
      },
      "lineNbr": 409,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-04-25T23:17:24Z",
      "side": 1,
      "message": "and this",
      "range": {
        "startLine": 409,
        "startChar": 34,
        "endLine": 409,
        "endChar": 61
      },
      "revId": "590e03ef4eeca78657171be929485d6791f5f1bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5754fafb_2005a532",
        "filename": "libs/binder/include/binder/ProcessState.h",
        "patchSetId": 1
      },
      "lineNbr": 59,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-04-25T23:17:24Z",
      "side": 1,
      "message": "we should avoid making this method public, because it\u0027s an internal implementation detail (it\u0027s fine to not have a setter - this will actually make threading easier)",
      "range": {
        "startLine": 59,
        "startChar": 0,
        "endLine": 59,
        "endChar": 64
      },
      "revId": "590e03ef4eeca78657171be929485d6791f5f1bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d3f6538f_c3b74d62",
        "filename": "libs/binder/include/binder/ProcessState.h",
        "patchSetId": 1
      },
      "lineNbr": 93,
      "author": {
        "id": 1644679
      },
      "writtenOn": "2022-04-25T18:07:41Z",
      "side": 1,
      "message": "Add a comment describing this new function.",
      "range": {
        "startLine": 93,
        "startChar": 4,
        "endLine": 93,
        "endChar": 51
      },
      "revId": "590e03ef4eeca78657171be929485d6791f5f1bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "318e70e2_fb313c52",
        "filename": "libs/binder/include/binder/ProcessState.h",
        "patchSetId": 1
      },
      "lineNbr": 93,
      "author": {
        "id": 1944405
      },
      "writtenOn": "2022-04-30T00:30:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d3f6538f_c3b74d62",
      "range": {
        "startLine": 93,
        "startChar": 4,
        "endLine": 93,
        "endChar": 51
      },
      "revId": "590e03ef4eeca78657171be929485d6791f5f1bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0489245c_e95c02a7",
        "filename": "libs/binder/include/binder/ProcessState.h",
        "patchSetId": 1
      },
      "lineNbr": 139,
      "author": {
        "id": 1644679
      },
      "writtenOn": "2022-04-25T18:07:41Z",
      "side": 1,
      "message": "nit: of",
      "range": {
        "startLine": 139,
        "startChar": 22,
        "endLine": 139,
        "endChar": 25
      },
      "revId": "590e03ef4eeca78657171be929485d6791f5f1bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}