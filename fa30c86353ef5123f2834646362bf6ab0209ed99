{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b3861a89_405d49e8",
        "filename": "libs/binder/Parcel.cpp",
        "patchSetId": 2
      },
      "lineNbr": 104,
      "author": {
        "id": 1944400
      },
      "writtenOn": "2022-05-06T20:41:23Z",
      "side": 1,
      "message": "can you document the rationale for what is and isn\u0027t ifndef\u0027d somewhere. outside the context of this CL, it wouldn\u0027t be obvious to me that the goal is to remove uses of flat_binder_object as opposed to removing as much non-RPC binder stuff as possible",
      "revId": "fa30c86353ef5123f2834646362bf6ab0209ed99",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f8b94f82_6631819f",
        "filename": "libs/binder/Parcel.cpp",
        "patchSetId": 2
      },
      "lineNbr": 104,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2022-05-12T22:45:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b3861a89_405d49e8",
      "revId": "fa30c86353ef5123f2834646362bf6ab0209ed99",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "53246230_fd15cdce",
        "filename": "libs/binder/Parcel.cpp",
        "patchSetId": 2
      },
      "lineNbr": 181,
      "author": {
        "id": 1944400
      },
      "writtenOn": "2022-05-06T20:41:23Z",
      "side": 1,
      "message": "this one seems like overkill since it should compile out. are the constants not available?",
      "revId": "fa30c86353ef5123f2834646362bf6ab0209ed99",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fe27123d_78c8f266",
        "filename": "libs/binder/Parcel.cpp",
        "patchSetId": 2
      },
      "lineNbr": 181,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2022-05-10T01:50:12Z",
      "side": 1,
      "message": "\u003e are the constants not available?\n\nThey\u0027re also from linux/android/binder.h",
      "parentUuid": "53246230_fd15cdce",
      "revId": "fa30c86353ef5123f2834646362bf6ab0209ed99",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6eefd3b3_aef7f6d7",
        "filename": "libs/binder/Parcel.cpp",
        "patchSetId": 2
      },
      "lineNbr": 181,
      "author": {
        "id": 1944400
      },
      "writtenOn": "2022-05-11T02:29:26Z",
      "side": 1,
      "message": "resolved",
      "parentUuid": "fe27123d_78c8f266",
      "revId": "fa30c86353ef5123f2834646362bf6ab0209ed99",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fee1a11d_0d050aad",
        "filename": "libs/binder/Parcel.cpp",
        "patchSetId": 2
      },
      "lineNbr": 460,
      "author": {
        "id": 1944400
      },
      "writtenOn": "2022-05-06T20:41:23Z",
      "side": 1,
      "message": "it would be more churn, so someone else disagree, but maybe move all the object code together into one ifndef block\n\n```\n    // ...\n\n    memcpy(mData + mDataPos, data + offset, len);\n    mDataPos +\u003d len;\n    mDataSize +\u003d len;\n\n    err \u003d NO_ERROR;\n    \n#ifndef BINDER_NO_KERNEL_IPC\n    const binder_size_t *objects \u003d parcel-\u003emObjects;\n    size_t size \u003d parcel-\u003emObjectsSize;\n    int firstIndex \u003d -1, lastIndex \u003d -2;\n    for (int i \u003d 0; i \u003c (int) size; i++) {\n       // ...\n    }\n    int numObjects \u003d lastIndex - firstIndex + 1;\n    if (numObjects \u003e 0) {\n       // ...\n    }\n#endif\n\n    return err;\n```",
      "revId": "fa30c86353ef5123f2834646362bf6ab0209ed99",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bb195bde_06b24b8e",
        "filename": "libs/binder/Parcel.cpp",
        "patchSetId": 2
      },
      "lineNbr": 460,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2022-05-09T23:26:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fee1a11d_0d050aad",
      "revId": "fa30c86353ef5123f2834646362bf6ab0209ed99",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b810a1c_c0cfdaba",
        "filename": "libs/binder/Parcel.cpp",
        "patchSetId": 2
      },
      "lineNbr": 595,
      "author": {
        "id": 1944400
      },
      "writtenOn": "2022-05-06T20:41:23Z",
      "side": 1,
      "message": "what\u0027s the rationale for completely removing these two functions vs removing most of their implementations (as done in most other cases in this CL)?\n\ni think it is probably fine either way, but these will become relevant for RPC binder soon and we\u0027ll bring them back at least part way",
      "revId": "fa30c86353ef5123f2834646362bf6ab0209ed99",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8bb35308_229f30b2",
        "filename": "libs/binder/Parcel.cpp",
        "patchSetId": 2
      },
      "lineNbr": 595,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2022-05-09T23:26:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3b810a1c_c0cfdaba",
      "revId": "fa30c86353ef5123f2834646362bf6ab0209ed99",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ba8b60c8_e3c67de1",
        "filename": "libs/binder/Parcel.cpp",
        "patchSetId": 2
      },
      "lineNbr": 701,
      "author": {
        "id": 1944400
      },
      "writtenOn": "2022-05-06T20:41:23Z",
      "side": 1,
      "message": "is this necessary? wouldn\u0027t expect it to add any bloat if unused",
      "revId": "fa30c86353ef5123f2834646362bf6ab0209ed99",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6c9e5836_1d184ebb",
        "filename": "libs/binder/Parcel.cpp",
        "patchSetId": 2
      },
      "lineNbr": 701,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2022-05-09T23:26:28Z",
      "side": 1,
      "message": "The code uses B_PACK_CHARS which is defined in the same kernel header as flat_binder object (https://android.googlesource.com/platform/bionic/+/refs/heads/master/libc/kernel/uapi/linux/android/binder.h).\n\nNon-Android OSes could provide that header (importing external/kernel-headers is probably the easiest way), but does that make any sense? It\u0027s very Linux- and Android-specific.",
      "parentUuid": "ba8b60c8_e3c67de1",
      "revId": "fa30c86353ef5123f2834646362bf6ab0209ed99",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7d94b3cb_58f42b8a",
        "filename": "libs/binder/Parcel.cpp",
        "patchSetId": 2
      },
      "lineNbr": 701,
      "author": {
        "id": 1944400
      },
      "writtenOn": "2022-05-11T02:29:26Z",
      "side": 1,
      "message": "Makes sense.",
      "parentUuid": "6c9e5836_1d184ebb",
      "revId": "fa30c86353ef5123f2834646362bf6ab0209ed99",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aef86549_71ff2ee9",
        "filename": "libs/binder/Parcel.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1296,
      "author": {
        "id": 1944400
      },
      "writtenOn": "2022-05-06T20:41:23Z",
      "side": 1,
      "message": "some extra reason to prefer abort in this case: this could leak FDs",
      "revId": "fa30c86353ef5123f2834646362bf6ab0209ed99",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d514de68_a1b3a492",
        "filename": "libs/binder/Parcel.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1296,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2022-05-09T23:26:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "aef86549_71ff2ee9",
      "revId": "fa30c86353ef5123f2834646362bf6ab0209ed99",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7971d6fd_3407e4ae",
        "filename": "libs/binder/Parcel.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1510,
      "author": {
        "id": 1944400
      },
      "writtenOn": "2022-05-06T20:41:23Z",
      "side": 1,
      "message": "IIUC, this whole function body is irrelevant for RPC binder, so you can ifndef more and just return NO_ERROR immediately for the else branch (which I think would make the code easier to understand and maintain)",
      "revId": "fa30c86353ef5123f2834646362bf6ab0209ed99",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "889e0740_65e5b2d4",
        "filename": "libs/binder/Parcel.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1510,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2022-05-09T23:26:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7971d6fd_3407e4ae",
      "revId": "fa30c86353ef5123f2834646362bf6ab0209ed99",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "38f9939b_0732784e",
        "filename": "libs/binder/Parcel.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2357,
      "author": {
        "id": 1944400
      },
      "writtenOn": "2022-05-06T20:41:23Z",
      "side": 1,
      "message": "can you ifndef just this block?",
      "range": {
        "startLine": 2349,
        "startChar": 0,
        "endLine": 2357,
        "endChar": 9
      },
      "revId": "fa30c86353ef5123f2834646362bf6ab0209ed99",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c389b718_3f1d1658",
        "filename": "libs/binder/Parcel.cpp",
        "patchSetId": 2
      },
      "lineNbr": 2357,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2022-05-09T23:26:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "38f9939b_0732784e",
      "range": {
        "startLine": 2349,
        "startChar": 0,
        "endLine": 2357,
        "endChar": 9
      },
      "revId": "fa30c86353ef5123f2834646362bf6ab0209ed99",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}