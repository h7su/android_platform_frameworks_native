{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "4cd041b2_f3218104",
        "filename": "libs/binder/Android.bp",
        "patchSetId": 21
      },
      "lineNbr": 236,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-05-06T00:35:21Z",
      "side": 1,
      "message": "can you refactor to use cc_defaults?",
      "range": {
        "startLine": 236,
        "startChar": 4,
        "endLine": 236,
        "endChar": 16
      },
      "revId": "4e9886734a483ef4783fd76bad635388ab3eaa0e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2e61fc00_8fb013ab",
        "filename": "libs/binder/Android.bp",
        "patchSetId": 21
      },
      "lineNbr": 236,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2022-05-10T01:48:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4cd041b2_f3218104",
      "range": {
        "startLine": 236,
        "startChar": 4,
        "endLine": 236,
        "endChar": 16
      },
      "revId": "4e9886734a483ef4783fd76bad635388ab3eaa0e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5692df83_592ae371",
        "filename": "libs/binder/tests/Android.bp",
        "patchSetId": 21
      },
      "lineNbr": 225,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-05-06T00:35:21Z",
      "side": 1,
      "message": "nit:binderRpcTestSingleThreaded",
      "range": {
        "startLine": 225,
        "startChar": 23,
        "endLine": 225,
        "endChar": 35
      },
      "revId": "4e9886734a483ef4783fd76bad635388ab3eaa0e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1773c469_7349cc89",
        "filename": "libs/binder/tests/Android.bp",
        "patchSetId": 21
      },
      "lineNbr": 225,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2022-05-10T01:48:33Z",
      "side": 1,
      "message": "The other one uses binderLibTest_IPC_32, should we keep that style?",
      "parentUuid": "5692df83_592ae371",
      "range": {
        "startLine": 225,
        "startChar": 23,
        "endLine": 225,
        "endChar": 35
      },
      "revId": "4e9886734a483ef4783fd76bad635388ab3eaa0e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1e5a2289_9b85c466",
        "filename": "libs/binder/tests/Android.bp",
        "patchSetId": 21
      },
      "lineNbr": 225,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-05-23T23:42:49Z",
      "side": 1,
      "message": "That will be deleted btw. I guess ultimately it doesn\u0027t matter for the test name. Either is okay.",
      "parentUuid": "1773c469_7349cc89",
      "range": {
        "startLine": 225,
        "startChar": 23,
        "endLine": 225,
        "endChar": 35
      },
      "revId": "4e9886734a483ef4783fd76bad635388ab3eaa0e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "410f81da_ad46fbea",
        "filename": "libs/binder/tests/Android.bp",
        "patchSetId": 21
      },
      "lineNbr": 225,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2022-05-24T04:57:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1e5a2289_9b85c466",
      "range": {
        "startLine": 225,
        "startChar": 23,
        "endLine": 225,
        "endChar": 35
      },
      "revId": "4e9886734a483ef4783fd76bad635388ab3eaa0e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d58274fd_2f1581a0",
        "filename": "libs/binder/tests/Android.bp",
        "patchSetId": 21
      },
      "lineNbr": 227,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-05-06T00:35:21Z",
      "side": 1,
      "message": "same, cc_defaults",
      "revId": "4e9886734a483ef4783fd76bad635388ab3eaa0e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4e6b702d_17fa0fe0",
        "filename": "libs/binder/tests/Android.bp",
        "patchSetId": 21
      },
      "lineNbr": 227,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2022-05-10T01:48:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d58274fd_2f1581a0",
      "revId": "4e9886734a483ef4783fd76bad635388ab3eaa0e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f23d5e47_dcfd5b5f",
        "filename": "libs/binder/tests/Android.bp",
        "patchSetId": 21
      },
      "lineNbr": 243,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-05-06T00:35:21Z",
      "side": 1,
      "message": "do we have a test for compatibility between the single threaded variant and the no thread variant? if we have both flags, can we test all combinations?",
      "range": {
        "startLine": 243,
        "startChar": 10,
        "endLine": 243,
        "endChar": 32
      },
      "revId": "4e9886734a483ef4783fd76bad635388ab3eaa0e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "430acff7_63471d1e",
        "filename": "libs/binder/tests/Android.bp",
        "patchSetId": 21
      },
      "lineNbr": 243,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2022-05-10T01:48:33Z",
      "side": 1,
      "message": "Between both flags, that\u0027s 4 combinations, which means building 4 different versions of libbinder and binderRpcTest. Is that fine?",
      "parentUuid": "f23d5e47_dcfd5b5f",
      "range": {
        "startLine": 243,
        "startChar": 10,
        "endLine": 243,
        "endChar": 32
      },
      "revId": "4e9886734a483ef4783fd76bad635388ab3eaa0e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b3bd1fa7_7f98ca14",
        "filename": "libs/binder/tests/Android.bp",
        "patchSetId": 21
      },
      "lineNbr": 243,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-05-23T23:42:49Z",
      "side": 1,
      "message": "Yes.\n\nAlso - what happens if the client uses some set of flags and the server uses another? I think you mentioned we\u0027d have this for comms with trusty?",
      "parentUuid": "430acff7_63471d1e",
      "range": {
        "startLine": 243,
        "startChar": 10,
        "endLine": 243,
        "endChar": 32
      },
      "revId": "4e9886734a483ef4783fd76bad635388ab3eaa0e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d6ed1753_e9fb7654",
        "filename": "libs/binder/tests/Android.bp",
        "patchSetId": 21
      },
      "lineNbr": 243,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2022-05-24T00:07:21Z",
      "side": 1,
      "message": "They should be compatible, since\n* they still both support RPC\n* a single-threaded client connecting to a multi-threaded server should work because the client will open only a single connection\n* a multi-threaded client connecting to a single-threaded server should work because the latter will return 1 for getRemoteMaxThreads.\n\nThere is one notable issue on Android: single-threaded servers can only handle one client at a time because of the event loop. That\u0027s not a problem on Trusty because of the way the tipc library keeps track of clients (adds them to a handle set and calls an on_message handler for every incoming message).",
      "parentUuid": "b3bd1fa7_7f98ca14",
      "range": {
        "startLine": 243,
        "startChar": 10,
        "endLine": 243,
        "endChar": 32
      },
      "revId": "4e9886734a483ef4783fd76bad635388ab3eaa0e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "791ce003_87cd071e",
        "filename": "libs/binder/tests/Android.bp",
        "patchSetId": 21
      },
      "lineNbr": 243,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-06-09T00:47:29Z",
      "side": 1,
      "message": "ack - we do have the tests for this now, right?",
      "parentUuid": "d6ed1753_e9fb7654",
      "range": {
        "startLine": 243,
        "startChar": 10,
        "endLine": 243,
        "endChar": 32
      },
      "revId": "4e9886734a483ef4783fd76bad635388ab3eaa0e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "86fb6ff0_7c1519ca",
        "filename": "libs/binder/tests/binderRpcTest.cpp",
        "patchSetId": 21
      },
      "lineNbr": 712,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-05-06T00:35:21Z",
      "side": 1,
      "message": "nit: could we move this into a variable and use GTEST_SKIP (for compilation?). Same elsewhere",
      "range": {
        "startLine": 712,
        "startChar": 8,
        "endLine": 712,
        "endChar": 29
      },
      "revId": "4e9886734a483ef4783fd76bad635388ab3eaa0e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "72b73b41_177d3b0d",
        "filename": "libs/binder/tests/binderRpcTest.cpp",
        "patchSetId": 21
      },
      "lineNbr": 712,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2022-05-10T05:15:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "86fb6ff0_7c1519ca",
      "range": {
        "startLine": 712,
        "startChar": 8,
        "endLine": 712,
        "endChar": 29
      },
      "revId": "4e9886734a483ef4783fd76bad635388ab3eaa0e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "52904448_ac67c131",
        "filename": "libs/binder/tests/binderRpcTest.cpp",
        "patchSetId": 21
      },
      "lineNbr": 1400,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-05-06T00:35:21Z",
      "side": 1,
      "message": "should this be based on no kernel?",
      "range": {
        "startLine": 1400,
        "startChar": 7,
        "endLine": 1400,
        "endChar": 28
      },
      "revId": "4e9886734a483ef4783fd76bad635388ab3eaa0e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "79454d86_fc7b4cca",
        "filename": "libs/binder/tests/binderRpcTest.cpp",
        "patchSetId": 21
      },
      "lineNbr": 1400,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2022-05-10T01:48:33Z",
      "side": 1,
      "message": "This function is broken on single-threaded because it tries to start a server in the current process, then connect to that same server over a new RpcSession. Afaict you can\u0027t do that with a single thread, it only works if the server\u0027s loop runs in its own separate thread.",
      "parentUuid": "52904448_ac67c131",
      "range": {
        "startLine": 1400,
        "startChar": 7,
        "endLine": 1400,
        "endChar": 28
      },
      "revId": "4e9886734a483ef4783fd76bad635388ab3eaa0e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "91cc0b34_ee22d2e7",
        "filename": "libs/binder/tests/binderRpcTest.cpp",
        "patchSetId": 21
      },
      "lineNbr": 1400,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-06-09T00:47:29Z",
      "side": 1,
      "message": "Can we switch it to fork the server in a new process instead, so that we can still cover vsock sockets in the single threaded case?",
      "parentUuid": "79454d86_fc7b4cca",
      "range": {
        "startLine": 1400,
        "startChar": 7,
        "endLine": 1400,
        "endChar": 28
      },
      "revId": "4e9886734a483ef4783fd76bad635388ab3eaa0e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}