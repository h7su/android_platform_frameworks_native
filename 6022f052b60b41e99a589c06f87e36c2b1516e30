{
  "comments": [
    {
      "key": {
        "uuid": "f0e1ef6a_c4e66641",
        "filename": "/COMMIT_MSG",
        "patchSetId": 21
      },
      "lineNbr": 10,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2018-08-27T23:36:28Z",
      "side": 1,
      "message": "John/Dan, any suggestion here? (specifically things like \u0027AStatus.h\u0027)",
      "range": {
        "startLine": 10,
        "startChar": 2,
        "endLine": 10,
        "endChar": 48
      },
      "revId": "6022f052b60b41e99a589c06f87e36c2b1516e30",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c454665e_8000b8c9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 21
      },
      "lineNbr": 10,
      "author": {
        "id": 1010103
      },
      "writtenOn": "2018-08-28T17:53:45Z",
      "side": 1,
      "message": "for headers the style would be all lower-case without the A prefix.\n\ntypically the headers are in an android/ folder or a module folder if that\u0027s more appropriate, and then the header itself can be simple.\n\nSo I\u0027d suggest either:\n\nandroid/binder_status.h\nandroid/binder_parcel.h\nandroid/binder_iterface.h\n\nor\n\nbinder/status.h\nbinder/parcel.h\nbinder/interface.h (or even just binder/binder.h)\n\nSomething like that. Since it\u0027s its own library the binder/*.h probably makes more sense.",
      "parentUuid": "f0e1ef6a_c4e66641",
      "range": {
        "startLine": 10,
        "startChar": 2,
        "endLine": 10,
        "endChar": 48
      },
      "revId": "6022f052b60b41e99a589c06f87e36c2b1516e30",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0150fa1c_4f97ceb1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 21
      },
      "lineNbr": 10,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2018-08-29T02:14:48Z",
      "side": 1,
      "message": "Done w/ android/*.h. Thank you! This is exactly what I needed.\n\nI like this more than \u0027binder/status.h\u0027 since it looks too much like \u0027binder/Status.h\u0027.",
      "parentUuid": "c454665e_8000b8c9",
      "range": {
        "startLine": 10,
        "startChar": 2,
        "endLine": 10,
        "endChar": 48
      },
      "revId": "6022f052b60b41e99a589c06f87e36c2b1516e30",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e06dbc7_a8291d90",
        "filename": "/COMMIT_MSG",
        "patchSetId": 21
      },
      "lineNbr": 11,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2018-08-27T07:12:21Z",
      "side": 1,
      "message": "essentially, how to allow Java/C APIs to interoperate? Is there a way to create an NDK/SDK function which allows you to convert between an NDK type and an SDK type?",
      "range": {
        "startLine": 11,
        "startChar": 2,
        "endLine": 11,
        "endChar": 59
      },
      "revId": "6022f052b60b41e99a589c06f87e36c2b1516e30",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "281d3e00_13155a1a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 21
      },
      "lineNbr": 11,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2018-08-27T23:36:28Z",
      "side": 1,
      "message": "Ping, John/Dan? (I need to figure out how to do this in order to write meaningful CTS tests. This might be somewhat difficult even then though because it requires multiple processes to test effectively).",
      "parentUuid": "9e06dbc7_a8291d90",
      "range": {
        "startLine": 11,
        "startChar": 2,
        "endLine": 11,
        "endChar": 59
      },
      "revId": "6022f052b60b41e99a589c06f87e36c2b1516e30",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "76df4dda_b537074e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 21
      },
      "lineNbr": 11,
      "author": {
        "id": 1010103
      },
      "writtenOn": "2018-08-28T17:53:45Z",
      "side": 1,
      "message": "The pattern for Java interop is to have an NDK API in a \u003cclass\u003e_jni.h header that takes a JNIEnv* \u0026 jobject and you gives you back the NDK equivalent. Same for the reverse, native API that returns the jobject.\n\nAn example would be ANativeWindow_fromSurface and ANativeWindow_toSurface",
      "parentUuid": "281d3e00_13155a1a",
      "range": {
        "startLine": 11,
        "startChar": 2,
        "endLine": 11,
        "endChar": 59
      },
      "revId": "6022f052b60b41e99a589c06f87e36c2b1516e30",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d4557b00_2f730e63",
        "filename": "/COMMIT_MSG",
        "patchSetId": 21
      },
      "lineNbr": 11,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2018-08-29T02:14:48Z",
      "side": 1,
      "message": "Great. Thank you! :)",
      "parentUuid": "76df4dda_b537074e",
      "range": {
        "startLine": 11,
        "startChar": 2,
        "endLine": 11,
        "endChar": 59
      },
      "revId": "6022f052b60b41e99a589c06f87e36c2b1516e30",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e03c9d79_123869fb",
        "filename": "libs/binder/ndk/AIBinder.cpp",
        "patchSetId": 21
      },
      "lineNbr": 116,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2018-08-27T07:12:21Z",
      "side": 1,
      "message": "One thing to note in the current implementation, if you have multiple binders to a remote object, you also have multiple ABpBinder/BpFoo objects. I believe I could fix this with IBinder::attachObject, but AIDL doesn\u0027t appear to handle this either.",
      "range": {
        "startLine": 116,
        "startChar": 37,
        "endLine": 116,
        "endChar": 54
      },
      "revId": "6022f052b60b41e99a589c06f87e36c2b1516e30",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c9d80d4_2b5432d5",
        "filename": "libs/binder/ndk/include_ndk/binder/AIBinder.h",
        "patchSetId": 21
      },
      "lineNbr": 86,
      "author": {
        "id": 1010103
      },
      "writtenOn": "2018-08-27T19:41:39Z",
      "side": 1,
      "message": "what\u0027s the free() for this pointer?",
      "range": {
        "startLine": 86,
        "startChar": 36,
        "endLine": 86,
        "endChar": 50
      },
      "revId": "6022f052b60b41e99a589c06f87e36c2b1516e30",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b092e1eb_97ff60fd",
        "filename": "libs/binder/ndk/include_ndk/binder/AIBinder.h",
        "patchSetId": 21
      },
      "lineNbr": 86,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2018-08-27T23:36:28Z",
      "side": 1,
      "message": "It doesn\u0027t exist since it is depending on by AIBinder instances. Usually, this class will be defined for the duration of the process (in fact, defined by loading a library). I can add it (but it would also involve refcounting on AIBinder instances so that it doesn\u0027t get deleted out from under them). This is then dangerous incase these functions depend on state that the class uses. So, it would also involve adding a decStrong (to make it explicit that it might not actually be deleted).\n\nAnother thing I could do is create a delete and then invalidate all of the AIBinder objects that are using it, but I find this approach kind of messy (and inefficient), and in practice, if someone wants to unload one of these libraries, they should also themselves unload their code that depends on it.\n\nAre you guys okay with decStrong here as well?",
      "parentUuid": "1c9d80d4_2b5432d5",
      "range": {
        "startLine": 86,
        "startChar": 36,
        "endLine": 86,
        "endChar": 50
      },
      "revId": "6022f052b60b41e99a589c06f87e36c2b1516e30",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f7de33cf_a28b115c",
        "filename": "libs/binder/ndk/include_ndk/binder/AIBinder.h",
        "patchSetId": 21
      },
      "lineNbr": 86,
      "author": {
        "id": 1010103
      },
      "writtenOn": "2018-08-28T18:19:39Z",
      "side": 1,
      "message": "I\u0027d be OK with just documenting that this has a lifecycle of the process and should only be done in one-time initialization if that\u0027s just how the system works.",
      "parentUuid": "b092e1eb_97ff60fd",
      "range": {
        "startLine": 86,
        "startChar": 36,
        "endLine": 86,
        "endChar": 50
      },
      "revId": "6022f052b60b41e99a589c06f87e36c2b1516e30",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aac42b90_75f79dc3",
        "filename": "libs/binder/ndk/include_ndk/binder/AIBinder.h",
        "patchSetId": 21
      },
      "lineNbr": 86,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2018-08-29T02:14:48Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "f7de33cf_a28b115c",
      "range": {
        "startLine": 86,
        "startChar": 36,
        "endLine": 86,
        "endChar": 50
      },
      "revId": "6022f052b60b41e99a589c06f87e36c2b1516e30",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "55cad2cf_54cf6410",
        "filename": "libs/binder/ndk/include_ndk/binder/AIBinder.h",
        "patchSetId": 21
      },
      "lineNbr": 117,
      "author": {
        "id": 1010103
      },
      "writtenOn": "2018-08-27T19:41:39Z",
      "side": 1,
      "message": "does this need to be part of the API surface, or can AIBinder just have a _new() and _delete() and if people need/want refcounting on top of that they can toss it in a std::shared_ptr\u003c\u003e or whatever?",
      "range": {
        "startLine": 105,
        "startChar": 0,
        "endLine": 117,
        "endChar": 52
      },
      "revId": "6022f052b60b41e99a589c06f87e36c2b1516e30",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "57eff0d8_b9fe94c5",
        "filename": "libs/binder/ndk/include_ndk/binder/AIBinder.h",
        "patchSetId": 21
      },
      "lineNbr": 117,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2018-08-27T20:14:31Z",
      "side": 1,
      "message": "Especially the last one. \"For debugging only!\" sure sounds a lot like \"this shouldn\u0027t be part of the API\" to me.",
      "parentUuid": "55cad2cf_54cf6410",
      "range": {
        "startLine": 105,
        "startChar": 0,
        "endLine": 117,
        "endChar": 52
      },
      "revId": "6022f052b60b41e99a589c06f87e36c2b1516e30",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e968c8bd_304f1099",
        "filename": "libs/binder/ndk/include_ndk/binder/AIBinder.h",
        "patchSetId": 21
      },
      "lineNbr": 117,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2018-08-27T23:36:28Z",
      "side": 1,
      "message": "incStrong/decStrong is required since you can get multiple instances of the same AIBinder object in your process (for instance, by registering a service and then getting it multiple times).\n\nI can remove \u0027debugGetRefCount\u0027 (or move it to the non-NDK part of this surface), but is generally helpful for debugging. This API is a direct rip-off of \u0027sp\u0027 in StrongPointer.h. It is considered a debugging API in my mind for two reasons:\n- well written code should never need to access it\n- it isn\u0027t guaranteed to be 100% accurate when other processes hold some of the references\n\nIs it okay if I leave it in?",
      "parentUuid": "57eff0d8_b9fe94c5",
      "range": {
        "startLine": 105,
        "startChar": 0,
        "endLine": 117,
        "endChar": 52
      },
      "revId": "6022f052b60b41e99a589c06f87e36c2b1516e30",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8294a0ac_37d95145",
        "filename": "libs/binder/ndk/include_ndk/binder/AIBinder.h",
        "patchSetId": 21
      },
      "lineNbr": 117,
      "author": {
        "id": 1010103
      },
      "writtenOn": "2018-08-28T18:19:39Z",
      "side": 1,
      "message": "AIBinder internally needs incStrong/decStrong but the API doesn\u0027t necessarily.\n\nCould this just be a AIBinder_release() and it\u0027s documented that when the system hands you an AIBinder it\u0027s your responsibility to call AIBinder_release() for each time it\u0027s passed? It could be that it doesn\u0027t work, but I\u0027d recommend doing a run through here and seeing if any of the lifecycle could be simplified to just not deal with refcounting in the API surface itself.\n\nMost of the NDK works like this. Even though it sits on a refcount\u0027d object the APIs are just a \"basic\" acquire/release pair without exposing a refcount.",
      "parentUuid": "e968c8bd_304f1099",
      "range": {
        "startLine": 105,
        "startChar": 0,
        "endLine": 117,
        "endChar": 52
      },
      "revId": "6022f052b60b41e99a589c06f87e36c2b1516e30",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0864ea90_7a518e9e",
        "filename": "libs/binder/ndk/include_ndk/binder/AIBinder.h",
        "patchSetId": 21
      },
      "lineNbr": 117,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2018-08-29T02:14:48Z",
      "side": 1,
      "message": "Let me think about this a bit more.\n\nI think I could do this:\n- go back to using LocalNdkBinder (you can see some early patchsets)\n- make LocalNdkBinder have a strong pointer to user data\n\nI need to remember if there were any other reasons why I switched from that to this. One thing we would lose is pointer-equality of AIBinder objects in the same process. That might be worth it though since it is not guaranteed in the remote case (we\u0027ll need AIBinder_equals).\n\nDianne, do you have any thoughts on this? I may end up doing it soon, I just want to avoid potentially fruitless refactoring, and this would be easy to change later.",
      "parentUuid": "8294a0ac_37d95145",
      "range": {
        "startLine": 105,
        "startChar": 0,
        "endLine": 117,
        "endChar": 52
      },
      "revId": "6022f052b60b41e99a589c06f87e36c2b1516e30",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bdf3553e_1f7e9368",
        "filename": "libs/binder/ndk/include_ndk/binder/AIBinder.h",
        "patchSetId": 21
      },
      "lineNbr": 128,
      "author": {
        "id": 1010103
      },
      "writtenOn": "2018-08-28T18:19:39Z",
      "side": 1,
      "message": "this seems somewhat cumbersome and error-prone to use.\n\nCan this be a single in/out parameter or something like that? Takes an AIBinder** and replaces it with the result? Or is it useful to still keep a reference to the old AIBinder*?",
      "range": {
        "startLine": 125,
        "startChar": 0,
        "endLine": 128,
        "endChar": 93
      },
      "revId": "6022f052b60b41e99a589c06f87e36c2b1516e30",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ef08732a_9349c7c6",
        "filename": "libs/binder/ndk/include_ndk/binder/AIBinder.h",
        "patchSetId": 21
      },
      "lineNbr": 128,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2018-08-29T02:14:48Z",
      "side": 1,
      "message": "I hadn\u0027t considered using an AIBinder**, and I agree that would be much easier.",
      "parentUuid": "bdf3553e_1f7e9368",
      "range": {
        "startLine": 125,
        "startChar": 0,
        "endLine": 128,
        "endChar": 93
      },
      "revId": "6022f052b60b41e99a589c06f87e36c2b1516e30",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ad589aac_37896ee2",
        "filename": "libs/binder/ndk/include_ndk/binder/AIBinder.h",
        "patchSetId": 21
      },
      "lineNbr": 142,
      "author": {
        "id": 1010103
      },
      "writtenOn": "2018-08-28T18:19:39Z",
      "side": 1,
      "message": "It sounds like this is really only useful inside onTransact? If so can it just be a parameter to onTransact and not have a getter for it?",
      "range": {
        "startLine": 138,
        "startChar": 0,
        "endLine": 142,
        "endChar": 45
      },
      "revId": "6022f052b60b41e99a589c06f87e36c2b1516e30",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "26c74dd3_305f888d",
        "filename": "libs/binder/ndk/include_ndk/binder/AIBinder.h",
        "patchSetId": 21
      },
      "lineNbr": 142,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2018-08-29T02:14:48Z",
      "side": 1,
      "message": "It\u0027s also useful to recover IFoo from an arbitrary AIBinder object (not needed in the current CL since I\u0027m not passing/receiving a binder object in a transaction.",
      "parentUuid": "ad589aac_37896ee2",
      "range": {
        "startLine": 138,
        "startChar": 0,
        "endLine": 142,
        "endChar": 45
      },
      "revId": "6022f052b60b41e99a589c06f87e36c2b1516e30",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "33990fc0_69ead225",
        "filename": "libs/binder/ndk/include_ndk/binder/AIBinder.h",
        "patchSetId": 21
      },
      "lineNbr": 157,
      "author": {
        "id": 1010103
      },
      "writtenOn": "2018-08-28T18:19:39Z",
      "side": 1,
      "message": "out?",
      "range": {
        "startLine": 157,
        "startChar": 72,
        "endLine": 157,
        "endChar": 74
      },
      "revId": "6022f052b60b41e99a589c06f87e36c2b1516e30",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f1295f4_58f0c2bb",
        "filename": "libs/binder/ndk/include_ndk/binder/AIBinder.h",
        "patchSetId": 21
      },
      "lineNbr": 157,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2018-08-29T02:14:48Z",
      "side": 1,
      "message": "This is the parcel that is going into the transaction. It is going into the remote process. It\u0027s created for you here (with the appropriate header). It\u0027s the one that is being sent. I\u0027ll clarify in the comments more (although also see the comment above as well \"A transaction is a series of calls\" ...)",
      "parentUuid": "33990fc0_69ead225",
      "range": {
        "startLine": 157,
        "startChar": 72,
        "endLine": 157,
        "endChar": 74
      },
      "revId": "6022f052b60b41e99a589c06f87e36c2b1516e30",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b51cd579_0ac9e8a9",
        "filename": "libs/binder/ndk/include_ndk/binder/AIBinder.h",
        "patchSetId": 21
      },
      "lineNbr": 160,
      "author": {
        "id": 1010103
      },
      "writtenOn": "2018-08-28T18:19:39Z",
      "side": 1,
      "message": "document ownership of the in parcel. Does this take ownership? Does caller retain it? What is the out parcel if this is a FLAG_ONEWAY? etc...",
      "range": {
        "startLine": 159,
        "startChar": 1,
        "endLine": 160,
        "endChar": 41
      },
      "revId": "6022f052b60b41e99a589c06f87e36c2b1516e30",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2258f4fa_dc21b18e",
        "filename": "libs/binder/ndk/include_ndk/binder/AIBinder.h",
        "patchSetId": 21
      },
      "lineNbr": 160,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2018-08-29T02:14:48Z",
      "side": 1,
      "message": "Updated with additional comments (these functions handle the ownership of the parcel, and the out parcel still contains information from the kernel if it is oneway).",
      "parentUuid": "b51cd579_0ac9e8a9",
      "range": {
        "startLine": 159,
        "startChar": 1,
        "endLine": 160,
        "endChar": 41
      },
      "revId": "6022f052b60b41e99a589c06f87e36c2b1516e30",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fe2d54fa_ef12e8e4",
        "filename": "libs/binder/ndk/include_ndk/binder/AIBinder.h",
        "patchSetId": 21
      },
      "lineNbr": 162,
      "author": {
        "id": 1010103
      },
      "writtenOn": "2018-08-28T18:19:39Z",
      "side": 1,
      "message": "const?",
      "range": {
        "startLine": 162,
        "startChar": 77,
        "endLine": 162,
        "endChar": 88
      },
      "revId": "6022f052b60b41e99a589c06f87e36c2b1516e30",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "76efdb54_82555a5a",
        "filename": "libs/binder/ndk/include_ndk/binder/AIBinder.h",
        "patchSetId": 21
      },
      "lineNbr": 162,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2018-08-29T02:14:48Z",
      "side": 1,
      "message": "Updated in comments. Ownership is taken and the parcel is deleted (so no const)",
      "parentUuid": "fe2d54fa_ef12e8e4",
      "range": {
        "startLine": 162,
        "startChar": 77,
        "endLine": 162,
        "endChar": 88
      },
      "revId": "6022f052b60b41e99a589c06f87e36c2b1516e30",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a3754c1b_16da5c7f",
        "filename": "libs/binder/ndk/include_ndk/binder/AIBinder.h",
        "patchSetId": 21
      },
      "lineNbr": 165,
      "author": {
        "id": 1010103
      },
      "writtenOn": "2018-08-28T18:19:39Z",
      "side": 1,
      "message": "where does this data go? Who gets it? give a more concrete example or clarity to this.\n\nAnd similarly what\u0027s the resulting ownership of the AIBinder \u0026 AParcel. Does this could as the release of the AIBinder? What about the AParcel?",
      "range": {
        "startLine": 165,
        "startChar": 37,
        "endLine": 165,
        "endChar": 94
      },
      "revId": "6022f052b60b41e99a589c06f87e36c2b1516e30",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b8f5f20c_6e32fb6f",
        "filename": "libs/binder/ndk/include_ndk/binder/AIBinder.h",
        "patchSetId": 21
      },
      "lineNbr": 165,
      "author": {
        "id": 1010103
      },
      "writtenOn": "2018-08-28T18:19:39Z",
      "side": 1,
      "message": "Idioms are not very clear, be more explicit at what this does.",
      "range": {
        "startLine": 165,
        "startChar": 3,
        "endLine": 165,
        "endChar": 32
      },
      "revId": "6022f052b60b41e99a589c06f87e36c2b1516e30",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5d48e03c_092dcf39",
        "filename": "libs/binder/ndk/include_ndk/binder/AIBinder.h",
        "patchSetId": 21
      },
      "lineNbr": 165,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2018-08-29T02:14:48Z",
      "side": 1,
      "message": "Done (the actual transaction is in the above method, I\u0027ve added documentation there. I\u0027ve noted in all these functions that ownership of AIBinder is unchanged, and I\u0027ve also noted how these functions completely control the lifetime of the parcel object).",
      "parentUuid": "a3754c1b_16da5c7f",
      "range": {
        "startLine": 165,
        "startChar": 37,
        "endLine": 165,
        "endChar": 94
      },
      "revId": "6022f052b60b41e99a589c06f87e36c2b1516e30",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "745e9e3f_01033471",
        "filename": "libs/binder/ndk/include_ndk/binder/AIBinder.h",
        "patchSetId": 21
      },
      "lineNbr": 165,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2018-08-29T02:14:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b8f5f20c_6e32fb6f",
      "range": {
        "startLine": 165,
        "startChar": 3,
        "endLine": 165,
        "endChar": 32
      },
      "revId": "6022f052b60b41e99a589c06f87e36c2b1516e30",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1e1350c7_a2d60b14",
        "filename": "libs/binder/ndk/include_ndk/binder/AIBinder.h",
        "patchSetId": 21
      },
      "lineNbr": 171,
      "author": {
        "id": 1010103
      },
      "writtenOn": "2018-08-27T19:41:39Z",
      "side": 1,
      "message": "same as above, is this necessary for the API surface?",
      "range": {
        "startLine": 169,
        "startChar": 0,
        "endLine": 171,
        "endChar": 55
      },
      "revId": "6022f052b60b41e99a589c06f87e36c2b1516e30",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "88f4c538_bf1192bc",
        "filename": "libs/binder/ndk/include_ndk/binder/AIBinder.h",
        "patchSetId": 21
      },
      "lineNbr": 171,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2018-08-27T23:36:28Z",
      "side": 1,
      "message": ":) This is a tricky one (and perhaps Dianne has a better idea since she didn\u0027t suggest the need for this in her original API), but I\u0027m quite convinced it is necessary. Notice you have this ownership model (where an arrow is a strong pointer):\n\nBpFoo -\u003e AIBinder (ABpBinder) --process-boundary--\u003e AIBinder (ABBinder) -\u003e UserData -\u003e IFoo\n\nThis line of strong pointers is required to make sure that a remote BpFoo instance represents a strong pointer to the IFoo. This allows you, for instance, to create a callback, pass it to a remote process, not keep a strong reference to it, and when the remote process drops it (or dies), the callback in your process automatically gets cleaned up.\n\nThe reason why you need a weak pointer here is so that if the \u0027IFoo\u0027 object is sent out to another process multiple times, you always send the exact same AIBinder object. One of the amazing features about the binder driver is that if you send the same object into it multiple times, you\u0027ll get the same object out of it multiple times. So, if you\u0027ve already sent IFoo to another process, the ABpBinder proxies a binder object, and if you send IFoo to that same process again, you\u0027ll recover the same ABBinder object (with the wp), send it to the same process, and the ABpBinder on the other side will proxy the same binder object. This allows you for instance to know that those two ABpBinder objects point to the same binder object (I will at some point add an AIBinder_equals method to take advantage of this).\n\nPointing out the obvious, we also can\u0027t have IFoo keep a strong pointer here because it would create a cycle between ABBinder/UserData/IFoo.\n\n\nYou\u0027ll also note that this is something I wanted feedback on earlier. Whether we should always return the same ABpBinder object back (and also recover the same BpFoo object back) so that they support pointer equality. HIDL doesn\u0027t support this, and it\u0027s my understanding that AIDL doesn\u0027t either (something to do with the way that each BpFoo object maintains its own state wrt linkToDeath/unlinkToDeath, also not implemented in this specific CL).",
      "parentUuid": "1e1350c7_a2d60b14",
      "range": {
        "startLine": 169,
        "startChar": 0,
        "endLine": 171,
        "endChar": 55
      },
      "revId": "6022f052b60b41e99a589c06f87e36c2b1516e30",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ea32768c_a8acbcae",
        "filename": "libs/binder/ndk/include_ndk/binder/AIBinder.h",
        "patchSetId": 21
      },
      "lineNbr": 171,
      "author": {
        "id": 1010103
      },
      "writtenOn": "2018-08-28T18:19:39Z",
      "side": 1,
      "message": "Naming nit: suggest AIBinder_Weak instead since it\u0027ll auto-complete a bit nicer.\n\nAlso basically document what you just said, the \"here\u0027s when \u0026 why you would use this\"",
      "parentUuid": "88f4c538_bf1192bc",
      "range": {
        "startLine": 169,
        "startChar": 0,
        "endLine": 171,
        "endChar": 55
      },
      "revId": "6022f052b60b41e99a589c06f87e36c2b1516e30",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "460fa25e_9fd55792",
        "filename": "libs/binder/ndk/include_ndk/binder/AIBinder.h",
        "patchSetId": 21
      },
      "lineNbr": 171,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2018-08-29T02:14:48Z",
      "side": 1,
      "message": "I\u0027ve now updated comments above (on AIBinder/AIBinder_Weak) to this affect. I\u0027ve also renamed it.",
      "parentUuid": "ea32768c_a8acbcae",
      "range": {
        "startLine": 169,
        "startChar": 0,
        "endLine": 171,
        "endChar": 55
      },
      "revId": "6022f052b60b41e99a589c06f87e36c2b1516e30",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "45b40e46_c7673f09",
        "filename": "libs/binder/ndk/include_ndk/binder/AIBinder.h",
        "patchSetId": 21
      },
      "lineNbr": 174,
      "author": {
        "id": 1010103
      },
      "writtenOn": "2018-08-27T19:41:39Z",
      "side": 1,
      "message": "if promotion fails, what is returned?",
      "range": {
        "startLine": 174,
        "startChar": 3,
        "endLine": 174,
        "endChar": 75
      },
      "revId": "6022f052b60b41e99a589c06f87e36c2b1516e30",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "781d4d13_7b2638be",
        "filename": "libs/binder/ndk/include_ndk/binder/AIBinder.h",
        "patchSetId": 21
      },
      "lineNbr": 174,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2018-08-27T23:36:28Z",
      "side": 1,
      "message": "nullptr, Done",
      "parentUuid": "45b40e46_c7673f09",
      "range": {
        "startLine": 174,
        "startChar": 3,
        "endLine": 174,
        "endChar": 75
      },
      "revId": "6022f052b60b41e99a589c06f87e36c2b1516e30",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "403c4074_ef6d8db5",
        "filename": "libs/binder/ndk/include_ndk/binder/AParcel.h",
        "patchSetId": 21
      },
      "lineNbr": 56,
      "author": {
        "id": 1010103
      },
      "writtenOn": "2018-08-27T19:41:39Z",
      "side": 1,
      "message": "you can\u0027t toss a generated header into the API surface. These all need to be documented and should not be generated as they cannot change.",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 56,
        "endChar": 7
      },
      "revId": "6022f052b60b41e99a589c06f87e36c2b1516e30",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6847e7ae_8a3d221c",
        "filename": "libs/binder/ndk/include_ndk/binder/AParcel.h",
        "patchSetId": 21
      },
      "lineNbr": 56,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2018-08-27T23:36:28Z",
      "side": 1,
      "message": "re-documentation: Done\n\n- The generation is guided by a script, so it is fully compatible with NDK tooling.\n- The generation is to make sure they are consistent, make it easy to add new types in the future, etc.. The intention is not to change the APIs all of the time.\n\n(if you have a problem with the @START/@END tags, can you suggest something else?)",
      "parentUuid": "403c4074_ef6d8db5",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 56,
        "endChar": 7
      },
      "revId": "6022f052b60b41e99a589c06f87e36c2b1516e30",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aae23f53_d70832ca",
        "filename": "libs/binder/ndk/include_ndk/binder/AStatus.h",
        "patchSetId": 21
      },
      "lineNbr": 38,
      "author": {
        "id": 1010103
      },
      "writtenOn": "2018-08-27T19:41:39Z",
      "side": 1,
      "message": "If it\u0027s Java-specific remove it from the NDK?",
      "range": {
        "startLine": 37,
        "startChar": 1,
        "endLine": 38,
        "endChar": 31
      },
      "revId": "6022f052b60b41e99a589c06f87e36c2b1516e30",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "07d905e9_a4c805fd",
        "filename": "libs/binder/ndk/include_ndk/binder/AStatus.h",
        "patchSetId": 21
      },
      "lineNbr": 38,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2018-08-27T23:36:28Z",
      "side": 1,
      "message": "This indicates that the end of the parcel contains an additional item which is used in Java for additional error information and is required for NDK\u003c-\u003eJava. If this API is used to communicate with some Java code, then it is required for this case to be handled.\n\nIs it preferable to duplicate the specifics of this information here? I can do so.\n\n\nAlthough, thinking about this more, Dianne, would you consider these more of AIDL\u0027s ABI or part of libhwbinder\u0027s?",
      "parentUuid": "aae23f53_d70832ca",
      "range": {
        "startLine": 37,
        "startChar": 1,
        "endLine": 38,
        "endChar": 31
      },
      "revId": "6022f052b60b41e99a589c06f87e36c2b1516e30",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "86376d22_62119679",
        "filename": "libs/binder/ndk/include_ndk/binder/AStatus.h",
        "patchSetId": 21
      },
      "lineNbr": 39,
      "author": {
        "id": 1010103
      },
      "writtenOn": "2018-08-27T19:41:39Z",
      "side": 1,
      "message": "is this C++ specific? If so this should say NDK probably instead as there\u0027s no C++ anywhere in these files.",
      "range": {
        "startLine": 39,
        "startChar": 38,
        "endLine": 39,
        "endChar": 45
      },
      "revId": "6022f052b60b41e99a589c06f87e36c2b1516e30",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "26979dd7_abfc8635",
        "filename": "libs/binder/ndk/include_ndk/binder/AStatus.h",
        "patchSetId": 21
      },
      "lineNbr": 39,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2018-08-27T23:36:28Z",
      "side": 1,
      "message": "I will update the comment. It\u0027s specific to native.",
      "parentUuid": "86376d22_62119679",
      "range": {
        "startLine": 39,
        "startChar": 38,
        "endLine": 39,
        "endChar": 45
      },
      "revId": "6022f052b60b41e99a589c06f87e36c2b1516e30",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}