{
  "comments": [
    {
      "key": {
        "uuid": "cbdba858_13d4c56d",
        "filename": "libs/binder/ndk/include_ndk/android/binder_parcel.h",
        "patchSetId": 8
      },
      "lineNbr": 101,
      "author": {
        "id": 1010103
      },
      "writtenOn": "2018-10-23T22:23:45Z",
      "side": 1,
      "message": "what is retStr?",
      "range": {
        "startLine": 101,
        "startChar": 41,
        "endLine": 101,
        "endChar": 47
      },
      "revId": "7b06f592bbf9beb1239a211faa14541ad0d5176b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "422d100d_f274d16e",
        "filename": "libs/binder/ndk/include_ndk/android/binder_parcel.h",
        "patchSetId": 8
      },
      "lineNbr": 101,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2018-10-24T17:43:12Z",
      "side": 1,
      "message": "This should be stringData. Will change.",
      "parentUuid": "cbdba858_13d4c56d",
      "range": {
        "startLine": 101,
        "startChar": 41,
        "endLine": 101,
        "endChar": 47
      },
      "revId": "7b06f592bbf9beb1239a211faa14541ad0d5176b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "796da103_039b6dbe",
        "filename": "libs/binder/ndk/include_ndk/android/binder_parcel.h",
        "patchSetId": 8
      },
      "lineNbr": 101,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2018-10-24T17:51:12Z",
      "side": 1,
      "message": "Sorry, what it is saying is this:\n\nLet\u0027s call the string returned from this function foo.\n(foo might be stringData reallocated or it might be a new value, just like the void* in realloc)\nfoo[length] \u003d\u003d \u0027\\0\u0027\n\nAlso, I\u0027ve just realized this means that this function isn\u0027t precisely like realloc (since it has to allocate an extra byte for the null terminator). I\u0027ll fix that up (assuming we still want to keep these semantics).",
      "parentUuid": "422d100d_f274d16e",
      "range": {
        "startLine": 101,
        "startChar": 41,
        "endLine": 101,
        "endChar": 47
      },
      "revId": "7b06f592bbf9beb1239a211faa14541ad0d5176b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c4134134_2d82a185",
        "filename": "libs/binder/ndk/include_ndk/android/binder_parcel.h",
        "patchSetId": 8
      },
      "lineNbr": 106,
      "author": {
        "id": 1010103
      },
      "writtenOn": "2018-10-23T22:23:45Z",
      "side": 1,
      "message": "Document what \u0027stringData\u0027 is. And rename it to \u0027userContext\u0027 or something since it\u0027s not the string data at all. It\u0027s completely up to the caller what this data is.",
      "range": {
        "startLine": 106,
        "startChar": 50,
        "endLine": 106,
        "endChar": 60
      },
      "revId": "7b06f592bbf9beb1239a211faa14541ad0d5176b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2c812d1c_f26d870c",
        "filename": "libs/binder/ndk/include_ndk/android/binder_parcel.h",
        "patchSetId": 8
      },
      "lineNbr": 106,
      "author": {
        "id": 1010103
      },
      "writtenOn": "2018-10-23T22:23:45Z",
      "side": 1,
      "message": "should just be string_allocator. It\u0027s not reallocating anything, there\u0027s no existing allocation that\u0027s resized.",
      "range": {
        "startLine": 106,
        "startChar": 16,
        "endLine": 106,
        "endChar": 42
      },
      "revId": "7b06f592bbf9beb1239a211faa14541ad0d5176b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5eb57857_c2d427a7",
        "filename": "libs/binder/ndk/include_ndk/android/binder_parcel.h",
        "patchSetId": 8
      },
      "lineNbr": 106,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2018-10-24T17:43:12Z",
      "side": 1,
      "message": "stringData may already be allocated when it is passed into the allocator. However, right now, we\u0027re only taking advantage of the trivial case (allocating from 0 -\u003e size).\n\nSo, this is named reallocator since it is capable of reallocating, and it also can be used with realloc if stringData is a char*.",
      "parentUuid": "2c812d1c_f26d870c",
      "range": {
        "startLine": 106,
        "startChar": 16,
        "endLine": 106,
        "endChar": 42
      },
      "revId": "7b06f592bbf9beb1239a211faa14541ad0d5176b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "383a460e_511fbd37",
        "filename": "libs/binder/ndk/include_ndk/android/binder_parcel.h",
        "patchSetId": 8
      },
      "lineNbr": 106,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2018-10-24T17:43:12Z",
      "side": 1,
      "message": "This was renamed from data -\u003e stringData (in an early patchset) because whatever data is here, it must represent a string, and also, to distinguish it from AIBinder userData. I think it makes sense as is. Do you feel strongly about this?",
      "parentUuid": "c4134134_2d82a185",
      "range": {
        "startLine": 106,
        "startChar": 50,
        "endLine": 106,
        "endChar": 60
      },
      "revId": "7b06f592bbf9beb1239a211faa14541ad0d5176b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "69d36013_ae4eaa21",
        "filename": "libs/binder/ndk/include_ndk/android/binder_parcel.h",
        "patchSetId": 8
      },
      "lineNbr": 106,
      "author": {
        "id": 1010103
      },
      "writtenOn": "2018-10-24T18:23:37Z",
      "side": 1,
      "message": "\u003e This was renamed from data -\u003e stringData (in an early patchset) because whatever data is here, it must represent a string\n\nDoes it? It doesn\u0027t look like it has to be anything in particular at all. AParcel itself doesn\u0027t ever touch this or try to understand it. It\u0027s purely user context for implementing the \"getter\".\n\nThus the name should reflect that, this is up to the user to decide what it is and what to do with it. It very critically is *not* the string data in the AParcel, which is what it sounds like it is.",
      "parentUuid": "383a460e_511fbd37",
      "range": {
        "startLine": 106,
        "startChar": 50,
        "endLine": 106,
        "endChar": 60
      },
      "revId": "7b06f592bbf9beb1239a211faa14541ad0d5176b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fcf6c2d7_9c8dfe52",
        "filename": "libs/binder/ndk/include_ndk/android/binder_parcel.h",
        "patchSetId": 8
      },
      "lineNbr": 106,
      "author": {
        "id": 1010103
      },
      "writtenOn": "2018-10-24T18:23:37Z",
      "side": 1,
      "message": "Given the void* is not used by AParcel how can this ever be used to reallocate? It\u0027s a strictly 1-1 mapping of a call to AParcel_readString resulting in a single call to AParcel_string_reallocator, right?\n\nBut I think merging the allocator and getter makes this clearer in what it should be doing.",
      "parentUuid": "5eb57857_c2d427a7",
      "range": {
        "startLine": 106,
        "startChar": 16,
        "endLine": 106,
        "endChar": 42
      },
      "revId": "7b06f592bbf9beb1239a211faa14541ad0d5176b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c87ad349_32ccf1b7",
        "filename": "libs/binder/ndk/include_ndk/android/binder_parcel.h",
        "patchSetId": 8
      },
      "lineNbr": 111,
      "author": {
        "id": 1010103
      },
      "writtenOn": "2018-10-23T22:23:45Z",
      "side": 1,
      "message": "the string allocator should just return a char* and this shouldn\u0027t exist.",
      "range": {
        "startLine": 111,
        "startChar": 16,
        "endLine": 111,
        "endChar": 37
      },
      "revId": "7b06f592bbf9beb1239a211faa14541ad0d5176b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "80106c06_79445168",
        "filename": "libs/binder/ndk/include_ndk/android/binder_parcel.h",
        "patchSetId": 8
      },
      "lineNbr": 111,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2018-10-24T17:43:12Z",
      "side": 1,
      "message": "That design was in a previous patchset, but it was changed in order to make the reallocator function the same as realloc.\n\nDo you still think I can change it? If so, I\u0027d like to setup a meeting to get consensus.",
      "parentUuid": "c87ad349_32ccf1b7",
      "range": {
        "startLine": 111,
        "startChar": 16,
        "endLine": 111,
        "endChar": 37
      },
      "revId": "7b06f592bbf9beb1239a211faa14541ad0d5176b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c8a5b553_fd79ad41",
        "filename": "libs/binder/ndk/include_ndk/android/binder_parcel.h",
        "patchSetId": 8
      },
      "lineNbr": 111,
      "author": {
        "id": 1010103
      },
      "writtenOn": "2018-10-24T18:23:37Z",
      "side": 1,
      "message": "Yes, it should be merged because it can\u0027t be used in isolation. These aren\u0027t composible and you can\u0027t just use realloc directly and get any savings as you need to implement the getter still.\n\nSo right now to use realloc it looks like this:\n\nchar* realloc_cast(void* data) { return (char*) data; }\n\nvoid foo() {\n   char* str \u003d nullptr; // \u003c- must be null or things go real bad, real fast\n   AParcel_readString(parcel, realloc, realloc_cast, \u0026str);\n}\n\nCompare that to if the getter \u0026 allocator were merged:\n\nchar* allocstr(void* data, size_t length) { return (char*) malloc(length); }\n\nvoid foo() {\n   char* str; // \u003c- can be anything since it\u0027s not used, simple output-only case\n   AParcel_readString(parcel, allocstr, \u0026str);\n}\n\nNothing was really saved to allow passing in realloc directly - the user still had to implement a custom function. Now what gets really messy is when you want to use this with std::string as you split the single implementation up into 2 different callbacks:\n\nvoid* stdstring_alloc(void* data, size_t length) {\n   auto str \u003d (std::string*) data;\n   str-\u003ereserve(length);\n   return data;\n}\n\nchar* stdstring_getter(void* data) {\n   return ((std::string*) data)-\u003edata();\n}\n\nvoid foo() {\n   std::string str;\n   void* tmp \u003d \u0026str;\n   AParcel_readString(parcel, stdstring_alloc, stdstring_getter, \u0026tmp);\n}\n\nWhereas if combined:\n\nchar* stdstring_alloc(void* data, size_t length) {\n   auto str \u003d (std::string*) data;\n   str-\u003ereserve(length);\n   return str-\u003edata();\n}\n\nvoid foo() {\n   std::string str;\n   void* tmp \u003d \u0026str;\n   AParcel_readString(parcel, stdstring_alloc, \u0026tmp);\n}",
      "parentUuid": "80106c06_79445168",
      "range": {
        "startLine": 111,
        "startChar": 16,
        "endLine": 111,
        "endChar": 37
      },
      "revId": "7b06f592bbf9beb1239a211faa14541ad0d5176b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "079021de_cf2a6fc1",
        "filename": "libs/binder/ndk/include_ndk/android/binder_parcel.h",
        "patchSetId": 8
      },
      "lineNbr": 111,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2018-10-25T21:58:35Z",
      "side": 1,
      "message": "This will be updated based on the outcome of this CL:\nhttps://android-review.googlesource.com/c/platform/cts/+/802109\n\n(we also talked offline, this was the original implementation I had gone for. I can change it back, but I\u0027m wanting to get consensus, hence the above test CL demonstrating this API)",
      "parentUuid": "c8a5b553_fd79ad41",
      "range": {
        "startLine": 111,
        "startChar": 16,
        "endLine": 111,
        "endChar": 37
      },
      "revId": "7b06f592bbf9beb1239a211faa14541ad0d5176b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee47cdcd_ad161942",
        "filename": "libs/binder/ndk/include_ndk/android/binder_parcel.h",
        "patchSetId": 8
      },
      "lineNbr": 116,
      "author": {
        "id": 1010103
      },
      "writtenOn": "2018-10-23T22:23:45Z",
      "side": 1,
      "message": "what data?",
      "range": {
        "startLine": 116,
        "startChar": 3,
        "endLine": 116,
        "endChar": 7
      },
      "revId": "7b06f592bbf9beb1239a211faa14541ad0d5176b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "54e878c2_019c002d",
        "filename": "libs/binder/ndk/include_ndk/android/binder_parcel.h",
        "patchSetId": 8
      },
      "lineNbr": 116,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2018-10-24T17:43:12Z",
      "side": 1,
      "message": "\u0027*stringData\u0027. Ack, will update.",
      "parentUuid": "ee47cdcd_ad161942",
      "range": {
        "startLine": 116,
        "startChar": 3,
        "endLine": 116,
        "endChar": 7
      },
      "revId": "7b06f592bbf9beb1239a211faa14541ad0d5176b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}