{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "64adc30a_d8a29948",
        "filename": "vulkan/libvulkan/api.cpp",
        "patchSetId": 2
      },
      "lineNbr": 190,
      "author": {
        "id": 1561731
      },
      "writtenOn": "2021-02-19T21:01:30Z",
      "side": 1,
      "message": "This assumes sequential properties (no gaps) starting at 1. Anyone aware of examples with gaps or not starting at 1? Should we scan some fixed range [1,10] and then do sequential afterwards?",
      "range": {
        "startLine": 190,
        "startChar": 8,
        "endLine": 190,
        "endChar": 22
      },
      "revId": "88300a43986c625481518ce18d4150bc56b7ef72",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "071fbf78_38ff26cf",
        "filename": "vulkan/libvulkan/api.cpp",
        "patchSetId": 2
      },
      "lineNbr": 190,
      "author": {
        "id": 1097542
      },
      "writtenOn": "2021-02-22T16:56:23Z",
      "side": 1,
      "message": "I don\u0027t have visibility into whether folks are using disjoint sets.  But since it used to work, I like the idea of scanning a fixed range, just in case they are, with an accompanying (one time) LOG message stating as much.\n\n+zzyiwei for his thoughts.",
      "parentUuid": "64adc30a_d8a29948",
      "range": {
        "startLine": 190,
        "startChar": 8,
        "endLine": 190,
        "endChar": 22
      },
      "revId": "88300a43986c625481518ce18d4150bc56b7ef72",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cb94a6ce_e8fbe7cc",
        "filename": "vulkan/libvulkan/api.cpp",
        "patchSetId": 2
      },
      "lineNbr": 190,
      "author": {
        "id": 1339259
      },
      "writtenOn": "2021-02-22T17:41:24Z",
      "side": 1,
      "message": "It\u0027s possible for folks to use discrete priorities. They can initially use sequential, but customize in script to silence certain layers in between.\n\nI\u0027d agree with Cody on the idea of scanning for a fixed range as a trade off here. Practically I\u0027ve never seen using more than 10 layers...(validation layers nowadays also unifies into one big layer). if the penalty of checking a non-exist prop is trivial enough, we can check a bit more here, otherwise 0~9 is fine from my pov. Proper comments need to be made here for this \"behavior change\".",
      "parentUuid": "071fbf78_38ff26cf",
      "range": {
        "startLine": 190,
        "startChar": 8,
        "endLine": 190,
        "endChar": 22
      },
      "revId": "88300a43986c625481518ce18d4150bc56b7ef72",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "89900d64_b60ab845",
        "filename": "vulkan/libvulkan/api.cpp",
        "patchSetId": 2
      },
      "lineNbr": 190,
      "author": {
        "id": 1293738
      },
      "writtenOn": "2021-02-22T17:46:58Z",
      "side": 1,
      "message": "If we scan all layer priorities 0-9 I don\u0027t think there will be a behavior change, except that we will no longer be abusing property_list().",
      "parentUuid": "cb94a6ce_e8fbe7cc",
      "range": {
        "startLine": 190,
        "startChar": 8,
        "endLine": 190,
        "endChar": 22
      },
      "revId": "88300a43986c625481518ce18d4150bc56b7ef72",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b3a1476d_76642f91",
        "filename": "vulkan/libvulkan/api.cpp",
        "patchSetId": 2
      },
      "lineNbr": 190,
      "author": {
        "id": 1097542
      },
      "writtenOn": "2021-02-22T17:49:14Z",
      "side": 1,
      "message": "Good point, it is already gated at 1 through 9.  No need for a log message in that case.",
      "parentUuid": "89900d64_b60ab845",
      "range": {
        "startLine": 190,
        "startChar": 8,
        "endLine": 190,
        "endChar": 22
      },
      "revId": "88300a43986c625481518ce18d4150bc56b7ef72",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "60d6b421_177a17e6",
        "filename": "vulkan/libvulkan/api.cpp",
        "patchSetId": 2
      },
      "lineNbr": 190,
      "author": {
        "id": 1097542
      },
      "writtenOn": "2021-02-22T17:50:15Z",
      "side": 1,
      "message": "Sorry, 0 through 9.",
      "parentUuid": "b3a1476d_76642f91",
      "range": {
        "startLine": 190,
        "startChar": 8,
        "endLine": 190,
        "endChar": 22
      },
      "revId": "88300a43986c625481518ce18d4150bc56b7ef72",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d20aab79_b005da9d",
        "filename": "vulkan/libvulkan/api.cpp",
        "patchSetId": 2
      },
      "lineNbr": 190,
      "author": {
        "id": 1339259
      },
      "writtenOn": "2021-02-22T17:52:55Z",
      "side": 1,
      "message": "The existing logic as I read only checks if the first character is a digit or not, but not limited to just one digit? atoi takes care of all the digits following. But I\u0027m not against 0~9 though.",
      "parentUuid": "60d6b421_177a17e6",
      "range": {
        "startLine": 190,
        "startChar": 8,
        "endLine": 190,
        "endChar": 22
      },
      "revId": "88300a43986c625481518ce18d4150bc56b7ef72",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}