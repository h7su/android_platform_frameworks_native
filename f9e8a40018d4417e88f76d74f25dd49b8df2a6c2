{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "3d525388_91af2520",
        "filename": "libs/binder/rust/src/binder.rs",
        "patchSetId": 34
      },
      "lineNbr": 203,
      "author": {
        "id": 1416371
      },
      "writtenOn": "2023-09-21T16:21:03Z",
      "side": 1,
      "message": "I\u0027m not a big fan of changing traits per-OS - this would make code that implements these traits fundamentally non-portable, even in cases where it doesn\u0027t really matter. I think we can get away with it here because it\u0027s `IBinderInternal`, but it\u0027s a bit icky in general.\n\nIn an ideal world, we\u0027d have something like `F: Write + Serialize`, and use `Write` for the default local implementations and `Serialize` for proxy objects, but that would be a more serious change since we\u0027d no longer be able to use `AIBinder_dump` explicitly and would be incompatible with existing C++ code that assumes it\u0027s a fd.",
      "revId": "f9e8a40018d4417e88f76d74f25dd49b8df2a6c2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "42db67da_e86ef970",
        "filename": "libs/binder/rust/src/binder.rs",
        "patchSetId": 34
      },
      "lineNbr": 203,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2023-09-22T21:37:39Z",
      "side": 1,
      "message": "One of the things I\u0027ve been meaning to do anyway is add `AsRawFd` (and `OwnedFd`) to libstd on Trusty. I\u0027ll give that a try, and if that works then we can revisit this.\n\nSpeaking of, one of the things I considered was changing `ParcelFileDescriptor` to wrap `std::os::fd::OwnedFd` instead of `std::fs::File`. The single thing that stopped me was `impl AsRef\u003cFile\u003e for ParcelFileDescriptor`.",
      "parentUuid": "3d525388_91af2520",
      "revId": "f9e8a40018d4417e88f76d74f25dd49b8df2a6c2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e3dc1a46_20273810",
        "filename": "libs/binder/rust/src/binder.rs",
        "patchSetId": 34
      },
      "lineNbr": 203,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2023-09-27T00:24:15Z",
      "side": 1,
      "message": "https://r.android.com/2764297 adds support for `std::os::fd` in Trusty. If we land that, we can keep the current definition of the trait.",
      "parentUuid": "42db67da_e86ef970",
      "revId": "f9e8a40018d4417e88f76d74f25dd49b8df2a6c2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ef6d05a1_d7ca7d71",
        "filename": "libs/binder/rust/src/parcel.rs",
        "patchSetId": 34
      },
      "lineNbr": 30,
      "author": {
        "id": 1416371
      },
      "writtenOn": "2023-09-21T16:21:03Z",
      "side": 1,
      "message": "I think this probably goes in the `file_descriptor` module. It may also make sense to move the existing content of the `file_descriptor` module into `file_descriptor/android.rs` as part of that.",
      "revId": "f9e8a40018d4417e88f76d74f25dd49b8df2a6c2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e2dee8c9_1e3caef2",
        "filename": "libs/binder/rust/src/parcel.rs",
        "patchSetId": 34
      },
      "lineNbr": 30,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2023-10-17T02:06:43Z",
      "side": 1,
      "message": "I have a better idea that I\u0027ll upload after the rustc prebuilts land: add a feature `pfd_owned_fd` (name subject to bikeshedding) which, when enabled, switched `ParcelFileDescriptor` to a new type around `std::os::fd::OwnedFd` instead of `std::fs::File`.",
      "parentUuid": "ef6d05a1_d7ca7d71",
      "revId": "f9e8a40018d4417e88f76d74f25dd49b8df2a6c2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}