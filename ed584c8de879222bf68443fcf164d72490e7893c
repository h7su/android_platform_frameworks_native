{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "268cd134_4c282588",
        "filename": "libs/binder/include_rpc_unstable/binder_rpc_unstable.hpp",
        "patchSetId": 5
      },
      "lineNbr": 26,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-11-17T00:33:49Z",
      "side": 1,
      "message": "we usually use:\n\n     struct ARpcServer;\n\n     ... ARpcServer_setupVsock(...);\n     ... ARpcServer_shutdown(...);\n\nThe handle is okay, but it\u0027s not type safe. WDYT going this way?",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 26,
        "endChar": 34
      },
      "revId": "ed584c8de879222bf68443fcf164d72490e7893c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "27e7899d_7a25630c",
        "filename": "libs/binder/include_rpc_unstable/binder_rpc_unstable.hpp",
        "patchSetId": 5
      },
      "lineNbr": 26,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-11-17T00:34:44Z",
      "side": 1,
      "message": "(and we\u0027ll want to switch to this when/if we make it an API)",
      "parentUuid": "268cd134_4c282588",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 26,
        "endChar": 34
      },
      "revId": "ed584c8de879222bf68443fcf164d72490e7893c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fccc320c_091d488a",
        "filename": "libs/binder/include_rpc_unstable/binder_rpc_unstable.hpp",
        "patchSetId": 5
      },
      "lineNbr": 26,
      "author": {
        "id": 1958315
      },
      "writtenOn": "2022-11-17T08:55:21Z",
      "side": 1,
      "message": "+1. Since we want something to wrap the existing RpcServer and this API has the potential to become NDK one day. I think it makes sense to take this approach. We probably need to migrate all the server setup methods to this form if we decided to go this way.",
      "parentUuid": "27e7899d_7a25630c",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 26,
        "endChar": 34
      },
      "revId": "ed584c8de879222bf68443fcf164d72490e7893c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0eed5181_655faeb2",
        "filename": "libs/binder/include_rpc_unstable/binder_rpc_unstable.hpp",
        "patchSetId": 5
      },
      "lineNbr": 26,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2022-11-18T10:29:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fccc320c_091d488a",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 26,
        "endChar": 34
      },
      "revId": "ed584c8de879222bf68443fcf164d72490e7893c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d395f0c3_acbe7d7e",
        "filename": "libs/binder/include_rpc_unstable/binder_rpc_unstable.hpp",
        "patchSetId": 5
      },
      "lineNbr": 33,
      "author": {
        "id": 1958315
      },
      "writtenOn": "2022-11-17T08:55:21Z",
      "side": 1,
      "message": "Maybe `ARpcServer_newWithVsock` to emphasize that this method will return a new RpcServer?",
      "range": {
        "startLine": 33,
        "startChar": 16,
        "endLine": 33,
        "endChar": 30
      },
      "revId": "ed584c8de879222bf68443fcf164d72490e7893c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a078ddd9_9536e56e",
        "filename": "libs/binder/include_rpc_unstable/binder_rpc_unstable.hpp",
        "patchSetId": 5
      },
      "lineNbr": 33,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2022-11-18T10:29:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d395f0c3_acbe7d7e",
      "range": {
        "startLine": 33,
        "startChar": 16,
        "endLine": 33,
        "endChar": 30
      },
      "revId": "ed584c8de879222bf68443fcf164d72490e7893c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "35c68544_3e072a1e",
        "filename": "libs/binder/libbinder_rpc_unstable.cpp",
        "patchSetId": 5
      },
      "lineNbr": 36,
      "author": {
        "id": 1958315
      },
      "writtenOn": "2022-11-17T08:55:21Z",
      "side": 1,
      "message": "Why we need this variable for this cl?\n\nI think it can be risky to pack so many things in one cl: we want to add a new RpcServer wrapper class, migrate all the existing vsock and uds RPC binder API to use the new class, and this looks like for instance management of the new class. Maybe we can try to limit the scope of this cl to minimise the impact? Like just add the new class and use it in one vsock API.",
      "range": {
        "startLine": 36,
        "startChar": 67,
        "endLine": 36,
        "endChar": 77
      },
      "revId": "ed584c8de879222bf68443fcf164d72490e7893c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e21864c5_a35fa9bc",
        "filename": "libs/binder/libbinder_rpc_unstable.cpp",
        "patchSetId": 5
      },
      "lineNbr": 36,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2022-11-18T10:29:29Z",
      "side": 1,
      "message": "It was there to hold the StrongPointer. I\u0027ve replaced it now with just incrementing the refcount directly.",
      "parentUuid": "35c68544_3e072a1e",
      "range": {
        "startLine": 36,
        "startChar": 67,
        "endLine": 36,
        "endChar": 77
      },
      "revId": "ed584c8de879222bf68443fcf164d72490e7893c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c449bb81_eb0b5265",
        "filename": "libs/binder/libbinder_rpc_unstable.cpp",
        "patchSetId": 5
      },
      "lineNbr": 100,
      "author": {
        "id": 1958315
      },
      "writtenOn": "2022-11-17T08:55:21Z",
      "side": 1,
      "message": "Sorry I made a change here recently. The git doesn\u0027t show conflict, but we need to rebase otherwise the code won\u0027t compile.",
      "range": {
        "startLine": 100,
        "startChar": 57,
        "endLine": 100,
        "endChar": 58
      },
      "revId": "ed584c8de879222bf68443fcf164d72490e7893c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f7560742_35f65379",
        "filename": "libs/binder/libbinder_rpc_unstable.cpp",
        "patchSetId": 5
      },
      "lineNbr": 100,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2022-11-18T10:29:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c449bb81_eb0b5265",
      "range": {
        "startLine": 100,
        "startChar": 57,
        "endLine": 100,
        "endChar": 58
      },
      "revId": "ed584c8de879222bf68443fcf164d72490e7893c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "06835916_a7374649",
        "filename": "libs/binder/rust/rpcbinder/src/server.rs",
        "patchSetId": 5
      },
      "lineNbr": 42,
      "author": {
        "id": 1958315
      },
      "writtenOn": "2022-11-17T08:55:21Z",
      "side": 1,
      "message": "nit: Maybe `new_with_vsock` to be consistent with the c API `ARpcServer_newWithVsock`?",
      "range": {
        "startLine": 42,
        "startChar": 11,
        "endLine": 42,
        "endChar": 20
      },
      "revId": "ed584c8de879222bf68443fcf164d72490e7893c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c9083ac0_e8097d37",
        "filename": "libs/binder/rust/rpcbinder/src/server.rs",
        "patchSetId": 5
      },
      "lineNbr": 42,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2022-11-18T10:29:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "06835916_a7374649",
      "range": {
        "startLine": 42,
        "startChar": 11,
        "endLine": 42,
        "endChar": 20
      },
      "revId": "ed584c8de879222bf68443fcf164d72490e7893c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8222845c_823c3d01",
        "filename": "libs/binder/rust/rpcbinder/src/server.rs",
        "patchSetId": 5
      },
      "lineNbr": 69,
      "author": {
        "id": 1958315
      },
      "writtenOn": "2022-11-17T08:55:21Z",
      "side": 1,
      "message": "This doc also needs to be updated.",
      "range": {
        "startLine": 66,
        "startChar": 8,
        "endLine": 69,
        "endChar": 87
      },
      "revId": "ed584c8de879222bf68443fcf164d72490e7893c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "657fe161_2270c51d",
        "filename": "libs/binder/rust/rpcbinder/src/server.rs",
        "patchSetId": 5
      },
      "lineNbr": 69,
      "author": {
        "id": 1059815
      },
      "writtenOn": "2022-11-18T10:29:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8222845c_823c3d01",
      "range": {
        "startLine": 66,
        "startChar": 8,
        "endLine": 69,
        "endChar": 87
      },
      "revId": "ed584c8de879222bf68443fcf164d72490e7893c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}