{
  "comments": [
    {
      "key": {
        "uuid": "f4b96f06_89087654",
        "filename": "libs/binder/Parcel.cpp",
        "patchSetId": 4
      },
      "lineNbr": 595,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-02-18T18:19:43Z",
      "side": 1,
      "message": "see b/143567784#comment2. I think we could potentially fix this here, but not have to change the function signature.",
      "range": {
        "startLine": 595,
        "startChar": 10,
        "endLine": 595,
        "endChar": 18
      },
      "revId": "0bb330d1218e18127eb3b996645da98d320bbf03",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ae80fbb5_2da056eb",
        "filename": "libs/binder/Parcel.cpp",
        "patchSetId": 4
      },
      "lineNbr": 595,
      "author": {
        "id": 1130394
      },
      "writtenOn": "2020-02-18T18:32:32Z",
      "side": 1,
      "message": "For reading from the parcel? That won\u0027t work. For the interface name input to Parcel::enforceInterface? Having an explicit buffer interface could discourage misuse. It\u0027s not as if changing the signature here is expensive.",
      "parentUuid": "f4b96f06_89087654",
      "range": {
        "startLine": 595,
        "startChar": 10,
        "endLine": 595,
        "endChar": 18
      },
      "revId": "0bb330d1218e18127eb3b996645da98d320bbf03",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5af34a6d_fef9e3cb",
        "filename": "libs/binder/Parcel.cpp",
        "patchSetId": 4
      },
      "lineNbr": 595,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-02-18T21:18:27Z",
      "side": 1,
      "message": "Yeah, but correct use is using DECLARE_META_INTERFACE for this which handles this problem. It\u0027s much harder to delete an API. Since it seems we don\u0027t need it, can we please remove it (but keep the optimization here)?",
      "parentUuid": "ae80fbb5_2da056eb",
      "range": {
        "startLine": 595,
        "startChar": 10,
        "endLine": 595,
        "endChar": 18
      },
      "revId": "0bb330d1218e18127eb3b996645da98d320bbf03",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "35f78064_babd5175",
        "filename": "libs/binder/Parcel.cpp",
        "patchSetId": 4
      },
      "lineNbr": 595,
      "author": {
        "id": 1130394
      },
      "writtenOn": "2020-02-19T15:55:37Z",
      "side": 1,
      "message": "\u003e Yeah, but correct use is using DECLARE_META_INTERFACE for this which handles this problem\n\nNo, it isn\u0027t. This is Parcel, not a binder interface. We don\u0027t need that macro or any other. All we\u0027re doing is adding a C++ function overload.\n\n\u003e Since it seems we don\u0027t need it, can we please remove it (but keep the optimization here)?\n\nNo. There is no reason for this function to demand a string16 on input when all it needs is an array of char16.",
      "parentUuid": "5af34a6d_fef9e3cb",
      "range": {
        "startLine": 595,
        "startChar": 10,
        "endLine": 595,
        "endChar": 18
      },
      "revId": "0bb330d1218e18127eb3b996645da98d320bbf03",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "998108a2_c3d08acc",
        "filename": "libs/binder/Parcel.cpp",
        "patchSetId": 4
      },
      "lineNbr": 595,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-02-20T23:49:41Z",
      "side": 1,
      "message": "I would still rather avoid adding extra APIs here.\n\nBy that logic, is std::string also pointless? We don\u0027t need strings anywhere. We can always pass around char* + optional length.",
      "parentUuid": "35f78064_babd5175",
      "range": {
        "startLine": 595,
        "startChar": 10,
        "endLine": 595,
        "endChar": 18
      },
      "revId": "0bb330d1218e18127eb3b996645da98d320bbf03",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c1e60787_91f133a0",
        "filename": "libs/binder/Parcel.cpp",
        "patchSetId": 4
      },
      "lineNbr": 595,
      "author": {
        "id": 1130394
      },
      "writtenOn": "2020-02-21T00:04:55Z",
      "side": 1,
      "message": "You shouldn\u0027t be accepting std::string most of the time. string_view is great. If we had some kind of a String16View, I\u0027d have this function accept that. But we don\u0027t, and I think StaticString16 is a poor, non-general, and somewhat type-unsafe substitute. Accepting a pointer and a length here allows this function to impose minimal constraints on its caller.",
      "parentUuid": "998108a2_c3d08acc",
      "range": {
        "startLine": 595,
        "startChar": 10,
        "endLine": 595,
        "endChar": 18
      },
      "revId": "0bb330d1218e18127eb3b996645da98d320bbf03",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}