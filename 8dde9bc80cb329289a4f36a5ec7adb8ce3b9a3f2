{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "0e9220f5_56992315",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1416371
      },
      "writtenOn": "2021-08-16T20:21:50Z",
      "side": 1,
      "message": "Adding Martijn for OWNERS since Steven is out this week.",
      "revId": "8dde9bc80cb329289a4f36a5ec7adb8ce3b9a3f2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5aef2f56_c02e3bfa",
        "filename": "libs/binder/rust/src/proxy.rs",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-08-26T19:58:04Z",
      "side": 1,
      "message": "null SpIBinder is used pretty frequently in C++ code. For instance, as return values. Would we expect that in Rust as well?",
      "range": {
        "startLine": 41,
        "startChar": 0,
        "endLine": 41,
        "endChar": 50
      },
      "revId": "8dde9bc80cb329289a4f36a5ec7adb8ce3b9a3f2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "357f7860_b019a93e",
        "filename": "libs/binder/rust/src/proxy.rs",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 1809421
      },
      "writtenOn": "2021-08-26T20:45:49Z",
      "side": 1,
      "message": "No, one of the current invariants of this object is that it cannot contain a null pointer. In Rust nullable types are generally represented by Option (None). We use Option\u003cSpIBinder\u003e explicitly when null is a possibility.",
      "parentUuid": "5aef2f56_c02e3bfa",
      "range": {
        "startLine": 41,
        "startChar": 0,
        "endLine": 41,
        "endChar": 50
      },
      "revId": "8dde9bc80cb329289a4f36a5ec7adb8ce3b9a3f2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}