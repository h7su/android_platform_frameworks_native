{
  "comments": [
    {
      "key": {
        "uuid": "b1e391ef_fba88f79",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 14,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2016-08-31T17:24:08Z",
      "side": 1,
      "message": "I don\u0027t understand.  How could the vm area size not be a multiple of the page size?",
      "range": {
        "startLine": 13,
        "startChar": 52,
        "endLine": 14,
        "endChar": 14
      },
      "revId": "297d1e751bd9b13b3a131faed91545c5a3292576",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f1d26943_4ff4714d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 14,
      "author": {
        "id": 1111544
      },
      "writtenOn": "2016-09-01T03:08:19Z",
      "side": 1,
      "message": "\u003e I don\u0027t understand.  How could the vm area size not be a multiple\n \u003e of the page size?\n\nYou are right, vm area will be multiple of pagesize. \n\nSystem with 64KB pagesize, kernel will alloc (1MB + 64KB) vm area size. And the binder vm area need to be aligned in 512KB which calculated by below formula in kernel __get_vm_area_node()：\n---\t\t\nalign \u003d 1ul \u003c\u003c clamp_t(int, fls_long(size),\n\t       PAGE_SHIFT, IOREMAP_MAX_ORDER);\n\u003d\u003e\nalign \u003d 1ul \u003c\u003c min(max(19, 12), 19) \u003d 512KB\n---\nIf the binder mmap() is called successively， the next binder area will start at (1MB + 512KB), (512 - 64)KB fragment will exist in vm area.\n\nThanks.",
      "parentUuid": "b1e391ef_fba88f79",
      "range": {
        "startLine": 13,
        "startChar": 52,
        "endLine": 14,
        "endChar": 14
      },
      "revId": "297d1e751bd9b13b3a131faed91545c5a3292576",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "11b0ddbd_0d60729f",
        "filename": "libs/binder/ProcessState.cpp",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2016-08-31T15:35:10Z",
      "side": 1,
      "message": "This is fine for Android since bionic maintains portability here. If one wants to be portable outside our garden, one is supposed to use sysconf(_SC_PAGESIZE) according to the man page. getpagesize has been deprecated in POSIX.1-2001.",
      "range": {
        "startLine": 43,
        "startChar": 40,
        "endLine": 43,
        "endChar": 51
      },
      "revId": "297d1e751bd9b13b3a131faed91545c5a3292576",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "11b0ddbd_2df52eb6",
        "filename": "libs/binder/ProcessState.cpp",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2016-08-31T15:46:46Z",
      "side": 1,
      "message": "I suggest leaving this as 2*getpagesize().",
      "range": {
        "startLine": 43,
        "startChar": 40,
        "endLine": 43,
        "endChar": 51
      },
      "revId": "297d1e751bd9b13b3a131faed91545c5a3292576",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b1e391ef_1bfa9b61",
        "filename": "libs/binder/ProcessState.cpp",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1042828
      },
      "writtenOn": "2016-08-31T17:24:08Z",
      "side": 1,
      "message": "If we change this to getpagesize(), it\u0027s presumably because we\u0027re worried about non-4K pages. We\u0027d then also presumably need a sanity check to guard against at least some future getpagesize() \u003e\u003d 512K. Since there is no hard requirement for this to be page aligned, the original seems cleaner to me.",
      "parentUuid": "11b0ddbd_2df52eb6",
      "range": {
        "startLine": 43,
        "startChar": 40,
        "endLine": 43,
        "endChar": 51
      },
      "revId": "297d1e751bd9b13b3a131faed91545c5a3292576",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f1d26943_4498d8c6",
        "filename": "libs/binder/ProcessState.cpp",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1111544
      },
      "writtenOn": "2016-09-01T02:48:43Z",
      "side": 1,
      "message": "kernel will only add one page guard. So I thinks we only need to substract one page size.\n\nThanks.",
      "parentUuid": "11b0ddbd_2df52eb6",
      "range": {
        "startLine": 43,
        "startChar": 40,
        "endLine": 43,
        "endChar": 51
      },
      "revId": "297d1e751bd9b13b3a131faed91545c5a3292576",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f1d26943_64019410",
        "filename": "libs/binder/ProcessState.cpp",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1111544
      },
      "writtenOn": "2016-09-01T02:48:43Z",
      "side": 1,
      "message": "Thanks for your suggestion.\nsysconf(_SC_PAGE_SIZE) is better.\nThanks.",
      "parentUuid": "11b0ddbd_0d60729f",
      "range": {
        "startLine": 43,
        "startChar": 40,
        "endLine": 43,
        "endChar": 51
      },
      "revId": "297d1e751bd9b13b3a131faed91545c5a3292576",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f1d26943_446d7897",
        "filename": "libs/binder/ProcessState.cpp",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1111544
      },
      "writtenOn": "2016-09-01T02:48:43Z",
      "side": 1,
      "message": "If in the future pagesize is 512KB, maybe we need use 2M-getpagesize() to give enough vm area for binder.\nIf we use -8KB in system with 512KB pagesize, kernel vm area will have a lot of fragment.",
      "parentUuid": "b1e391ef_1bfa9b61",
      "range": {
        "startLine": 43,
        "startChar": 40,
        "endLine": 43,
        "endChar": 51
      },
      "revId": "297d1e751bd9b13b3a131faed91545c5a3292576",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f1d26943_74526169",
        "filename": "libs/binder/ProcessState.cpp",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1111544
      },
      "writtenOn": "2016-09-01T05:32:23Z",
      "side": 1,
      "message": "\u003e This is fine for Android since bionic maintains portability here.\n \u003e If one wants to be portable outside our garden, one is supposed to\n \u003e use sysconf(_SC_PAGESIZE) according to the man page. getpagesize\n \u003e has been deprecated in POSIX.1-2001.\n\nThanks for your suggestion.\nsysconf(_SC_PAGE_SIZE) is better.\nThanks.",
      "parentUuid": "11b0ddbd_0d60729f",
      "range": {
        "startLine": 43,
        "startChar": 40,
        "endLine": 43,
        "endChar": 51
      },
      "revId": "297d1e751bd9b13b3a131faed91545c5a3292576",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}