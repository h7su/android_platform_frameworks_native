{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a6137067_36a9a6bd",
        "filename": "libs/binder/RpcSession.cpp",
        "patchSetId": 6
      },
      "lineNbr": 117,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2021-07-22T14:28:02Z",
      "side": 1,
      "message": "This description doesn\u0027t seem to match with the condition incoming \u0026\u0026 i \u003d\u003d 0.",
      "range": {
        "startLine": 117,
        "startChar": 40,
        "endLine": 117,
        "endChar": 77
      },
      "revId": "06542ce3991b574265480d39f6c4b22de2db7242",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bb13a099_be736b14",
        "filename": "libs/binder/RpcSession.cpp",
        "patchSetId": 6
      },
      "lineNbr": 117,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-07-22T21:09:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a6137067_36a9a6bd",
      "range": {
        "startLine": 117,
        "startChar": 40,
        "endLine": 117,
        "endChar": 77
      },
      "revId": "06542ce3991b574265480d39f6c4b22de2db7242",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ba047c23_ea536a44",
        "filename": "libs/binder/RpcSession.cpp",
        "patchSetId": 6
      },
      "lineNbr": 118,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2021-07-22T14:28:02Z",
      "side": 1,
      "message": "When this function returns false for a connection, shouldn\u0027t we remove the previous connections that were added by add[Incoming|Outgoing]Connection?",
      "range": {
        "startLine": 118,
        "startChar": 66,
        "endLine": 118,
        "endChar": 79
      },
      "revId": "06542ce3991b574265480d39f6c4b22de2db7242",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "11c1d737_56917559",
        "filename": "libs/binder/RpcSession.cpp",
        "patchSetId": 6
      },
      "lineNbr": 118,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-07-22T21:09:31Z",
      "side": 1,
      "message": "Yes, this is also an existing bug in the other connection setup codes. I\u0027ve added this to b/189955605#comment1 (currently, the result is that the object will be invalidated. If you try to setup again, it\u0027ll abort)",
      "parentUuid": "ba047c23_ea536a44",
      "range": {
        "startLine": 118,
        "startChar": 66,
        "endLine": 118,
        "endChar": 79
      },
      "revId": "06542ce3991b574265480d39f6c4b22de2db7242",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "65bedf1f_1271a276",
        "filename": "libs/binder/RpcSession.cpp",
        "patchSetId": 6
      },
      "lineNbr": 444,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2021-07-22T14:28:02Z",
      "side": 1,
      "message": "Why not mSetupMode? Is it to run addOutgoingConnection for the initial connection? Why do we need to run it even when SetupMode is ACCEPT_ONLY? Can\u0027t we do that after (or during) attachAcceptedConnections?\n\nThis part makes it impossible to get these connections from outside of libbinder.",
      "range": {
        "startLine": 444,
        "startChar": 80,
        "endLine": 444,
        "endChar": 95
      },
      "revId": "06542ce3991b574265480d39f6c4b22de2db7242",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a5f565ae_6928732e",
        "filename": "libs/binder/RpcSession.cpp",
        "patchSetId": 6
      },
      "lineNbr": 444,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-07-22T21:09:31Z",
      "side": 1,
      "message": "correct, it\u0027s because we need the connection in order to:\n- getRemoteMaxThreads - get the # of threads that is supported by the server, currently we setup a connection for each (b/189955605 is to give the client more control here)\n- readId - get the session ID (this allows the additional connections to be associated with the first connection)",
      "parentUuid": "65bedf1f_1271a276",
      "range": {
        "startLine": 444,
        "startChar": 80,
        "endLine": 444,
        "endChar": 95
      },
      "revId": "06542ce3991b574265480d39f6c4b22de2db7242",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "987da169_e0c648af",
        "filename": "libs/binder/include/binder/RpcSession.h",
        "patchSetId": 6
      },
      "lineNbr": 112,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2021-07-22T14:28:02Z",
      "side": 1,
      "message": "Why is this the only way to create AcceptedConnections? I wish we can attach to any set of connections that are established in any way (e.g. outside of libbinder).",
      "range": {
        "startLine": 112,
        "startChar": 0,
        "endLine": 112,
        "endChar": 65
      },
      "revId": "06542ce3991b574265480d39f6c4b22de2db7242",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c4d278c5_cd2d7648",
        "filename": "libs/binder/include/binder/RpcSession.h",
        "patchSetId": 6
      },
      "lineNbr": 112,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-07-22T21:09:31Z",
      "side": 1,
      "message": "That is the idea here:\n- use libbinder to create connections (this protocol defines how many exceptions are actually needed, and it needs to pass the session ID in order to make sure the server associates all the connections together)\n- release the connections\n- send them across process\n- reattach them to a new RpcSession object",
      "parentUuid": "987da169_e0c648af",
      "range": {
        "startLine": 112,
        "startChar": 0,
        "endLine": 112,
        "endChar": 65
      },
      "revId": "06542ce3991b574265480d39f6c4b22de2db7242",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "94aabcba_f802f7af",
        "filename": "libs/binder/include/binder/RpcSession.h",
        "patchSetId": 6
      },
      "lineNbr": 112,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-07-22T21:12:12Z",
      "side": 1,
      "message": "btw - I actually think it\u0027s okay to require libbinder to create the connections. This allows some parts of the thread creation logic and associated protocols to remain an implementation detail (until these FDs are passed across an update boundary, but we don\u0027t expect this), but see the other comment, the real show-stopper here is the session ID association logic.",
      "parentUuid": "c4d278c5_cd2d7648",
      "range": {
        "startLine": 112,
        "startChar": 0,
        "endLine": 112,
        "endChar": 65
      },
      "revId": "06542ce3991b574265480d39f6c4b22de2db7242",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}