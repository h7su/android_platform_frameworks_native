{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "1b36d8cc_cd9cce05",
        "filename": "libs/binder/ndk/ibinder.cpp",
        "patchSetId": 2
      },
      "lineNbr": 541,
      "author": {
        "id": 1416371
      },
      "writtenOn": "2021-08-25T17:17:58Z",
      "side": 1,
      "message": "This has a subtle mismatch with the Java implementation because of\n\nhttps://cs.android.com/android/platform/superproject/+/master:frameworks/native/libs/binderthreadstate/include/binderthreadstate/CallerUtils.h;l\u003d46?q\u003dCallerUtils.h\n\nNote that this means even if we have a normal-binder call in progress, we could be closer to a hardware-binder call than a normal one. While we don\u0027t have Rust support for hardware-binder, it would be unsurprising if we linked Rust code into existing legacy C++ code that uses it.\n\ntl;dr mabye mimic the Java interface more exactly and do https://cs.android.com/android/platform/superproject/+/master:frameworks/base/core/jni/android_util_Binder.cpp;l\u003d963?q\u003dAndroid_util_binder.cpp",
      "revId": "45fa4c5623190a2327d351c5438d357f263be41f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b449fbab_354a9de8",
        "filename": "libs/binder/ndk/ibinder.cpp",
        "patchSetId": 2
      },
      "lineNbr": 541,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-08-25T18:13:02Z",
      "side": 1,
      "message": "Yes. For instance, the issue would be if you receive a binder call, then you make a HIDL call, then as part of making that HIDL call, you process a nested HIDL transaction, Java would return that it is not currently handling a binder call, but this would return that it is.\n\nHowever, I\u0027d also like to point out, the name is a bit misleading since it is both handling a binder transaction and isn\u0027t handling a binder transaction, depending on what you want to consider. Also, the Java API isn\u0027t actually exposed here. So we should at least use a separate name here.\n\nIs there anywhere I can learn about this async feature? I\u0027m not sure if you care about this HIDL semantic.",
      "parentUuid": "1b36d8cc_cd9cce05",
      "revId": "45fa4c5623190a2327d351c5438d357f263be41f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}