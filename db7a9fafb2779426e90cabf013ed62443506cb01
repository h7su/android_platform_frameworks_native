{
  "comments": [
    {
      "key": {
        "uuid": "08d8871a_d3814f9b",
        "filename": "cmds/dumpstate/DumpstateUtil.h",
        "patchSetId": 1
      },
      "lineNbr": 93,
      "author": {
        "id": 1013984
      },
      "writtenOn": "2017-10-03T22:18:14Z",
      "side": 1,
      "message": "I think something like AsRootIfPossible, AsRootWhenPossible or AsRootWhenAvailable/AsRootIfAvailable is better, since it doesn\u0027t restrict it to just debug,",
      "range": {
        "startLine": 93,
        "startChar": 31,
        "endLine": 93,
        "endChar": 44
      },
      "revId": "db7a9fafb2779426e90cabf013ed62443506cb01",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8546744f_fdfdf7d4",
        "filename": "cmds/dumpstate/DumpstateUtil.h",
        "patchSetId": 1
      },
      "lineNbr": 127,
      "author": {
        "id": 1013984
      },
      "writtenOn": "2017-10-03T22:18:14Z",
      "side": 1,
      "message": "if this is going to be used just by one lshal invocation, I\u0027d rather not create a default / constant option for it...",
      "range": {
        "startLine": 127,
        "startChar": 26,
        "endLine": 127,
        "endChar": 42
      },
      "revId": "db7a9fafb2779426e90cabf013ed62443506cb01",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bdc9edee_d013c476",
        "filename": "cmds/dumpstate/DumpstateUtil.h",
        "patchSetId": 1
      },
      "lineNbr": 127,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2017-10-03T22:35:39Z",
      "side": 1,
      "message": "If so I won\u0027t even bother adding AsRootIfAvailable at all",
      "parentUuid": "8546744f_fdfdf7d4",
      "range": {
        "startLine": 127,
        "startChar": 26,
        "endLine": 127,
        "endChar": 42
      },
      "revId": "db7a9fafb2779426e90cabf013ed62443506cb01",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5fd72f01_ab839143",
        "filename": "cmds/dumpstate/tests/dumpstate_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 509,
      "author": {
        "id": 1013984
      },
      "writtenOn": "2017-10-03T22:18:14Z",
      "side": 1,
      "message": "Please use MYLOGE for consistency",
      "range": {
        "startLine": 509,
        "startChar": 8,
        "endLine": 509,
        "endChar": 13
      },
      "revId": "db7a9fafb2779426e90cabf013ed62443506cb01",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "036b72fc_cc9efbe8",
        "filename": "cmds/dumpstate/tests/dumpstate_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 509,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2017-10-03T22:27:45Z",
      "side": 1,
      "message": "Will do (but this is code copied from above)",
      "parentUuid": "5fd72f01_ab839143",
      "range": {
        "startLine": 509,
        "startChar": 8,
        "endLine": 509,
        "endChar": 13
      },
      "revId": "db7a9fafb2779426e90cabf013ed62443506cb01",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "33d7a8ac_5a414815",
        "filename": "cmds/dumpstate/tests/dumpstate_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 509,
      "author": {
        "id": 1013984
      },
      "writtenOn": "2017-10-03T22:35:25Z",
      "side": 1,
      "message": "Ah, ok, nevermind then.\n\nYou actually might need ALOGI, because MYLOGE outputs to the stderr, and it can interfere in the test expectations..",
      "parentUuid": "036b72fc_cc9efbe8",
      "range": {
        "startLine": 509,
        "startChar": 8,
        "endLine": 509,
        "endChar": 13
      },
      "revId": "db7a9fafb2779426e90cabf013ed62443506cb01",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "96174496_d54277e2",
        "filename": "cmds/dumpstate/tests/dumpstate_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 511,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2017-10-03T22:00:23Z",
      "side": 1,
      "message": "nit: I prefer one with\nif(isUser) {...} else {...}",
      "range": {
        "startLine": 508,
        "startChar": 0,
        "endLine": 511,
        "endChar": 5
      },
      "revId": "db7a9fafb2779426e90cabf013ed62443506cb01",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "03e14c8b_7e08f8cd",
        "filename": "cmds/dumpstate/tests/dumpstate_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 511,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2017-10-03T22:03:22Z",
      "side": 1,
      "message": "(Copied from code above)",
      "parentUuid": "96174496_d54277e2",
      "range": {
        "startLine": 508,
        "startChar": 0,
        "endLine": 511,
        "endChar": 5
      },
      "revId": "db7a9fafb2779426e90cabf013ed62443506cb01",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}