{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e4068906_afb7296b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1869221
      },
      "writtenOn": "2023-07-19T17:36:10Z",
      "side": 1,
      "message": "This is to test addressing this bug:\nhttps://b.corp.google.com/issues/290337392\n\nas outlined in this design doc:\nhttps://docs.google.com/document/d/1-_lWhlee504w-XzSWpWiOguFU0TIoWmH6cq966am_Rc/edit",
      "revId": "96aed997a6b0d632586294820d87d0e247625627",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f710b3ff_7107c805",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-07-19T18:04:29Z",
      "side": 1,
      "message": "why does this resolve missing system/core coverage?\n\nI would actually like to be able to see libc and libc++ coverage. It seems strange we have to cut these off, and cutting them off fixes coverage for other libraries?",
      "parentUuid": "e4068906_afb7296b",
      "revId": "96aed997a6b0d632586294820d87d0e247625627",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "53dbe332_169a1fcf",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1869221
      },
      "writtenOn": "2023-07-19T18:23:39Z",
      "side": 1,
      "message": "We can leave those libraries in. \n\nIn 2020 we excluded these libraries in our coverage reports to try to reduce noise, and also get a more accurate coverage % for fuzzers. Most people don\u0027t care about these libraries coverage, and don\u0027t want these lines in the denominator when calculating coverage %. \n\nYou can see the code to exclude these paths here:\n\nhttps://source.corp.google.com/piper///depot/google3/wireless/android/security/haiku/line_coverage/business/html.go;l\u003d37\n\nTo sum up the change I\u0027m making, in the above link we have hard coded paths to be excluded in the coverage reports. I\u0027ve added this new option to Soong fuzz_config to be able to define this list. If the option is defined in the fuzz_config (which could be defined as \"[]\" to exclude no paths) then we will use this list instead. So by defining this list here, we will not be excluding \"system/core/.*\" when we make our coverage report.",
      "parentUuid": "f710b3ff_7107c805",
      "revId": "96aed997a6b0d632586294820d87d0e247625627",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ffed9d4f_fff04229",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-07-19T19:47:25Z",
      "side": 1,
      "message": "Can we remove system/core from the global list? Or is there another way we can display all coverage here?\n\nIf it needs to be filtered, I think we would want this in the web UI, but maybe that\u0027s too big of an ask now, so it\u0027s okay. The listed files are already so many, have to grep to jump to them anyway.",
      "parentUuid": "53dbe332_169a1fcf",
      "revId": "96aed997a6b0d632586294820d87d0e247625627",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}