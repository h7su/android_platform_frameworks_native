{
  "comments": [
    {
      "key": {
        "uuid": "71b88c29_40a082a9",
        "filename": "libs/binder/rust/Android.bp",
        "patchSetId": 24
      },
      "lineNbr": 28,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-08-12T23:26:05Z",
      "side": 1,
      "message": "This is only for host test code (where it is copied from), but these should not be specified for device code, and instead should have headers imported. Particularly, __assert should not be dropped.",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 28,
        "endChar": 34
      },
      "revId": "e84f4bcbaba5644dde260d55d9509412676a65b0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eec119ac_fe2abe51",
        "filename": "libs/binder/rust/src/error.rs",
        "patchSetId": 24
      },
      "lineNbr": 113,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-08-12T23:26:05Z",
      "side": 1,
      "message": "I am seeing a lot of comments like this, and my comment here is meant to apply in general, even though I am talking about AStatus_newOk in general. If that is the case, then the function shouldn\u0027t be marked as unsafe in the first place, right? The actual behavior will be that it aborts. Shouldn\u0027t the unsafe-ness be hidden away inside of the rust version of AStatus_newOk so that every client of AStatus_newOk doesn\u0027t have to wrap the function with unsafe?",
      "range": {
        "startLine": 111,
        "startChar": 24,
        "endLine": 113,
        "endChar": 21
      },
      "revId": "e84f4bcbaba5644dde260d55d9509412676a65b0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a8b360a_9fc71932",
        "filename": "libs/binder/rust/src/proxy.rs",
        "patchSetId": 24
      },
      "lineNbr": 71,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-08-12T23:26:05Z",
      "side": 1,
      "message": "this seems to be talking about \u0027self.as_native()\u0027 but unsafe is required because it\u0027s calling into a C++ API?",
      "range": {
        "startLine": 70,
        "startChar": 23,
        "endLine": 71,
        "endChar": 34
      },
      "revId": "e84f4bcbaba5644dde260d55d9509412676a65b0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}