{
  "comments": [
    {
      "key": {
        "uuid": "78a78223_b4bdceb6",
        "filename": "services/inputflinger/tests/fuzzers/blockingQueue/BlockingQueueFuzzer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 1149384
      },
      "writtenOn": "2020-08-07T19:33:54Z",
      "side": 1,
      "message": "this is called fdp in the other fuzzer (libinput), let\u0027s name it \"fdp\" here to make it consistent.",
      "range": {
        "startLine": 29,
        "startChar": 23,
        "endLine": 29,
        "endChar": 29
      },
      "revId": "80fbeb32a59eb334c3380b92a907fe8bc00ef24d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d261b72_b6ce64f4",
        "filename": "services/inputflinger/tests/fuzzers/blockingQueue/BlockingQueueFuzzer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1149384
      },
      "writtenOn": "2020-08-07T19:33:54Z",
      "side": 1,
      "message": "move to block scopes as well",
      "range": {
        "startLine": 30,
        "startChar": 4,
        "endLine": 30,
        "endChar": 20
      },
      "revId": "80fbeb32a59eb334c3380b92a907fe8bc00ef24d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cb1152e2_edf1f842",
        "filename": "services/inputflinger/tests/fuzzers/blockingQueue/BlockingQueueFuzzer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 1149384
      },
      "writtenOn": "2020-08-07T19:33:54Z",
      "side": 1,
      "message": "should this be done in a loop up to \u0027capacity\u0027 number of elements? or up to \u0027capacity + 1\u0027 perhaps?",
      "range": {
        "startLine": 44,
        "startChar": 8,
        "endLine": 47,
        "endChar": 54
      },
      "revId": "80fbeb32a59eb334c3380b92a907fe8bc00ef24d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c4d55dea_fd8aa27a",
        "filename": "services/inputflinger/tests/fuzzers/blockingQueue/BlockingQueueFuzzer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 80,
      "author": {
        "id": 1149384
      },
      "writtenOn": "2020-08-07T19:33:54Z",
      "side": 1,
      "message": "delete",
      "range": {
        "startLine": 80,
        "startChar": 7,
        "endLine": 80,
        "endChar": 33
      },
      "revId": "80fbeb32a59eb334c3380b92a907fe8bc00ef24d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "67e68535_389da3f2",
        "filename": "services/inputflinger/tests/fuzzers/blockingQueue/BlockingQueueFuzzer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 83,
      "author": {
        "id": 1149384
      },
      "writtenOn": "2020-08-07T19:33:54Z",
      "side": 1,
      "message": "delete",
      "range": {
        "startLine": 83,
        "startChar": 8,
        "endLine": 83,
        "endChar": 52
      },
      "revId": "80fbeb32a59eb334c3380b92a907fe8bc00ef24d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a3ed0c42_72ee6961",
        "filename": "services/inputflinger/tests/fuzzers/blockingQueue/BlockingQueueFuzzer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 93,
      "author": {
        "id": 1149384
      },
      "writtenOn": "2020-08-07T19:33:54Z",
      "side": 1,
      "message": "what kind of errors are you getting? it would just cause \"push\" to happen more than 100 times?",
      "range": {
        "startLine": 93,
        "startChar": 8,
        "endLine": 93,
        "endChar": 72
      },
      "revId": "80fbeb32a59eb334c3380b92a907fe8bc00ef24d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "02710110_464b4e85",
        "filename": "services/inputflinger/tests/fuzzers/blockingQueue/BlockingQueueFuzzer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 103,
      "author": {
        "id": 1149384
      },
      "writtenOn": "2020-08-07T19:33:54Z",
      "side": 1,
      "message": "delete. no checking is performed here",
      "range": {
        "startLine": 103,
        "startChar": 8,
        "endLine": 103,
        "endChar": 63
      },
      "revId": "80fbeb32a59eb334c3380b92a907fe8bc00ef24d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8bcb7a39_a5afc06f",
        "filename": "services/inputflinger/tests/fuzzers/classifiers/InputClassifierConverterFuzzer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 26,
      "author": {
        "id": 1149384
      },
      "writtenOn": "2020-08-07T19:33:54Z",
      "side": 1,
      "message": "pass by ref instead",
      "range": {
        "startLine": 26,
        "startChar": 65,
        "endLine": 26,
        "endChar": 72
      },
      "revId": "80fbeb32a59eb334c3380b92a907fe8bc00ef24d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0cd2a946_eca467b8",
        "filename": "services/inputflinger/tests/fuzzers/classifiers/InputClassifierConverterFuzzer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 37,
      "author": {
        "id": 1149384
      },
      "writtenOn": "2020-08-07T19:33:54Z",
      "side": 1,
      "message": "why not cycle through all axes instead?",
      "range": {
        "startLine": 35,
        "startChar": 4,
        "endLine": 37,
        "endChar": 96
      },
      "revId": "80fbeb32a59eb334c3380b92a907fe8bc00ef24d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "906c8bbc_7f2e94d4",
        "filename": "services/inputflinger/tests/fuzzers/classifiers/InputClassifierConverterFuzzer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 1149384
      },
      "writtenOn": "2020-08-07T19:33:54Z",
      "side": 1,
      "message": "this is only testing BitSet64 code, I believe",
      "range": {
        "startLine": 38,
        "startChar": 4,
        "endLine": 38,
        "endChar": 54
      },
      "revId": "80fbeb32a59eb334c3380b92a907fe8bc00ef24d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "03dcc86d_b8d29b09",
        "filename": "services/inputflinger/tests/fuzzers/classifiers/InputClassifierFuzzHelpers.h",
        "patchSetId": 2
      },
      "lineNbr": 24,
      "author": {
        "id": 1149384
      },
      "writtenOn": "2020-08-07T19:33:54Z",
      "side": 1,
      "message": "should this be \"static\"?",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 24,
        "endChar": 69
      },
      "revId": "80fbeb32a59eb334c3380b92a907fe8bc00ef24d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3e4e4a2e_5201d1a0",
        "filename": "services/inputflinger/tests/fuzzers/classifiers/InputClassifierFuzzHelpers.h",
        "patchSetId": 2
      },
      "lineNbr": 31,
      "author": {
        "id": 1149384
      },
      "writtenOn": "2020-08-07T19:33:54Z",
      "side": 1,
      "message": "these 3 axes (X, Y, SIZE) should be provided to this function as a vector, or just generate random axes here.\nOtherwise, we are essentially hardcoding these 3 axes here and then again in the fuzzer when calling getMotionEventAxis",
      "range": {
        "startLine": 31,
        "startChar": 24,
        "endLine": 31,
        "endChar": 44
      },
      "revId": "80fbeb32a59eb334c3380b92a907fe8bc00ef24d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}