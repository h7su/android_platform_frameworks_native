{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "273b03ae_3ccaa120",
        "filename": "libs/binder/rust/src/parcel/parcelable_holder.rs",
        "patchSetId": 9
      },
      "lineNbr": 26,
      "author": {
        "id": 1415877
      },
      "writtenOn": "2021-09-13T12:18:53Z",
      "side": 1,
      "message": "Hold on, iiuc, this is only valid for AIDL-generated structured parcelables (at least for now).\n\nJeongik, can you confirm this is what we expect from ParcelableHolder? I guess so, but we\u0027d better be specific about ParcelableHolder\u0027s contract.",
      "range": {
        "startLine": 26,
        "startChar": 32,
        "endLine": 26,
        "endChar": 42
      },
      "revId": "7acdd21693e7a5955f34ebb6750886bb2e4a5d13",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8887b7a6_f340246b",
        "filename": "libs/binder/rust/src/parcel/parcelable_holder.rs",
        "patchSetId": 9
      },
      "lineNbr": 26,
      "author": {
        "id": 1386891
      },
      "writtenOn": "2021-09-13T15:43:36Z",
      "side": 1,
      "message": "I am curious if there are user-defined parcelables in rust world, and it would work if the parcelables uses Parcelable trait?\n\nBTW, it would be okay even though it works with only structured parcelables, because our expected use case is that ParcelableHolder works with \u0027stable\u0027 parcelable to extend it.",
      "parentUuid": "273b03ae_3ccaa120",
      "range": {
        "startLine": 26,
        "startChar": 32,
        "endLine": 26,
        "endChar": 42
      },
      "revId": "7acdd21693e7a5955f34ebb6750886bb2e4a5d13",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5e701e23_108a6742",
        "filename": "libs/binder/rust/src/parcel/parcelable_holder.rs",
        "patchSetId": 9
      },
      "lineNbr": 26,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2021-09-13T21:16:57Z",
      "side": 1,
      "message": "We need this here so we can call subparcel.write_parcelable() on line 188 on an AnyParcelable object (write_parcelable requires that its parameter implements Parcelable).",
      "parentUuid": "8887b7a6_f340246b",
      "range": {
        "startLine": 26,
        "startChar": 32,
        "endLine": 26,
        "endChar": 42
      },
      "revId": "7acdd21693e7a5955f34ebb6750886bb2e4a5d13",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a27b9f53_56088b7c",
        "filename": "libs/binder/rust/src/parcel/parcelable_holder.rs",
        "patchSetId": 9
      },
      "lineNbr": 26,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-09-13T21:46:01Z",
      "side": 1,
      "message": "We want to leave open the possibility for custom Rust parcelables, exactly like we have now with cpp_header.",
      "parentUuid": "8887b7a6_f340246b",
      "range": {
        "startLine": 26,
        "startChar": 32,
        "endLine": 26,
        "endChar": 42
      },
      "revId": "7acdd21693e7a5955f34ebb6750886bb2e4a5d13",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2801933b_c88faf08",
        "filename": "libs/binder/rust/src/parcel/parcelable_holder.rs",
        "patchSetId": 9
      },
      "lineNbr": 26,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2021-09-13T22:30:22Z",
      "side": 1,
      "message": "The Parcelable trait has 2 kinds of methods for now:\n* get_descriptor() and get_stability() which are both required by ParcelableHolder, so custom parcelables would need to implement.\n* serialize_parcelable/deserialize_parcelable which ParcelableHolder also requires, but are also used by impl_serialize_for_parcelable/impl_deserialize_for_parcelable, respectively. Any custom parcelable that gets serialized would need to implement these two.\n\nIf a custom parcelable doesn\u0027t need to be stored in a ParcelableHolder, it could skip the first two. Is there ever a scenario where it wouldn\u0027t need to implement the serialization functions?\n\nIn any case, I could split the current Parcelable into two traits (one per list item above).",
      "parentUuid": "a27b9f53_56088b7c",
      "range": {
        "startLine": 26,
        "startChar": 32,
        "endLine": 26,
        "endChar": 42
      },
      "revId": "7acdd21693e7a5955f34ebb6750886bb2e4a5d13",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fc1e2830_591dd1e7",
        "filename": "libs/binder/rust/src/parcel/parcelable_holder.rs",
        "patchSetId": 9
      },
      "lineNbr": 26,
      "author": {
        "id": 1415877
      },
      "writtenOn": "2021-09-13T22:37:38Z",
      "side": 1,
      "message": "The split sounds good to me.",
      "parentUuid": "2801933b_c88faf08",
      "range": {
        "startLine": 26,
        "startChar": 32,
        "endLine": 26,
        "endChar": 42
      },
      "revId": "7acdd21693e7a5955f34ebb6750886bb2e4a5d13",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}