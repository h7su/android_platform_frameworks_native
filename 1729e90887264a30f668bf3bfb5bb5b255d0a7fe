{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "67a10b4a_1d82945e",
        "filename": "libs/binder/rust/tests/serialization.rs",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-02-16T23:45:04Z",
      "side": 1,
      "message": "What is this shadowing and should that be an error? Is there any reason to use the same name?",
      "range": {
        "startLine": 43,
        "startChar": 13,
        "endLine": 43,
        "endChar": 22
      },
      "revId": "1729e90887264a30f668bf3bfb5bb5b255d0a7fe",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "26e3f498_8b7d1d4a",
        "filename": "libs/binder/rust/tests/serialization.rs",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1093255
      },
      "writtenOn": "2021-02-17T00:28:50Z",
      "side": 1,
      "message": "This is shadowing the standard assert macros, which isn\u0027t an error in Rust. I don\u0027t see a reason to use a different name when we very much do not want to be using the normal assert macros in this test. If there\u0027s a strong reason to rename this, we certainly can, but the normal assert and panic macros will not properly interact with the gtest driver.",
      "parentUuid": "67a10b4a_1d82945e",
      "range": {
        "startLine": 43,
        "startChar": 13,
        "endLine": 43,
        "endChar": 22
      },
      "revId": "1729e90887264a30f668bf3bfb5bb5b255d0a7fe",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0f7a6152_672bfc9a",
        "filename": "libs/binder/rust/tests/serialization.rs",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-02-17T00:32:11Z",
      "side": 1,
      "message": "I mean - it should return a DEAD_OBJECT error, which should:\n- cause the test case to fail (since it would be expecting \u0027okay\u0027 or a different error)\n- have assertions in logs\n\nNo real complaint though, about switching to this style, since it should produce easier to read errors.",
      "parentUuid": "26e3f498_8b7d1d4a",
      "range": {
        "startLine": 43,
        "startChar": 13,
        "endLine": 43,
        "endChar": 22
      },
      "revId": "1729e90887264a30f668bf3bfb5bb5b255d0a7fe",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3c35fcbd_62e0cc4a",
        "filename": "libs/binder/rust/tests/serialization.rs",
        "patchSetId": 1
      },
      "lineNbr": 320,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-02-16T23:45:04Z",
      "side": 1,
      "message": "do we need the assertion here, actually? and I\u0027m curious, should we also test if there is an abort? (TEST_DIE?)",
      "revId": "1729e90887264a30f668bf3bfb5bb5b255d0a7fe",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "58f2ae33_90993332",
        "filename": "libs/binder/rust/tests/serialization.rs",
        "patchSetId": 1
      },
      "lineNbr": 320,
      "author": {
        "id": 1093255
      },
      "writtenOn": "2021-02-17T00:28:50Z",
      "side": 1,
      "message": "I\u0027m testing that assert failures propagate back to C++ here, since all other asserts should pass. This is just a sanity check since it failed to propagate when I was initially developing these tests and I wanted to make sure that wouldn\u0027t ever happen.\n\nWe can\u0027t actually catch and return a proper error to C++ if there is a panic. I used to do that, but we changed the build system to build Rust with panic\u003dabort rather than unwind, so there is no opportunity to recover.",
      "parentUuid": "3c35fcbd_62e0cc4a",
      "revId": "1729e90887264a30f668bf3bfb5bb5b255d0a7fe",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aca3a294_fc33ca6a",
        "filename": "libs/binder/rust/tests/serialization.rs",
        "patchSetId": 1
      },
      "lineNbr": 320,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-02-17T00:32:11Z",
      "side": 1,
      "message": "Yeah - but we should make sure the binder driver can handle this case as well and we should test it (nothing should break here for Rust, but still). If the process dies, we should still get an error back",
      "parentUuid": "58f2ae33_90993332",
      "revId": "1729e90887264a30f668bf3bfb5bb5b255d0a7fe",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}