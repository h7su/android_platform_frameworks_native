{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6b394231_638951d1",
        "filename": "libs/binder/tests/rpc_fuzzer/main.cpp",
        "patchSetId": 1
      },
      "lineNbr": 87,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-09-24T04:33:09Z",
      "side": 1,
      "message": "we don\u0027t really want to set the transport on the caller. This means we wouldn\u0027t be fuzzing the TLS layer entirely. We want to ideally (though we\u0027ll need to check coverage to see if we can make progress).\n\nAlso - we should probably make the certificates/keys that we use deterministic, so that the coverage guided fuzzer can make progress.",
      "range": {
        "startLine": 84,
        "startChar": 0,
        "endLine": 87,
        "endChar": 33
      },
      "revId": "d59baf6668aa18454c8dad1be74273c229933cc2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b48f3455_3e6b9b31",
        "filename": "libs/binder/tests/rpc_fuzzer/main.cpp",
        "patchSetId": 1
      },
      "lineNbr": 87,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-09-24T04:38:48Z",
      "side": 1,
      "message": "\u003e we don\u0027t really want to set the transport on the caller. This means we wouldn\u0027t be fuzzing the TLS layer entirely. We want to ideally (though we\u0027ll need to check coverage to see if we can make progress).\n\nI don\u0027t understand this part. Can you explain in a bit more detail?\n\nI thought the idea is to fuzz libbinder_tls, which is RpcTransportCtxFactoryTls and the objects it generates essentially.\n\n\u003e Also - we should probably make the certificates/keys that we use deterministic, so that the coverage guided fuzzer can make progress.\n\nAck, I\u0027ll check in static keys in CL:1835927",
      "parentUuid": "6b394231_638951d1",
      "range": {
        "startLine": 84,
        "startChar": 0,
        "endLine": 87,
        "endChar": 33
      },
      "revId": "d59baf6668aa18454c8dad1be74273c229933cc2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e277b394_258ed1a7",
        "filename": "libs/binder/tests/rpc_fuzzer/main.cpp",
        "patchSetId": 1
      },
      "lineNbr": 87,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-09-24T04:58:36Z",
      "side": 1,
      "message": "\u003e we don\u0027t really want to set the transport on the caller. This means we wouldn\u0027t be fuzzing the TLS layer entirely. We want to ideally (though we\u0027ll need to check coverage to see if we can make progress).\n\nTalked offline. We should just keep the raw ::send() and let the fuzzer do the job.\n\nWe can provide corpuses and dicts to make it reach high coverage quickly, but it shouldn\u0027t be handled here. The fuzzer should play dumb.",
      "parentUuid": "b48f3455_3e6b9b31",
      "range": {
        "startLine": 84,
        "startChar": 0,
        "endLine": 87,
        "endChar": 33
      },
      "revId": "d59baf6668aa18454c8dad1be74273c229933cc2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f5042c49_288bb55c",
        "filename": "libs/binder/tests/rpc_fuzzer/main.cpp",
        "patchSetId": 1
      },
      "lineNbr": 87,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-09-24T20:47:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e277b394_258ed1a7",
      "range": {
        "startLine": 84,
        "startChar": 0,
        "endLine": 87,
        "endChar": 33
      },
      "revId": "d59baf6668aa18454c8dad1be74273c229933cc2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}