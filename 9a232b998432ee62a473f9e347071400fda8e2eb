{
  "comments": [
    {
      "key": {
        "uuid": "5a754a1d_d8478354",
        "filename": "cmds/dumpstate/dumpstate.cpp",
        "patchSetId": 1
      },
      "lineNbr": 303,
      "author": {
        "id": 1336554
      },
      "writtenOn": "2019-09-27T13:10:19Z",
      "side": 1,
      "message": "could you also fix this comment?",
      "range": {
        "startLine": 303,
        "startChar": 3,
        "endLine": 303,
        "endChar": 77
      },
      "revId": "9a232b998432ee62a473f9e347071400fda8e2eb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5d1cd2bf_28528474",
        "filename": "cmds/dumpstate/dumpstate.cpp",
        "patchSetId": 1
      },
      "lineNbr": 303,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2019-09-27T14:33:56Z",
      "side": 1,
      "message": "hang on... at the moment, both callers are implicitly using limit_by_count \u003d\u003d true, but my change is saying \"fix the limit so that it\u0027s the actual number of tombstones\" --- should we actually *remove* this comment, *remove* the argument, and *remove* L352-359? because we\u0027re effectively saying we _don\u0027t_ want anyone to use this functionality... so why leave it in?\n\n(or was this meant to be protection against someone reducing the property but not removing any extra files that already exist? that seems not entirely useless, but does seem somewhat unconvincing. and at least warrants a comment saying that [and probably still removing this comment and the argument, and just unconditionally saying \"we won\u0027t take more than the property, in case there\u0027s cruft lying around\"].)\n\nwhich do you think makes more sense?",
      "parentUuid": "5a754a1d_d8478354",
      "range": {
        "startLine": 303,
        "startChar": 3,
        "endLine": 303,
        "endChar": 77
      },
      "revId": "9a232b998432ee62a473f9e347071400fda8e2eb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5b802f5c_a8c07534",
        "filename": "cmds/dumpstate/dumpstate.cpp",
        "patchSetId": 1
      },
      "lineNbr": 303,
      "author": {
        "id": 1336554
      },
      "writtenOn": "2019-09-27T14:52:58Z",
      "side": 1,
      "message": "Actually http://b/140580637#comment7 mentions this property can be 1000 on hwasan devices and that sounds too much, if there can be so many tombstones. So maybe we should do min(tombstones, 100) or something like that?\n\nI would think we want to keep 352-359 in either case - seems like a sensible defense to me.",
      "parentUuid": "5d1cd2bf_28528474",
      "range": {
        "startLine": 303,
        "startChar": 3,
        "endLine": 303,
        "endChar": 77
      },
      "revId": "9a232b998432ee62a473f9e347071400fda8e2eb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "343f30d2_7d2b6a6d",
        "filename": "cmds/dumpstate/dumpstate.cpp",
        "patchSetId": 1
      },
      "lineNbr": 303,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2019-09-27T15:11:31Z",
      "side": 1,
      "message": "yeah, the plan is to reduce that on hwasan devices. but what are we defending against? my feeling is that -- once we\u0027ve fixed the hwasan default to be more reasonable -- folks should get what they asked for, no? what\u0027s the point of asking for 100 tombstones if you don\u0027t actually get them in your .zip file?\n\n(i think the tension comes because there are multiple consumers of the zip file, and the \"betterbug\" consumer has limits on how big the zip file can be. but for tradefed or whatever, i think we do want however many tombstones there actually were, not a fairly arbitrary [from the point of view of the test failure bug that\u0027s assigned to you] subset.)\n\nZipWriter knows how big the file is, so an alternative (and i think more sensible) limit would be if we added files [newest first, like now] until the ZipWriter\u0027s size hits 20MiB or whatever a safe distance from the \"betterbug\" limit would be.\n\nmy plan had been to try this and see if it causes any problems in practice [because cuttlefish and hwasan, the two places i know have very high limits, are used for test runs rather than dogfooding, where i think \"getting all the tombstones\" is much more important than \"ensuring betterbug always works\"], but i can do both at once if you think we shouldn\u0027t just trust that the user has configured a limit that makes sense for them. (which we certainly can\u0027t guarantee, but my feeling was \"you asked us, so we did it\"!)",
      "parentUuid": "5b802f5c_a8c07534",
      "range": {
        "startLine": 303,
        "startChar": 3,
        "endLine": 303,
        "endChar": 77
      },
      "revId": "9a232b998432ee62a473f9e347071400fda8e2eb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "73b58ef6_56a1b511",
        "filename": "cmds/dumpstate/dumpstate.cpp",
        "patchSetId": 1
      },
      "lineNbr": 303,
      "author": {
        "id": 1336554
      },
      "writtenOn": "2019-09-30T08:54:46Z",
      "side": 1,
      "message": "I don\u0027t know that BetterBug has a size limit as such, but generally speaking I have been trying to keep bugreport size not get much bigger than they are now. If you think dogfood devices would have reasonable max_tombstone_count properties, dumping them all for now, and revisiting if there are complaints sounds fine to me.",
      "parentUuid": "343f30d2_7d2b6a6d",
      "range": {
        "startLine": 303,
        "startChar": 3,
        "endLine": 303,
        "endChar": 77
      },
      "revId": "9a232b998432ee62a473f9e347071400fda8e2eb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bbdea1fb_f4cd0a3f",
        "filename": "cmds/dumpstate/dumpstate.cpp",
        "patchSetId": 1
      },
      "lineNbr": 303,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2019-09-30T21:20:53Z",
      "side": 1,
      "message": "sgtm, let\u0027s try it and see... ps2 removes the code to enforce the limit.",
      "parentUuid": "73b58ef6_56a1b511",
      "range": {
        "startLine": 303,
        "startChar": 3,
        "endLine": 303,
        "endChar": 77
      },
      "revId": "9a232b998432ee62a473f9e347071400fda8e2eb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}