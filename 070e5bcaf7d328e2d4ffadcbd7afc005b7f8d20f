{
  "comments": [
    {
      "key": {
        "uuid": "c2a304b0_b91a997c",
        "filename": "libs/binder/IPCThreadState.cpp",
        "patchSetId": 3
      },
      "lineNbr": 477,
      "author": {
        "id": 1001986
      },
      "writtenOn": "2017-08-11T17:42:04Z",
      "side": 1,
      "message": "Does the potential addition to the vector happen on this thread?",
      "revId": "070e5bcaf7d328e2d4ffadcbd7afc005b7f8d20f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "93b38d3b_fe8261e9",
        "filename": "libs/binder/IPCThreadState.cpp",
        "patchSetId": 3
      },
      "lineNbr": 477,
      "author": {
        "id": 1013030
      },
      "writtenOn": "2017-08-11T18:21:11Z",
      "side": 1,
      "message": "Yeah - decWeak() may cause a destructor to be run on the same thread, which could then call into the kernel through a new binder transaction, and the kernel could queue a BR_DECREFS back to this same thread (eg in the scenario Arve described).\n\nThis vector should only be touched from this specific thread (as it belongs to thread-specific state).",
      "parentUuid": "c2a304b0_b91a997c",
      "revId": "070e5bcaf7d328e2d4ffadcbd7afc005b7f8d20f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "96aa4cb4_d91e4d9c",
        "filename": "libs/binder/IPCThreadState.cpp",
        "patchSetId": 3
      },
      "lineNbr": 483,
      "author": {
        "id": 1001986
      },
      "writtenOn": "2017-08-11T17:42:04Z",
      "side": 1,
      "message": "Can this result in additions to the mPendingWeakDerefs vector?",
      "revId": "070e5bcaf7d328e2d4ffadcbd7afc005b7f8d20f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e96ca8d_b47f8aae",
        "filename": "libs/binder/IPCThreadState.cpp",
        "patchSetId": 3
      },
      "lineNbr": 483,
      "author": {
        "id": 1013030
      },
      "writtenOn": "2017-08-11T18:21:11Z",
      "side": 1,
      "message": "Yes, the kernel could queue a BR_DECREFS command to this thread as a result of this call, which we would store in mPendingWeakDerefs. But I don\u0027t think it matters since that command is not lost anymore. We will just process it in the next iteration of the thread loop (joinThreadPool() below).\n\nI could rewrite this to a\n\nwhile (mPendingStrongDerefs.size() \u003e 0 || mPendingWeakDerefs.size() \u003e 0)\n\nif you prefer.",
      "parentUuid": "96aa4cb4_d91e4d9c",
      "revId": "070e5bcaf7d328e2d4ffadcbd7afc005b7f8d20f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a381c0ba_888b3da6",
        "filename": "libs/binder/IPCThreadState.cpp",
        "patchSetId": 3
      },
      "lineNbr": 483,
      "author": {
        "id": 1001986
      },
      "writtenOn": "2017-08-11T18:42:01Z",
      "side": 1,
      "message": "If processing in the next iteration is sufficient, then this is fine.",
      "parentUuid": "8e96ca8d_b47f8aae",
      "revId": "070e5bcaf7d328e2d4ffadcbd7afc005b7f8d20f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cf14bed7_fd4bcf17",
        "filename": "libs/binder/IPCThreadState.cpp",
        "patchSetId": 3
      },
      "lineNbr": 483,
      "author": {
        "id": 1013030
      },
      "writtenOn": "2017-08-11T18:52:05Z",
      "side": 1,
      "message": "I was just thinking about this more: if we add to mPendingWeakDerefs in this part of the call, then indeed it won\u0027t get lost. But the call to getAndExecuteCommand() below would actually block until we get a new command from the driver, which may take a while. So the decWeak() will get done, but it may be delayed until the next time this thread receives a call.\n\nSo it may still be better to rewrite it, though that could change the order of handling the strong/weak decrements...I need to think about this more.",
      "parentUuid": "a381c0ba_888b3da6",
      "revId": "070e5bcaf7d328e2d4ffadcbd7afc005b7f8d20f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bb100ac2_68e035e7",
        "filename": "libs/binder/IPCThreadState.cpp",
        "patchSetId": 3
      },
      "lineNbr": 483,
      "author": {
        "id": 1000205
      },
      "writtenOn": "2017-08-11T20:17:01Z",
      "side": 1,
      "message": "You can nest the loops to avoid that. e.g.:\nwhile (mPendingStrongDerefs.size() \u003e 0 || \n       mPendingWeakDerefs.size() \u003e 0) {\n    while (mPendingWeakDerefs.size() \u003e 0) {\n        //decWeak\n    }\n    // decStrong\n}",
      "parentUuid": "cf14bed7_fd4bcf17",
      "revId": "070e5bcaf7d328e2d4ffadcbd7afc005b7f8d20f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b4d4c93d_9004168c",
        "filename": "libs/binder/IPCThreadState.cpp",
        "patchSetId": 3
      },
      "lineNbr": 483,
      "author": {
        "id": 1013030
      },
      "writtenOn": "2017-08-11T20:27:53Z",
      "side": 1,
      "message": "Funny, I just thought the same thing while brushing my teeth :-)",
      "parentUuid": "bb100ac2_68e035e7",
      "revId": "070e5bcaf7d328e2d4ffadcbd7afc005b7f8d20f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}