{
  "comments": [
    {
      "key": {
        "uuid": "f633470d_5f1b1455",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-09-16T19:29:03Z",
      "side": 1,
      "message": "should we have a test that tests NDK backend and Rust backend using this successfully? We need to make sure transactions can succeed through this object as well.",
      "revId": "b73d66c541bfb4f45e3f77b08535c8324c6f8386",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fca23edd_7d5cbbaa",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1416371
      },
      "writtenOn": "2020-09-22T21:00:09Z",
      "side": 1,
      "message": "Can we add the te",
      "revId": "b73d66c541bfb4f45e3f77b08535c8324c6f8386",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "95d82a39_917b57fa",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1416371
      },
      "writtenOn": "2020-09-22T21:00:09Z",
      "side": 1,
      "message": "I agree that we want this configuration tested. I could see other parts of the stack making assumptions about remote objects not being in the same process accidentally.\n\nI\u0027m OK with putting this in once we have confirmation from someone (sjc@ or the Keystore team, who wanted this feature) that this patch allows successful intraprocess binder between C++ and Rust, but we should add a test.",
      "parentUuid": "f633470d_5f1b1455",
      "revId": "b73d66c541bfb4f45e3f77b08535c8324c6f8386",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c807e67a_945c7ae7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1208973
      },
      "writtenOn": "2020-09-22T21:29:54Z",
      "side": 1,
      "message": "This works with my very basic hello world example of intraprocess binder with C++ (which fails without either it or aosp/1419759), but I haven\u0027t worked on getting a real example working yet.",
      "parentUuid": "95d82a39_917b57fa",
      "revId": "b73d66c541bfb4f45e3f77b08535c8324c6f8386",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e211eb6e_daebb203",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-09-22T21:31:28Z",
      "side": 1,
      "message": "I think also the ndk backend will need something similar so that if a rust proxy is created first, it can still associate as a remote proxy.",
      "parentUuid": "c807e67a_945c7ae7",
      "revId": "b73d66c541bfb4f45e3f77b08535c8324c6f8386",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dbbc3d48_d80bd488",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1093255
      },
      "writtenOn": "2020-09-22T21:33:56Z",
      "side": 1,
      "message": "I\u0027ll add a simple cross-language test for this. @mmaurer, can we mix Rust into C++ gtests now (i.e. is the build system static lib issue fixed)?\n\nRe: the NDK, would that need to be in the AIDL backend? Users implementing custom code can just ignore the associate failure like we did in Rust, although it might be nice to fix the API so that is clearer.",
      "parentUuid": "c807e67a_945c7ae7",
      "revId": "b73d66c541bfb4f45e3f77b08535c8324c6f8386",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}