{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "64eef978_13525ec7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 12,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-03-04T22:11:45Z",
      "side": 1,
      "message": "are these APIs tested to function anywhere?",
      "range": {
        "startLine": 12,
        "startChar": 6,
        "endLine": 12,
        "endChar": 8
      },
      "revId": "d559f5e08fa2b7aeafb6af13aae9bd305066b356",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4725e9be_c4b45d80",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 12,
      "author": {
        "id": 1380243
      },
      "writtenOn": "2021-03-05T11:48:28Z",
      "side": 1,
      "message": "Yes, in https://cs.android.com/android/platform/superproject/+/master:frameworks/native/libs/binder/rust/tests/integration.rs.",
      "parentUuid": "64eef978_13525ec7",
      "range": {
        "startLine": 12,
        "startChar": 6,
        "endLine": 12,
        "endChar": 8
      },
      "revId": "d559f5e08fa2b7aeafb6af13aae9bd305066b356",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1e31873a_3f9ea97a",
        "filename": "libs/binder/rust/src/lib.rs",
        "patchSetId": 2
      },
      "lineNbr": 126,
      "author": {
        "id": 1416371
      },
      "writtenOn": "2021-03-05T21:08:30Z",
      "side": 1,
      "message": "Exporting DeathRecipient is fine, but I think we were trying to avoid exporting IBinder directly since it gives access to implementation details.\n\nDo you think there\u0027s another less internal place that we could re-expose the `link_to_death` and `unlink_to_death` methods?",
      "revId": "d559f5e08fa2b7aeafb6af13aae9bd305066b356",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fabde6a1_b81b27f5",
        "filename": "libs/binder/rust/src/lib.rs",
        "patchSetId": 2
      },
      "lineNbr": 126,
      "author": {
        "id": 1380243
      },
      "writtenOn": "2021-03-08T12:20:52Z",
      "side": 1,
      "message": "I\u0027m not sure where else it would go. Some of the other methods on `IBinder`, like `is_binder_alive` and `ping_binder` also seems like they should be exposed to clients. And possibly `set_requesting_sid`?\n\nWhat do you actually want to avoid exposing to clients? Just `transact`?",
      "parentUuid": "1e31873a_3f9ea97a",
      "revId": "d559f5e08fa2b7aeafb6af13aae9bd305066b356",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4e7dbfbb_e34c1243",
        "filename": "libs/binder/rust/src/lib.rs",
        "patchSetId": 2
      },
      "lineNbr": 126,
      "author": {
        "id": 1809421
      },
      "writtenOn": "2021-03-08T18:55:19Z",
      "side": 1,
      "message": "We want to avoid exposing transact and the transaction codes \u0026 flags, particularly. We could add wrappers around any methods we want to make public (e.g. link_to_death) to Strong, which will allow easy access for users. Interface already includes `as_binder()`, allowing us to get a raw IBinder object for these wrappers.",
      "parentUuid": "fabde6a1_b81b27f5",
      "revId": "d559f5e08fa2b7aeafb6af13aae9bd305066b356",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aabb46a9_6f6bb406",
        "filename": "libs/binder/rust/src/lib.rs",
        "patchSetId": 2
      },
      "lineNbr": 126,
      "author": {
        "id": 1380243
      },
      "writtenOn": "2021-03-08T20:38:54Z",
      "side": 1,
      "message": "The transaction codes and flags don\u0027t need to be on `IBinder`, as far as I can see: they are just constants, and not overridden by any implementation of `IBinder`. I think that just leaves the `transact` method, which could be split off to a separate trait. I\u0027ve done this now, see what you think.",
      "parentUuid": "4e7dbfbb_e34c1243",
      "revId": "d559f5e08fa2b7aeafb6af13aae9bd305066b356",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "12e5d652_cb1d8648",
        "filename": "libs/binder/rust/src/lib.rs",
        "patchSetId": 2
      },
      "lineNbr": 126,
      "author": {
        "id": 1809421
      },
      "writtenOn": "2021-03-09T17:32:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "aabb46a9_6f6bb406",
      "revId": "d559f5e08fa2b7aeafb6af13aae9bd305066b356",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}