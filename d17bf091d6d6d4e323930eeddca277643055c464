{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "5e38020a_b2456501",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1010103
      },
      "writtenOn": "2022-12-21T15:44:37Z",
      "side": 1,
      "message": "can confirm it solves the bug in question",
      "revId": "d17bf091d6d6d4e323930eeddca277643055c464",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dec0e12d_2b9a71cb",
        "filename": "libs/binder/ndk/ibinder.cpp",
        "patchSetId": 2
      },
      "lineNbr": 105,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2022-12-21T08:11:45Z",
      "side": 1,
      "message": "What does functionality mean here? A new transaction method?",
      "range": {
        "startLine": 104,
        "startChar": 81,
        "endLine": 105,
        "endChar": 71
      },
      "revId": "d17bf091d6d6d4e323930eeddca277643055c464",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "be1e5fc0_305a6e44",
        "filename": "libs/binder/ndk/ibinder.cpp",
        "patchSetId": 2
      },
      "lineNbr": 105,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-12-21T21:18:58Z",
      "side": 1,
      "message": "Updated to be more clear. The restriction is that we shouldn\u0027t add new functionality (whatever that is) by setting configuration on the class object itself. It should be implemented elsewhere.",
      "parentUuid": "dec0e12d_2b9a71cb",
      "range": {
        "startLine": 104,
        "startChar": 81,
        "endLine": 105,
        "endChar": 71
      },
      "revId": "d17bf091d6d6d4e323930eeddca277643055c464",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cb95fbc9_649a86df",
        "filename": "libs/binder/ndk/ibinder.cpp",
        "patchSetId": 2
      },
      "lineNbr": 105,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2022-12-21T23:23:17Z",
      "side": 1,
      "message": "Ok, so \"The functionality should be implemented ... \" is describing what should be done in order for the newly associated class to be in action. I think mentioning about something that isn\u0027t implemented makes the documentation difficult to read. Can we just remove the future-facing statements?",
      "parentUuid": "be1e5fc0_305a6e44",
      "range": {
        "startLine": 104,
        "startChar": 81,
        "endLine": 105,
        "endChar": 71
      },
      "revId": "d17bf091d6d6d4e323930eeddca277643055c464",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "314bb957_39a0469e",
        "filename": "libs/binder/ndk/ibinder.cpp",
        "patchSetId": 2
      },
      "lineNbr": 105,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-12-22T00:58:36Z",
      "side": 1,
      "message": "We could remove them. Though, since this restriction is not obvious and hard to test, and it will appear to work, except in some rare cases, I wanted to call it out specifically. We could improve it, but just as I did a review of the bugs and history of this code in order to support this and the parent change, I would suggest it necessary of anyone modifying this code. We have linker namespaces, which are quite complicated to deal with. For instance, if the API is evolved incorrectly, and some code reads a location in memory according to the setting of the class, and that location is not part of the class object itself, then it could be a security issue. I\u0027m open to improving the documentation here, but I\u0027m more concerned about having the documentation here than keeping it simple.",
      "parentUuid": "cb95fbc9_649a86df",
      "range": {
        "startLine": 104,
        "startChar": 81,
        "endLine": 105,
        "endChar": 71
      },
      "revId": "d17bf091d6d6d4e323930eeddca277643055c464",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e15cb3eb_7711a417",
        "filename": "libs/binder/ndk/ibinder.cpp",
        "patchSetId": 2
      },
      "lineNbr": 105,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2022-12-22T02:28:21Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "314bb957_39a0469e",
      "range": {
        "startLine": 104,
        "startChar": 81,
        "endLine": 105,
        "endChar": 71
      },
      "revId": "d17bf091d6d6d4e323930eeddca277643055c464",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c79ff32d_a8bbe452",
        "filename": "libs/binder/ndk/ibinder.cpp",
        "patchSetId": 2
      },
      "lineNbr": 106,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2022-12-21T08:11:45Z",
      "side": 1,
      "message": "What are these?",
      "range": {
        "startLine": 106,
        "startChar": 32,
        "endLine": 106,
        "endChar": 45
      },
      "revId": "d17bf091d6d6d4e323930eeddca277643055c464",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eee0ce52_dc4260ea",
        "filename": "libs/binder/ndk/ibinder.cpp",
        "patchSetId": 2
      },
      "lineNbr": 106,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-12-21T21:18:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c79ff32d_a8bbe452",
      "range": {
        "startLine": 106,
        "startChar": 32,
        "endLine": 106,
        "endChar": 45
      },
      "revId": "d17bf091d6d6d4e323930eeddca277643055c464",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "48efc700_21faf675",
        "filename": "libs/binder/ndk/ibinder.cpp",
        "patchSetId": 2
      },
      "lineNbr": 152,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2022-12-21T08:11:45Z",
      "side": 1,
      "message": "Not sure I am following correctly. If `this-\u003easABpBinder() !\u003d nullptr` and the descriptors are the same, we will always hit this line. Then everytime we hit the line, `mClazz` will be updated, which to me sounds against what you wrote above: \"If this is an ABpBinder, the first class object becomes the canonical one\".\n\nI think I am terribly wrong here. Please correct me.",
      "range": {
        "startLine": 152,
        "startChar": 4,
        "endLine": 152,
        "endChar": 19
      },
      "revId": "d17bf091d6d6d4e323930eeddca277643055c464",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b2d5b618_4cdb0402",
        "filename": "libs/binder/ndk/ibinder.cpp",
        "patchSetId": 2
      },
      "lineNbr": 152,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-12-21T21:18:58Z",
      "side": 1,
      "message": "Thanks, good catch. I accidentally selected the last one, but it doesn\u0027t matter because they contain the same data. Updated to resolve this anyway. Thanks.",
      "parentUuid": "48efc700_21faf675",
      "range": {
        "startLine": 152,
        "startChar": 4,
        "endLine": 152,
        "endChar": 19
      },
      "revId": "d17bf091d6d6d4e323930eeddca277643055c464",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ba17a7ff_9dc856a0",
        "filename": "libs/binder/ndk/tests/libbinder_ndk_unit_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 344,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2022-12-21T08:11:45Z",
      "side": 1,
      "message": "We allow this just because this doesn\u0027t cause any harm, as long as the descriptor remains unchanged, right?\n\nOther information from AIBinder_class (the on_* functions) is no op for remote object.",
      "range": {
        "startLine": 344,
        "startChar": 0,
        "endLine": 344,
        "endChar": 73
      },
      "revId": "d17bf091d6d6d4e323930eeddca277643055c464",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "245a5a3d_b382c559",
        "filename": "libs/binder/ndk/tests/libbinder_ndk_unit_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 344,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-12-21T21:18:58Z",
      "side": 1,
      "message": "right - this is the overall point of the CL - to allow this (the test failed before)",
      "parentUuid": "ba17a7ff_9dc856a0",
      "range": {
        "startLine": 344,
        "startChar": 0,
        "endLine": 344,
        "endChar": 73
      },
      "revId": "d17bf091d6d6d4e323930eeddca277643055c464",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a0b0dca2_115a60ba",
        "filename": "libs/binder/ndk/tests/libbinder_ndk_unit_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 665,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2022-12-21T08:11:45Z",
      "side": 1,
      "message": "not used?",
      "range": {
        "startLine": 664,
        "startChar": 0,
        "endLine": 665,
        "endChar": 23
      },
      "revId": "d17bf091d6d6d4e323930eeddca277643055c464",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "79147f5d_0ce774bb",
        "filename": "libs/binder/ndk/tests/libbinder_ndk_unit_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 665,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-12-21T21:18:58Z",
      "side": 1,
      "message": "Done, thanks",
      "parentUuid": "a0b0dca2_115a60ba",
      "range": {
        "startLine": 664,
        "startChar": 0,
        "endLine": 665,
        "endChar": 23
      },
      "revId": "d17bf091d6d6d4e323930eeddca277643055c464",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}