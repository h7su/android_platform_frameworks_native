{
  "comments": [
    {
      "key": {
        "uuid": "fa662536_1154370a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1010056
      },
      "writtenOn": "2020-08-19T19:00:02Z",
      "side": 1,
      "message": "Seems like this test has been failing a lot lately, and was flaky before that. Any thoughts about whether to submit this or not? Is there a bug tracking this test failure for cuttlefish?\n\n```\nframeworks/native/services/surfaceflinger/CompositionEngine/tests/OutputTest.cpp:3502: Failure\nValue of: 0 \u003d\u003d mLayers[0].mOutputLayerState.clientCompositionTimestamp\nActual: false\nExpected: true\n```",
      "revId": "d3e75896f98990aaa24b496da10d6a838d58ad00",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "53708e13_d50bf5b1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1267775
      },
      "writtenOn": "2020-08-19T20:05:07Z",
      "side": 1,
      "message": "Lloyd can help",
      "revId": "d3e75896f98990aaa24b496da10d6a838d58ad00",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "31f637e0_12b11cd1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1086703
      },
      "writtenOn": "2020-08-20T01:16:50Z",
      "side": 1,
      "message": "Huh, I was unaware of the failure, and especially not that it was flaky.\n\nIt turns out that the clientCompositionTimestamp member that is being checked is not initialized to zero as the test expects. \n\nOffhand I don\u0027t know if using ASAN garbage-initializes memory -- but that could certainly explain the test failure if so, when it might not fail otherwise.\n\nI\u0027ll upload a fix.",
      "parentUuid": "53708e13_d50bf5b1",
      "revId": "d3e75896f98990aaa24b496da10d6a838d58ad00",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a601639_1ae4a222",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1010056
      },
      "writtenOn": "2020-08-20T01:23:22Z",
      "side": 1,
      "message": "Maybe flaky isn\u0027t the right way to describe it, but it looked like a lot of G-\u003eR-\u003eG transitions in https://android-build.googleplex.com/builds/tests/view?invocationId\u003dI28900005664173628\u0026redirect\u003dhttp://sponge2/a28a7366-5bb3-420e-a567-7fd3dcc6d6ae if I scrolled to the right.\n\nAs for the initialization, Android does do zero-init for uninitialized stack variables by default now. I don\u0027t think that ASan is causing this, because those other test runs are also using `sanitize: false`.",
      "parentUuid": "31f637e0_12b11cd1",
      "revId": "d3e75896f98990aaa24b496da10d6a838d58ad00",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a011fadf_6268d8ff",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1086703
      },
      "writtenOn": "2020-08-20T01:57:28Z",
      "side": 1,
      "message": "Since it won\u0027t make it worse, I\u0027d say go ahead and submit it then.\n\nI\u0027m building to run the test myself with the fix. I\u0027ll cc you on the CL.",
      "revId": "d3e75896f98990aaa24b496da10d6a838d58ad00",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "490a3827_524008d9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1010056
      },
      "writtenOn": "2020-08-21T00:11:43Z",
      "side": 1,
      "message": "Rerunning the presubmits and hoping for all green. :)",
      "revId": "d3e75896f98990aaa24b496da10d6a838d58ad00",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}