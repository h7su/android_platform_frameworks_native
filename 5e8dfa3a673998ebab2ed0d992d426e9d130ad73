{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e327dab7_97d736e6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1809421
      },
      "writtenOn": "2020-12-17T17:56:29Z",
      "side": 1,
      "message": "Without being able to query the AIBinder for its weak ref count, testing this will be hard.",
      "revId": "5e8dfa3a673998ebab2ed0d992d426e9d130ad73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b025a997_19106bdc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-12-17T20:39:14Z",
      "side": 1,
      "message": "Check that the destructor of the associated binder object runs?\n\nWe need tests for all the functionality in libbinder_rs in order to reliably maintain it/develop in Androd. All new code in Android needs to have tests. At a minimum, that should be functional correctness checks for WpAIBinder here (should have been added in parent CL, since that\u0027s when the API was exported, but I don\u0027t want to lose this thread).",
      "parentUuid": "e327dab7_97d736e6",
      "revId": "5e8dfa3a673998ebab2ed0d992d426e9d130ad73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5946fd69_61ec98a8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1809421
      },
      "writtenOn": "2020-12-17T21:04:16Z",
      "side": 1,
      "message": "That destructor should run (and trigger on_destroy) when the last strong ref drops, regardless of weak references. What we really need to know is that the weak count drops when the WpIBinder is dropped in Rust, which we don\u0027t have visibility into from Rust. We could do this with a combined C++ and Rust test, I guess.",
      "parentUuid": "b025a997_19106bdc",
      "revId": "5e8dfa3a673998ebab2ed0d992d426e9d130ad73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8db5a4ce_5efd55a2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-12-17T21:37:45Z",
      "side": 1,
      "message": "- check that the destructor runs\n- try to run (and assert that promoting works)\n\nI mean (beyond that, yeah, I guess you can\u0027t check on the actual underlying weak_ref object, but it\u0027s better to have some tests than nothing)",
      "parentUuid": "5946fd69_61ec98a8",
      "revId": "5e8dfa3a673998ebab2ed0d992d426e9d130ad73",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}