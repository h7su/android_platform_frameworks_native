{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "cd7a7679_a090915d",
        "filename": "libs/binder/tests/binderRpcTestFixture.h",
        "patchSetId": 2
      },
      "lineNbr": 142,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-03-10T22:21:13Z",
      "side": 1,
      "message": "We shouldn\u0027t have ifdefs for two different definitions of a file as well. The error messages for this situation are going to be difficult to understand.\n\nFor instance, could we have a separate type which holds what is in common, or could we include the factory in the trusty tests, but not initialize TLS in the combinations?",
      "range": {
        "startLine": 140,
        "startChar": 0,
        "endLine": 142,
        "endChar": 6
      },
      "revId": "b69a95bd43536e555d9ad0f75858e31a9311f6d2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0aaff723_d59c1135",
        "filename": "libs/binder/tests/binderRpcTestFixture.h",
        "patchSetId": 2
      },
      "lineNbr": 142,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2023-03-11T00:17:29Z",
      "side": 1,
      "message": "I moved the OS-specific code into `newFactory`. I left that function in the common header, but we could just declare it there and move the body into the `.cpp` files.\n\nWe do have one problem there: Trusty doesn\u0027t include the `include_tls` headers, so types like `RpcAuth` and `RpcCertificateVerifier` are not available there. I got away with just removing them from the Trusty definition, but I\u0027m open to alternatives.",
      "parentUuid": "cd7a7679_a090915d",
      "range": {
        "startLine": 140,
        "startChar": 0,
        "endLine": 142,
        "endChar": 6
      },
      "revId": "b69a95bd43536e555d9ad0f75858e31a9311f6d2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8f818536_bb490712",
        "filename": "libs/binder/tests/binderRpcTestFixture.h",
        "patchSetId": 2
      },
      "lineNbr": 142,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-03-11T00:21:33Z",
      "side": 1,
      "message": "I see the dependency structure is already sort of inverted. It would be nicer if we avoid ifdefs - so that compiling the header in either situation provides the hooks to attach arbitrary functionality. Otherwise, you need to validate common code changes even compile with every possible arg.\n\nWe have to use ifdef for the core binder code, due to an inability to change it, but we should avoid it here.",
      "parentUuid": "0aaff723_d59c1135",
      "range": {
        "startLine": 140,
        "startChar": 0,
        "endLine": 142,
        "endChar": 6
      },
      "revId": "b69a95bd43536e555d9ad0f75858e31a9311f6d2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6773f2cc_f96ff172",
        "filename": "libs/binder/tests/binderRpcTestFixture.h",
        "patchSetId": 2
      },
      "lineNbr": 142,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2023-03-11T00:47:07Z",
      "side": 1,
      "message": "The latest version avoids any `#ifdef`s. There is a new static non-virtual wrapper function, but I think LTO might inline that.",
      "parentUuid": "8f818536_bb490712",
      "range": {
        "startLine": 140,
        "startChar": 0,
        "endLine": 142,
        "endChar": 6
      },
      "revId": "b69a95bd43536e555d9ad0f75858e31a9311f6d2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "323496b7_f06d3fc6",
        "filename": "libs/binder/tests/binderRpcTestFixture.h",
        "patchSetId": 2
      },
      "lineNbr": 142,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-03-11T00:57:31Z",
      "side": 1,
      "message": "This now has a function in a header which is defined in two different places, which we\u0027d also like to avoid in general, but it\u0027s okay. Also - newTlsFactory sounds like it\u0027s TLS-specific, you might consider newAndroidFactory. Anyway, the important part of this is done. Feel free to merge and we can focus on other things. Thank you again for looking at this.",
      "parentUuid": "6773f2cc_f96ff172",
      "range": {
        "startLine": 140,
        "startChar": 0,
        "endLine": 142,
        "endChar": 6
      },
      "revId": "b69a95bd43536e555d9ad0f75858e31a9311f6d2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5f97c499_40afffe1",
        "filename": "libs/binder/tests/binderRpcTestFixture.h",
        "patchSetId": 2
      },
      "lineNbr": 142,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2023-03-11T00:58:44Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "323496b7_f06d3fc6",
      "range": {
        "startLine": 140,
        "startChar": 0,
        "endLine": 142,
        "endChar": 6
      },
      "revId": "b69a95bd43536e555d9ad0f75858e31a9311f6d2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}