{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "50975f35_51a4ee67",
        "filename": "cmds/lshal/Lshal.cpp",
        "patchSetId": 3
      },
      "lineNbr": 236,
      "author": {
        "id": 1644679
      },
      "writtenOn": "2024-02-02T01:03:42Z",
      "side": 1,
      "message": "does this mean we will not get the full output from debug if it prematurely ends?",
      "range": {
        "startLine": 235,
        "startChar": 62,
        "endLine": 236,
        "endChar": 38
      },
      "revId": "6064950d653dcdd8e7c0851042d15b21a74ce2b7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "623072f0_72b03555",
        "filename": "cmds/lshal/Lshal.cpp",
        "patchSetId": 3
      },
      "lineNbr": 236,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2024-02-02T01:07:39Z",
      "side": 1,
      "message": "Perhaps \"causing debug information to be truncated\" is a better description?\n\nBasically, the issue is that the PipeRelay thread properly ends (~PipeRelay() is called), but the data it write()\u0027s to output stream is not flushed. Then, main() immediately calls _exit(), causing these data to be lost in the output.",
      "parentUuid": "50975f35_51a4ee67",
      "range": {
        "startLine": 235,
        "startChar": 62,
        "endLine": 236,
        "endChar": 38
      },
      "revId": "6064950d653dcdd8e7c0851042d15b21a74ce2b7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "56e69720_42cf3b8b",
        "filename": "cmds/lshal/Lshal.cpp",
        "patchSetId": 3
      },
      "lineNbr": 236,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2024-02-02T01:10:27Z",
      "side": 1,
      "message": "https://man7.org/linux/man-pages/man2/_exit.2.html says:\n\n```\n       _exit() terminates the calling process \"immediately\".  Any open\n       file descriptors belonging to the process are closed.\n```\n\nI would assume that fd 1 and 2 are flushed upon close(), but it looks like this is not the case.",
      "parentUuid": "623072f0_72b03555",
      "range": {
        "startLine": 235,
        "startChar": 62,
        "endLine": 236,
        "endChar": 38
      },
      "revId": "6064950d653dcdd8e7c0851042d15b21a74ce2b7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "253526f6_c598689c",
        "filename": "cmds/lshal/Lshal.cpp",
        "patchSetId": 3
      },
      "lineNbr": 236,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2024-02-02T01:13:07Z",
      "side": 1,
      "message": "I take that back; close() does not ensures flush(): \n\n\u003e A successful close does not guarantee that the data has been successfully saved to disk, as the kernel defers writes. It is not common for a file system to flush the buffers when the stream is closed.",
      "parentUuid": "56e69720_42cf3b8b",
      "range": {
        "startLine": 235,
        "startChar": 62,
        "endLine": 236,
        "endChar": 38
      },
      "revId": "6064950d653dcdd8e7c0851042d15b21a74ce2b7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}