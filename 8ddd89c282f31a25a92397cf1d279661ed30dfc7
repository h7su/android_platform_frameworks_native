{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "01b8143b_1fd5ae5b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1042276
      },
      "writtenOn": "2023-08-04T21:43:24Z",
      "side": 1,
      "message": "ag/24326119 is the internal change that uses the API (I\u0027m not sure which part of the internal change should be made public)\n\n+Steven and Devin, who I discussed the binder challenge with. Please feel free to focus on the AIDL and how it\u0027s used.  See also the internal change above.",
      "revId": "8ddd89c282f31a25a92397cf1d279661ed30dfc7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "80d6d93f_2c76d8af",
        "filename": "cmds/installd/InstalldNativeService.cpp",
        "patchSetId": 6
      },
      "lineNbr": 3960,
      "author": {
        "id": 1042276
      },
      "writtenOn": "2023-08-04T21:43:24Z",
      "side": 1,
      "message": "Steven, I don\u0027t remember how you suggested me to handle the casting (but I think the IBinder alternative doesn\u0027t make it cleaner).  Is there a cleaner way?\n\nI have another `authToken.get()-\u003erevoke();` below. There\u0027s no particular reason why it\u0027s part of the AIDL.  I\u0027d just like to see what you think.  Thanks!",
      "range": {
        "startLine": 3959,
        "startChar": 8,
        "endLine": 3960,
        "endChar": 82
      },
      "revId": "8ddd89c282f31a25a92397cf1d279661ed30dfc7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "24578509_d70372d9",
        "filename": "cmds/installd/InstalldNativeService.cpp",
        "patchSetId": 6
      },
      "lineNbr": 3960,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-08-04T22:26:28Z",
      "side": 1,
      "message": "This reinterpret_cast here is not memory safe.\n\nYou should use:\n\n    ... token \u003d  android::interface_cast\u003cIFsveritySetupAuthToken\u003e(authToken);\n    if (.. \u003d\u003d nullptr) ...\n\nThen you can static cast to FsveritySetupAuthToken.",
      "parentUuid": "80d6d93f_2c76d8af",
      "range": {
        "startLine": 3959,
        "startChar": 8,
        "endLine": 3960,
        "endChar": 82
      },
      "revId": "8ddd89c282f31a25a92397cf1d279661ed30dfc7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "86ce7458_7e0380a4",
        "filename": "cmds/installd/InstalldNativeService.cpp",
        "patchSetId": 6
      },
      "lineNbr": 3960,
      "author": {
        "id": 1042276
      },
      "writtenOn": "2023-08-04T22:51:18Z",
      "side": 1,
      "message": "authToken isn\u0027t an IBinder though? From code search it seems interface_cast is used to convert from IBinder?",
      "parentUuid": "24578509_d70372d9",
      "range": {
        "startLine": 3959,
        "startChar": 8,
        "endLine": 3960,
        "endChar": 82
      },
      "revId": "8ddd89c282f31a25a92397cf1d279661ed30dfc7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9a741200_79922970",
        "filename": "cmds/installd/InstalldNativeService.cpp",
        "patchSetId": 6
      },
      "lineNbr": 3960,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-08-04T23:02:12Z",
      "side": 1,
      "message": "Oh right, and this is already cast.\n\nSorry, you want:\n\n```\nsp\u003cIBinder\u003e tokenBinder \u003d IInterface::asBinder(token)-\u003elocalBinder();\n```\n\nAIDL will have already called interface_cast. By converting it to a localBinder, you can tell it\u0027s really a local object that you\u0027ve passed to another process (as opposed to a remote object). interface_cast makes sure it\u0027s of the right type.\n\nAt this point, if there is another subclass of IFsveritySetupAuthToken in the process or if some unrelated part of the code sends out an instance, it could be an issue. You could remove that assumption by overriding queryLocalInterface and calling interface_cast again (or by using another structure), but many places do this.",
      "parentUuid": "86ce7458_7e0380a4",
      "range": {
        "startLine": 3959,
        "startChar": 8,
        "endLine": 3960,
        "endChar": 82
      },
      "revId": "8ddd89c282f31a25a92397cf1d279661ed30dfc7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eeff2d7b_acdacf02",
        "filename": "cmds/installd/InstalldNativeService.cpp",
        "patchSetId": 6
      },
      "lineNbr": 3960,
      "author": {
        "id": 1042276
      },
      "writtenOn": "2023-08-05T01:04:29Z",
      "side": 1,
      "message": "Done (IIUC :)",
      "parentUuid": "9a741200_79922970",
      "range": {
        "startLine": 3959,
        "startChar": 8,
        "endLine": 3960,
        "endChar": 82
      },
      "revId": "8ddd89c282f31a25a92397cf1d279661ed30dfc7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}