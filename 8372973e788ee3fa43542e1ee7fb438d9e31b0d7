{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "4315f0d8_8ee4762e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 28
      },
      "lineNbr": 0,
      "author": {
        "id": 1031048
      },
      "writtenOn": "2021-08-05T20:31:46Z",
      "side": 1,
      "message": "Also, are there any tests for this?",
      "revId": "8372973e788ee3fa43542e1ee7fb438d9e31b0d7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7738d587_a105fa56",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 28
      },
      "lineNbr": 0,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-08-05T20:47:25Z",
      "side": 1,
      "message": "https://android-review.googlesource.com/c/platform/frameworks/native/+/1747999",
      "parentUuid": "4315f0d8_8ee4762e",
      "revId": "8372973e788ee3fa43542e1ee7fb438d9e31b0d7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0d80fbe5_4611b91c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 28
      },
      "lineNbr": 0,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-08-05T21:05:26Z",
      "side": 1,
      "message": "CL:1747999",
      "parentUuid": "4315f0d8_8ee4762e",
      "revId": "8372973e788ee3fa43542e1ee7fb438d9e31b0d7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "16f8d5a9_452d54e9",
        "filename": "libs/binder/RpcTransportTls.cpp",
        "patchSetId": 28
      },
      "lineNbr": 56,
      "author": {
        "id": 1031048
      },
      "writtenOn": "2021-08-05T20:26:49Z",
      "side": 1,
      "message": "This doesn\u0027t appear to be used. Plus a KeyPair isn\u0027t an EC_KEY and EVP_PKEY pair. The EC_KEY is just the low-level representation of what\u0027s already in the EVP_PKEY. A \"key pair\" typically refers to a public/private key pair, and OpenSSL\u0027s types already always store the pairs together.",
      "revId": "8372973e788ee3fa43542e1ee7fb438d9e31b0d7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "185a642e_319ed256",
        "filename": "libs/binder/RpcTransportTls.cpp",
        "patchSetId": 28
      },
      "lineNbr": 56,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-08-05T21:05:26Z",
      "side": 1,
      "message": "Oops you are right. I\u0027ll drop it",
      "parentUuid": "16f8d5a9_452d54e9",
      "revId": "8372973e788ee3fa43542e1ee7fb438d9e31b0d7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3058e927_4bfd6349",
        "filename": "libs/binder/RpcTransportTls.cpp",
        "patchSetId": 28
      },
      "lineNbr": 56,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-08-06T07:18:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "185a642e_319ed256",
      "revId": "8372973e788ee3fa43542e1ee7fb438d9e31b0d7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c83e42b8_5c8e51b7",
        "filename": "libs/binder/RpcTransportTls.cpp",
        "patchSetId": 28
      },
      "lineNbr": 84,
      "author": {
        "id": 1031048
      },
      "writtenOn": "2021-08-05T20:26:49Z",
      "side": 1,
      "message": "Nit: This function and X509_get_notAfter aren\u0027t const-correct. Use X509_getm_notBefore and X509_getm_notAfter if you want the mutable ones.\n\n(OpenSSL was very inconsistent about whether they wanted to do the getm thing. E.g. there\u0027s no X509_getm_serialNumber. I\u0027ve no idea why.)",
      "range": {
        "startLine": 84,
        "startChar": 45,
        "endLine": 84,
        "endChar": 63
      },
      "revId": "8372973e788ee3fa43542e1ee7fb438d9e31b0d7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6b909b72_f9ba112f",
        "filename": "libs/binder/RpcTransportTls.cpp",
        "patchSetId": 28
      },
      "lineNbr": 84,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-08-05T21:05:26Z",
      "side": 1,
      "message": "Ack, will do",
      "parentUuid": "c83e42b8_5c8e51b7",
      "range": {
        "startLine": 84,
        "startChar": 45,
        "endLine": 84,
        "endChar": 63
      },
      "revId": "8372973e788ee3fa43542e1ee7fb438d9e31b0d7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6671dc0b_0a479c4e",
        "filename": "libs/binder/RpcTransportTls.cpp",
        "patchSetId": 28
      },
      "lineNbr": 84,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-08-06T07:18:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6b909b72_f9ba112f",
      "range": {
        "startLine": 84,
        "startChar": 45,
        "endLine": 84,
        "endChar": 63
      },
      "revId": "8372973e788ee3fa43542e1ee7fb438d9e31b0d7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0158e53c_18eb5c46",
        "filename": "libs/binder/RpcTransportTls.cpp",
        "patchSetId": 28
      },
      "lineNbr": 141,
      "author": {
        "id": 1031048
      },
      "writtenOn": "2021-08-05T20:26:49Z",
      "side": 1,
      "message": "This will fold most errors into a generic \"SSL\", which means we won\u0027t be able to help you when things go wrong. Ideally also log the error queue. See \u003copenssl/err.h\u003e. Ditto throughout.",
      "revId": "8372973e788ee3fa43542e1ee7fb438d9e31b0d7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c9e2f77e_5ea4a03d",
        "filename": "libs/binder/RpcTransportTls.cpp",
        "patchSetId": 28
      },
      "lineNbr": 141,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-08-05T21:05:26Z",
      "side": 1,
      "message": "Thanks for the suggestion!\n\nThough, I am not familiar with libssl enough to know how to log the error queue. After I read the documentation, here\u0027s what I come up with:\n\n```\nif (ret \u003c\u003d 0) {\n  std::stringstream ss;\n  int err \u003d SSL_get_error(mSsl.get(), ret);\n  ss \u003c\u003c \"SSL_write(): \" \u003c\u003c SSL_error_description(err) \u003c\u003c \": \";\n  ERR_print_errors_cb([](const char* str, size_t len, void* ctx) {\n    auto ss \u003d (std::stringstream*)ctx;\n    (*ss) \u003c\u003c std::string_view(str, len) \u003c\u003c \"\\n\";\n    return 1; // continue\n  }, \u0026ss);\n  return Error() \u003c\u003c ss.str();\n}\n```\n\nIs this what you mean by logging the error queue?",
      "parentUuid": "0158e53c_18eb5c46",
      "revId": "8372973e788ee3fa43542e1ee7fb438d9e31b0d7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "73aeaa4d_7df61580",
        "filename": "libs/binder/RpcTransportTls.cpp",
        "patchSetId": 28
      },
      "lineNbr": 141,
      "author": {
        "id": 1019036
      },
      "writtenOn": "2021-08-09T18:56:09Z",
      "side": 1,
      "message": "Yes, although probably best as a helper function.\n\n(Note that any SSL_ function that takes may have put things on the error queue and, if you don\u0027t dump it, you\u0027re supposed to call ERR_clear_error. Otherwise entries from a different failing can end up getting logged here. Yes, this is a terrible APIP.)",
      "parentUuid": "c9e2f77e_5ea4a03d",
      "revId": "8372973e788ee3fa43542e1ee7fb438d9e31b0d7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a26bf5cd_68280dbe",
        "filename": "libs/binder/RpcTransportTls.cpp",
        "patchSetId": 28
      },
      "lineNbr": 168,
      "author": {
        "id": 1031048
      },
      "writtenOn": "2021-08-05T20:26:49Z",
      "side": 1,
      "message": "Is this the right return value? Seems it would convert -1 into a size_t and then report 0xffff...ffff bytes were read.",
      "revId": "8372973e788ee3fa43542e1ee7fb438d9e31b0d7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9f2fc1f4_6c94b807",
        "filename": "libs/binder/RpcTransportTls.cpp",
        "patchSetId": 28
      },
      "lineNbr": 168,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-08-05T21:05:26Z",
      "side": 1,
      "message": "Ooops, thanks for catching! I\u0027ll fix this",
      "parentUuid": "a26bf5cd_68280dbe",
      "revId": "8372973e788ee3fa43542e1ee7fb438d9e31b0d7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "be827c82_b6c3a7d3",
        "filename": "libs/binder/RpcTransportTls.cpp",
        "patchSetId": 28
      },
      "lineNbr": 168,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-08-06T07:18:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9f2fc1f4_6c94b807",
      "revId": "8372973e788ee3fa43542e1ee7fb438d9e31b0d7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b6a22e01_0f138684",
        "filename": "libs/binder/RpcTransportTls.cpp",
        "patchSetId": 28
      },
      "lineNbr": 177,
      "author": {
        "id": 1031048
      },
      "writtenOn": "2021-08-05T21:45:01Z",
      "side": 1,
      "message": "Actually, there\u0027s another bug here. It is possible for the underlying socket to not have data available, but the SSL object inside has data buffered. This code will report the wrong thing.\n\nThat means you should just delete this poll loop because it isn\u0027t doing anything useful. Simply call SSL_peek() and let it block or not block depending on whether the socket is blocking. Note, however, this means your peek() API is a blocking one when the underlying socket is blocking.",
      "revId": "8372973e788ee3fa43542e1ee7fb438d9e31b0d7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5799aeba_19564128",
        "filename": "libs/binder/RpcTransportTls.cpp",
        "patchSetId": 28
      },
      "lineNbr": 177,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-08-05T23:15:17Z",
      "side": 1,
      "message": "Ack. After b/195683291 is fixed (CLs already uploaded), I\u0027ll delete this API altogether and just use recv() directly.",
      "parentUuid": "b6a22e01_0f138684",
      "revId": "8372973e788ee3fa43542e1ee7fb438d9e31b0d7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "adc2e97f_ee6bf479",
        "filename": "libs/binder/RpcTransportTls.cpp",
        "patchSetId": 28
      },
      "lineNbr": 177,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-08-06T07:18:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5799aeba_19564128",
      "revId": "8372973e788ee3fa43542e1ee7fb438d9e31b0d7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "97da40c3_6ec106e5",
        "filename": "libs/binder/RpcTransportTls.cpp",
        "patchSetId": 28
      },
      "lineNbr": 179,
      "author": {
        "id": 1031048
      },
      "writtenOn": "2021-08-05T20:26:49Z",
      "side": 1,
      "message": "Is the socket blocking or non-blocking? If it\u0027s blocking, the poll in front won\u0027t guarantee this function works. poll will tell you whether there is *any* data available on the socket. SSL_peek will try to consume an entire record.\n\nThat is, if the other side sends you half a record, poll will say POLLIN. Then this will call SSL_peek, which will attempt to consume the record. If the socket is blocking, we\u0027ll just block until we get the record back.\n\nIf the socket is non-blocking, you\u0027re missing handling of SSL_ERROR_WANT_WRITE, etc.",
      "revId": "8372973e788ee3fa43542e1ee7fb438d9e31b0d7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "74ee3092_bc2fa1ab",
        "filename": "libs/binder/RpcTransportTls.cpp",
        "patchSetId": 28
      },
      "lineNbr": 179,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-08-05T21:05:26Z",
      "side": 1,
      "message": "This is blocking for now, but according to your text, it should be non-blocking. Filed b/195683291 to track this.\n\nAs for handling of SSL_ERROR_WANT_*, it is in CL:1786591. Looks like you already see that CL. Let\u0027s comment there.",
      "parentUuid": "97da40c3_6ec106e5",
      "revId": "8372973e788ee3fa43542e1ee7fb438d9e31b0d7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7808422d_f90d827c",
        "filename": "libs/binder/RpcTransportTls.cpp",
        "patchSetId": 28
      },
      "lineNbr": 179,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-08-05T21:05:26Z",
      "side": 1,
      "message": "It is blocking as of now, but it may be non-blocking in the future.\n\nBut thanks for the suggestion. This means I\u0027ll have to change the socket to non-blocking. Filed b/195683291 to keep track.\n\nAs for handling of SSL_ERROR_WANT_READ, please see CL:1786591. Do I need to handle SSL_ERROR_WANT_WRITE even though this is reading things?",
      "revId": "8372973e788ee3fa43542e1ee7fb438d9e31b0d7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "70804563_720b7428",
        "filename": "libs/binder/RpcTransportTls.cpp",
        "patchSetId": 28
      },
      "lineNbr": 179,
      "author": {
        "id": 1031048
      },
      "writtenOn": "2021-08-05T21:45:01Z",
      "side": 1,
      "message": "We WANT_READ vs WANT_WRITE, let\u0027s discuss this in the other CL. I expect we\u0027ll need to go through many iterations before the non-blocking handling is right and it\u0027ll be confusing to have it spread over so many CLs.",
      "parentUuid": "7808422d_f90d827c",
      "revId": "8372973e788ee3fa43542e1ee7fb438d9e31b0d7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d8b81115_7f4338b6",
        "filename": "libs/binder/RpcTransportTls.cpp",
        "patchSetId": 28
      },
      "lineNbr": 179,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-08-06T07:18:51Z",
      "side": 1,
      "message": "This is now non-blocking. I deleted the poll and also checked for both WANT_WRITE and WANT_READ.",
      "parentUuid": "74ee3092_bc2fa1ab",
      "revId": "8372973e788ee3fa43542e1ee7fb438d9e31b0d7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "26757bef_e4d6feca",
        "filename": "libs/binder/RpcTransportTls.cpp",
        "patchSetId": 28
      },
      "lineNbr": 179,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-08-06T07:18:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "70804563_720b7428",
      "revId": "8372973e788ee3fa43542e1ee7fb438d9e31b0d7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fb411590_f8d5f441",
        "filename": "libs/binder/RpcTransportTls.cpp",
        "patchSetId": 28
      },
      "lineNbr": 230,
      "author": {
        "id": 1031048
      },
      "writtenOn": "2021-08-05T20:26:49Z",
      "side": 1,
      "message": "What is your authentication story here? TLS is meaningless without authentication.\n\nOn the client, you\u0027ll be calling into BoringSSL\u0027s built-in certificate verifier with no trust anchors and then ignoring the result. We may break that in the future because those defaults are terrible. If that\u0027s explicitly what you want, you need to configure this, but that\u0027s also insecure. If that\u0027s not what you want, you need to configure a certificate verification story.\n\nOn the server, you\u0027ll be authenticating with some throwaway self-signed certificate.",
      "revId": "8372973e788ee3fa43542e1ee7fb438d9e31b0d7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "56f46b14_a0fc8f74",
        "filename": "libs/binder/RpcTransportTls.cpp",
        "patchSetId": 28
      },
      "lineNbr": 230,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-08-05T21:05:26Z",
      "side": 1,
      "message": "Authentication isn\u0027t implemented as of now; this is tracked in b/195166979 (See below).",
      "parentUuid": "fb411590_f8d5f441",
      "revId": "8372973e788ee3fa43542e1ee7fb438d9e31b0d7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fbe05e89_13139da8",
        "filename": "libs/binder/RpcTransportTls.cpp",
        "patchSetId": 28
      },
      "lineNbr": 281,
      "author": {
        "id": 1031048
      },
      "writtenOn": "2021-08-05T20:26:49Z",
      "side": 1,
      "message": "There is no need to do this connectOrAccept thing. Calling SSL_connect/SSL_accept is just shorthand for:\n\nSSL_set_connect_state or SSL_set_accept_state, which configures whether this is a client or server. Then calling SSL_do_handshake to drive the handshake. So, when you set up a client or server connection, call the right set_foo_state function. Then connectOrAccept just unconditionally calls SSL_do_handshake.",
      "revId": "8372973e788ee3fa43542e1ee7fb438d9e31b0d7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d7aa7e45_510ebc94",
        "filename": "libs/binder/RpcTransportTls.cpp",
        "patchSetId": 28
      },
      "lineNbr": 281,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-08-05T21:05:26Z",
      "side": 1,
      "message": "Ack, will do",
      "parentUuid": "fbe05e89_13139da8",
      "revId": "8372973e788ee3fa43542e1ee7fb438d9e31b0d7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e8e309a0_0656fdc2",
        "filename": "libs/binder/RpcTransportTls.cpp",
        "patchSetId": 28
      },
      "lineNbr": 281,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-08-06T07:18:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d7aa7e45_510ebc94",
      "revId": "8372973e788ee3fa43542e1ee7fb438d9e31b0d7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}