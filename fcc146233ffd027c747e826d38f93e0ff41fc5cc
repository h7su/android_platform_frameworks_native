{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "407571f2_4f467b11",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-08-29T21:03:24Z",
      "side": 1,
      "message": "Known failures b/242803855 and b/201545116",
      "revId": "fcc146233ffd027c747e826d38f93e0ff41fc5cc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7746c94f_6ec3b951",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-08-29T22:39:27Z",
      "side": 1,
      "message": "hey - looking for NDK-API-Review. This doesn\u0027t actually add an NDK API, but it touches the mapping file",
      "revId": "fcc146233ffd027c747e826d38f93e0ff41fc5cc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ef7449c3_433253a7",
        "filename": "libs/binder/ndk/libbinder.cpp",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 1010050
      },
      "writtenOn": "2022-08-29T22:58:11Z",
      "side": 1,
      "message": "would be good to mark the argument as non-null if you\u0027re going to crash on nullptr.",
      "revId": "fcc146233ffd027c747e826d38f93e0ff41fc5cc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1495c665_9faa2d4b",
        "filename": "libs/binder/ndk/libbinder.cpp",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-08-30T23:11:35Z",
      "side": 1,
      "message": "This is somewhat of a common (anti-)pattern in libbinder_ndk. Do you mean in a comment on the header? There isn\u0027t some new C++ annotation I should be aware of? I added the comment.",
      "parentUuid": "ef7449c3_433253a7",
      "revId": "fcc146233ffd027c747e826d38f93e0ff41fc5cc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8a5d1c46_33a803ce",
        "filename": "libs/binder/ndk/libbinder.cpp",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 1010050
      },
      "writtenOn": "2022-08-30T23:29:23Z",
      "side": 1,
      "message": "See for example: https://source.corp.google.com/android/frameworks/native/libs/nativewindow/include/android/hardware_buffer.h;rcl\u003d415544059b92853cf4cfd3af1488e07c348b3ed0;l\u003d376\n\n    int AHardwareBuffer_allocate(const AHardwareBuffer_Desc* _Nonnull desc,",
      "parentUuid": "1495c665_9faa2d4b",
      "revId": "fcc146233ffd027c747e826d38f93e0ff41fc5cc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cd5f9e14_2f4cc040",
        "filename": "libs/binder/ndk/libbinder.cpp",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 1010103
      },
      "writtenOn": "2022-08-31T15:23:12Z",
      "side": 1,
      "message": "platform API so less concerned about annotations but _Nonnull and _Nullable are the relevant Clang annotations we try to also use on NDK methods, see https://clang.llvm.org/docs/AttributeReference.html#nullability-attributes for the docs on them",
      "parentUuid": "8a5d1c46_33a803ce",
      "revId": "fcc146233ffd027c747e826d38f93e0ff41fc5cc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "27a5938b_da68b5da",
        "filename": "libs/binder/ndk/libbinder.cpp",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-08-31T18:42:32Z",
      "side": 1,
      "message": "Are you kidding me!? I\u0027ve searched for this for years, including again when Eddie made the comment. How did I not find this? Ummmm. Let me follow-up, across this API surface and elsewhere. This is great. One of the major gaps in C++. Thank you!",
      "parentUuid": "cd5f9e14_2f4cc040",
      "revId": "fcc146233ffd027c747e826d38f93e0ff41fc5cc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "15dd3a05_f4b5169d",
        "filename": "libs/binder/ndk/libbinder.cpp",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-08-31T19:12:54Z",
      "side": 1,
      "message": "clang\u0027s a bit annoying with having some functions in a header annotated and others not, so you probably will want to do all or nothing.\n\nbionic also only uses _Nullable because we\u0027ve had bad experiences with compilers seeing _Nonnull as an excuse to eliminate null checks _inside_ the implementation (where our aim was just to have compile-time _as well as_ runtime checking).",
      "parentUuid": "27a5938b_da68b5da",
      "revId": "fcc146233ffd027c747e826d38f93e0ff41fc5cc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "019cd315_64acc419",
        "filename": "libs/binder/ndk/libbinder.cpp",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2022-08-31T20:16:47Z",
      "side": 1,
      "message": "\u003e bionic also only uses _Nullable because we\u0027ve had bad experiences with compilers seeing _Nonnull as an excuse to eliminate null checks _inside_ the implementation\n\nafaik this applies to `__attribute__((nonnull))`, but not `_Nonnull`. Maybe that\u0027s changed?",
      "parentUuid": "15dd3a05_f4b5169d",
      "revId": "fcc146233ffd027c747e826d38f93e0ff41fc5cc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b8a915f3_0605510b",
        "filename": "libs/binder/ndk/libbinder.cpp",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-08-31T20:32:03Z",
      "side": 1,
      "message": "(i couldn\u0027t remember whether or not that was true, and since i don\u0027t have concrete examples of having used it in bionic, i wasn\u0027t prepared to make the claim. but a solid \"maybe\", and definitely a good point that you _really_ don\u0027t want to use the attributes --- definitely use these instead.)",
      "parentUuid": "019cd315_64acc419",
      "revId": "fcc146233ffd027c747e826d38f93e0ff41fc5cc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0beb1610_25d34d23",
        "filename": "libs/binder/ndk/libbinder.cpp",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-09-01T02:36:36Z",
      "side": 1,
      "message": "Thanks for the heads up - will check. What I care about is the compile time error if the compiler knows something is null but is being passed to a function that just can\u0027t take it anymore. The more permissive type nullable, the only error the compiler could give based on this is if you have an extra explicit null check, which as you say, you do want anyway ðŸ˜Š",
      "parentUuid": "b8a915f3_0605510b",
      "revId": "fcc146233ffd027c747e826d38f93e0ff41fc5cc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}