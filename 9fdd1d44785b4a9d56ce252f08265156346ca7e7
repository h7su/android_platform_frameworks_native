{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "129fb95d_eff62868",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1869395
      },
      "writtenOn": "2021-12-20T15:13:06Z",
      "side": 1,
      "message": "RFC: Hi Steven, this is still a quick draft. However, I would appreciate some early comments, specially on:\n * Is IPCThreadSate the appropriate area to add this support?\n * Is after a failure to talkWithDriver a good place to pull the error?\n * It seems I need to whitelist this ioctl in somewhere in a selinux policy file?\n\nNote: I\u0027ll add some tests along with the patch later on today.",
      "revId": "9fdd1d44785b4a9d56ce252f08265156346ca7e7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0b1895a0_1c656204",
        "filename": "libs/binder/IPCThreadState.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1457,
      "author": {
        "id": 1869395
      },
      "writtenOn": "2021-12-20T15:15:59Z",
      "side": 1,
      "message": "This needs to be resolved before merge. I suppose we want to add some generic api to determine whether a particular feature is enabled or not. So, Steven do you have any thoughts on this?",
      "range": {
        "startLine": 1457,
        "startChar": 7,
        "endLine": 1457,
        "endChar": 11
      },
      "revId": "9fdd1d44785b4a9d56ce252f08265156346ca7e7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d97807bc_9069c5a6",
        "filename": "libs/binder/IPCThreadState.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1457,
      "author": {
        "id": 1869395
      },
      "writtenOn": "2021-12-21T21:42:48Z",
      "side": 1,
      "message": "I pulled this into a separate routine. However, there is still the question of whether we want to cache the features enabled (where?) as opposed to reading the files every time.",
      "parentUuid": "0b1895a0_1c656204",
      "range": {
        "startLine": 1457,
        "startChar": 7,
        "endLine": 1457,
        "endChar": 11
      },
      "revId": "9fdd1d44785b4a9d56ce252f08265156346ca7e7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b8476405_2abf1996",
        "filename": "libs/binder/IPCThreadState.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1457,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-01-24T17:54:53Z",
      "side": 1,
      "message": "This was b/191910201, right?",
      "parentUuid": "d97807bc_9069c5a6",
      "range": {
        "startLine": 1457,
        "startChar": 7,
        "endLine": 1457,
        "endChar": 11
      },
      "revId": "9fdd1d44785b4a9d56ce252f08265156346ca7e7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad9ebfc0_93e0f7da",
        "filename": "libs/binder/IPCThreadState.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1457,
      "author": {
        "id": 1869395
      },
      "writtenOn": "2022-01-24T18:43:36Z",
      "side": 1,
      "message": "Yes. The contents (1/0) of these \"binder-feature\" files are not dynamic (as of now). So my note here was that maybe we want to store these flags somewhere within userspace binder as opposed to be reading the files over and over again.",
      "parentUuid": "b8476405_2abf1996",
      "range": {
        "startLine": 1457,
        "startChar": 7,
        "endLine": 1457,
        "endChar": 11
      },
      "revId": "9fdd1d44785b4a9d56ce252f08265156346ca7e7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eede2037_916809f8",
        "filename": "libs/binder/IPCThreadState.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1457,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-01-24T23:04:49Z",
      "side": 1,
      "message": "Yes, agreed. We should do this when we initialize the driver (we already have one failed ioctl on old devices for the last feature, so we can have it for this instead)",
      "parentUuid": "ad9ebfc0_93e0f7da",
      "range": {
        "startLine": 1457,
        "startChar": 7,
        "endLine": 1457,
        "endChar": 11
      },
      "revId": "9fdd1d44785b4a9d56ce252f08265156346ca7e7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}