{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "85e3be73_44845d6b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-03-22T22:53:31Z",
      "side": 1,
      "message": "I would like to disambiguate this as well, by tracking the state. It would be needed to add a waitForShutdown API.",
      "revId": "06add175b09d4d0c42857433966c9d5e345d1ea4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2b96769f_636b62c1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1135107
      },
      "writtenOn": "2023-03-23T16:28:15Z",
      "side": 1,
      "message": "I was hoping for the change to go other way (supporting shutdown-before-join). Why to limit this API this way?\n\nOtherwise, if I \"change my mind\" before publishing the service, I have to spin out a separate thread to join before running shutdown - because there\u0027s no \"detach\" method next to \"join\".",
      "parentUuid": "85e3be73_44845d6b",
      "revId": "06add175b09d4d0c42857433966c9d5e345d1ea4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c559ced0_7d80dee0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1644679
      },
      "writtenOn": "2023-03-23T16:33:41Z",
      "side": 1,
      "message": "What would be done between creating the RpcServer and joining that would cause us to change our mind?\nAnd what do we need to shutdown if we haven\u0027t joined or started the server yet?",
      "parentUuid": "2b96769f_636b62c1",
      "revId": "06add175b09d4d0c42857433966c9d5e345d1ea4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ec91fd6a_a8bdca32",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1135107
      },
      "writtenOn": "2023-03-23T16:41:57Z",
      "side": 1,
      "message": "For the latter: the server starts before join (in my tests, I do everything in the same thread and clearly the server answers), so shutting down is necessary to close the socket.\n\nFor the former: we\u0027re building a native lifecycle framework that wraps up IPC/RPC service lifecycle under the hood. Killing the service early may happen and I don\u0027t see a need to restrict API against that.",
      "parentUuid": "c559ced0_7d80dee0",
      "revId": "06add175b09d4d0c42857433966c9d5e345d1ea4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9237fab1_1617698c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-03-28T17:29:09Z",
      "side": 1,
      "message": "\u003e Otherwise, if I \"change my mind\" before publishing the service, I have to spin out a separate thread to join before running shutdown - because there\u0027s no \"detach\" method next to \"join\".\n\n\nWell, in this case, you shouldn\u0027t have to call shutdown because it\u0027s not started?",
      "parentUuid": "ec91fd6a_a8bdca32",
      "revId": "06add175b09d4d0c42857433966c9d5e345d1ea4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1dba3698_434a4786",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1135107
      },
      "writtenOn": "2023-03-28T19:41:53Z",
      "side": 1,
      "message": "Not quite: it\u0027s somewhat started and holds onto the socket. Just not joined.\n\nAnd the destructor calls shutdown, doesn\u0027t it? So if you don\u0027t join it will crash eventually.",
      "parentUuid": "9237fab1_1617698c",
      "revId": "06add175b09d4d0c42857433966c9d5e345d1ea4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "62719437_e6192946",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1644679
      },
      "writtenOn": "2023-03-28T22:27:08Z",
      "side": 1,
      "message": "other unrelated build failures/test failures. Should be safe but I\u0027ll rerun to make sure I\u0027m not breaking builds/going blind.",
      "revId": "06add175b09d4d0c42857433966c9d5e345d1ea4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}