{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a469a6f0_aab2f2fb",
        "filename": "libs/binder/Binder.cpp",
        "patchSetId": 2
      },
      "lineNbr": 296,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2022-03-10T05:03:41Z",
      "side": 1,
      "message": "Can\u0027t Trusty have this macro?",
      "range": {
        "startLine": 294,
        "startChar": 0,
        "endLine": 296,
        "endChar": 6
      },
      "revId": "5edbcd51e43de5af7bcf9c8d92c0568317d7e4b2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "507bac0d_dca433c9",
        "filename": "libs/binder/Binder.cpp",
        "patchSetId": 2
      },
      "lineNbr": 296,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2022-03-10T05:23:37Z",
      "side": 1,
      "message": "It definitely could, it\u0027s that all the other macros are in log/log.h and this one is in android-base/logging.h and I haven\u0027t written that one for Trusty yet.",
      "parentUuid": "a469a6f0_aab2f2fb",
      "range": {
        "startLine": 294,
        "startChar": 0,
        "endLine": 296,
        "endChar": 6
      },
      "revId": "5edbcd51e43de5af7bcf9c8d92c0568317d7e4b2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2e600865_d3504a2c",
        "filename": "libs/binder/BpBinder.cpp",
        "patchSetId": 2
      },
      "lineNbr": 307,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2022-03-10T05:03:41Z",
      "side": 1,
      "message": "This as well. Can\u0027t Trusty have this macro (it should be fine if it\u0027s implemented as a no-op)?",
      "range": {
        "startLine": 307,
        "startChar": 16,
        "endLine": 307,
        "endChar": 21
      },
      "revId": "5edbcd51e43de5af7bcf9c8d92c0568317d7e4b2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a94cfda1_d77c7d6a",
        "filename": "libs/binder/BpBinder.cpp",
        "patchSetId": 2
      },
      "lineNbr": 307,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2022-03-10T05:23:37Z",
      "side": 1,
      "message": "The macro was fine, String8 or getInterfaceDescriptor were the problem (don\u0027t remember which). I\u0027m trying to get rid of String8 anyway.",
      "parentUuid": "2e600865_d3504a2c",
      "range": {
        "startLine": 307,
        "startChar": 16,
        "endLine": 307,
        "endChar": 21
      },
      "revId": "5edbcd51e43de5af7bcf9c8d92c0568317d7e4b2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f19b7959_cf0e58da",
        "filename": "libs/binder/Parcel.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1634,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2022-03-10T05:03:41Z",
      "side": 1,
      "message": "Why is this change required?",
      "range": {
        "startLine": 1634,
        "startChar": 4,
        "endLine": 1634,
        "endChar": 48
      },
      "revId": "5edbcd51e43de5af7bcf9c8d92c0568317d7e4b2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a9cd6f61_883f1723",
        "filename": "libs/binder/Parcel.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1634,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2022-03-10T05:23:37Z",
      "side": 1,
      "message": "Pointer alignment violation reported by UBSan (mData+mDataPos is not aligned for a T*). I don\u0027t remember exactly where or why it was happening, I can look into it.",
      "parentUuid": "f19b7959_cf0e58da",
      "range": {
        "startLine": 1634,
        "startChar": 4,
        "endLine": 1634,
        "endChar": 48
      },
      "revId": "5edbcd51e43de5af7bcf9c8d92c0568317d7e4b2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "accc9d95_22862a44",
        "filename": "libs/binder/Parcel.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1634,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2022-03-10T05:50:01Z",
      "side": 1,
      "message": "I see, but this code is not equivalent to the previous one in case when T (or any member of it) has a copy assignment operator defined.",
      "parentUuid": "a9cd6f61_883f1723",
      "range": {
        "startLine": 1634,
        "startChar": 4,
        "endLine": 1634,
        "endChar": 48
      },
      "revId": "5edbcd51e43de5af7bcf9c8d92c0568317d7e4b2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "33a359ae_b23be37e",
        "filename": "libs/binder/Parcel.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1634,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2022-03-10T05:57:57Z",
      "side": 1,
      "message": "Hmmm good point. In that case, that operator would take a T* as this and the alignment check would still fail (I don\u0027t remember exactly if it fails on the cast or the later dereference). I wonder if there is any way to avoid that UB, otherwise I\u0027ll have to disable the pointer alignment sanitizer for this function.",
      "parentUuid": "accc9d95_22862a44",
      "range": {
        "startLine": 1634,
        "startChar": 4,
        "endLine": 1634,
        "endChar": 48
      },
      "revId": "5edbcd51e43de5af7bcf9c8d92c0568317d7e4b2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d870d608_babde005",
        "filename": "libs/binder/Parcel.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1634,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2022-03-10T06:08:33Z",
      "side": 1,
      "message": "I am +1 on disabling the sanitizer here.",
      "parentUuid": "33a359ae_b23be37e",
      "range": {
        "startLine": 1634,
        "startChar": 4,
        "endLine": 1634,
        "endChar": 48
      },
      "revId": "5edbcd51e43de5af7bcf9c8d92c0568317d7e4b2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4bc9e913_6c350324",
        "filename": "libs/binder/Parcel.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1634,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2022-03-11T06:36:21Z",
      "side": 1,
      "message": "I had this idea of fixing this using is_trivially_copyable_v, but it turns out this isn\u0027t needed because it\u0027s not triggering UBSan anymore (probably was a bug during earlier development).",
      "parentUuid": "d870d608_babde005",
      "range": {
        "startLine": 1634,
        "startChar": 4,
        "endLine": 1634,
        "endChar": 48
      },
      "revId": "5edbcd51e43de5af7bcf9c8d92c0568317d7e4b2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}