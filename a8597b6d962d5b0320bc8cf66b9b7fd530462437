{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "297346f8_e9904f34",
        "filename": "libs/binder/tests/binderRpcTestFixture.h",
        "patchSetId": 69
      },
      "lineNbr": 45,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-12-07T00:44:10Z",
      "side": 1,
      "message": "is there a way to reset them?",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 45,
        "endChar": 39
      },
      "revId": "a8597b6d962d5b0320bc8cf66b9b7fd530462437",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b6c73d4_603fe098",
        "filename": "libs/binder/tests/binderRpcTestFixture.h",
        "patchSetId": 69
      },
      "lineNbr": 45,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2022-12-07T06:17:54Z",
      "side": 1,
      "message": "Simple solution: we could mark them restart-on-exit and make `MyBinderRpcTestTrusty::scheduleShutdown` call `exit(EXIT_SUCCESS)` (and maybe `die` too, unless we want something louder). That\u0027s not the cleanest solution but it should work.\n\nMore complex solution: try to stop the event loop by removing the listening port from the handle set passed to `wait`, which would cause it to return `ERR_NOT_FOUND`. The tipc library doesn\u0027t have an API to remove the port, so I\u0027d need to add it.\n\nWdyt about these approaches?",
      "parentUuid": "297346f8_e9904f34",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 45,
        "endChar": 39
      },
      "revId": "a8597b6d962d5b0320bc8cf66b9b7fd530462437",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9331c964_b43ebfe7",
        "filename": "libs/binder/tests/binderRpcTestFixture.h",
        "patchSetId": 69
      },
      "lineNbr": 45,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-12-07T18:19:27Z",
      "side": 1,
      "message": "I think even the easy suggestion here would make debugging and understanding test failures easier (because you won\u0027t have cascading failures, if the restart mechanism works appropriately), and importantly it will increase coverage. Let\u0027s do it?",
      "parentUuid": "9b6c73d4_603fe098",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 45,
        "endChar": 39
      },
      "revId": "a8597b6d962d5b0320bc8cf66b9b7fd530462437",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "15e17849_1f340696",
        "filename": "libs/binder/tests/binderRpcUniversalTests.cpp",
        "patchSetId": 69
      },
      "lineNbr": 158,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-12-07T00:44:10Z",
      "side": 1,
      "message": "hahaha - ummm - this was hitting the limit? Do we have other tests which test the large size on normal RPC binder?\n\nMaybe - \u0027TIPC ? 512 : 4096\u0027?",
      "range": {
        "startLine": 158,
        "startChar": 37,
        "endLine": 158,
        "endChar": 40
      },
      "revId": "a8597b6d962d5b0320bc8cf66b9b7fd530462437",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f30d5bd9_d1eb2114",
        "filename": "libs/binder/tests/binderRpcUniversalTests.cpp",
        "patchSetId": 69
      },
      "lineNbr": 158,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2022-12-07T06:17:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "15e17849_1f340696",
      "range": {
        "startLine": 158,
        "startChar": 37,
        "endLine": 158,
        "endChar": 40
      },
      "revId": "a8597b6d962d5b0320bc8cf66b9b7fd530462437",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}