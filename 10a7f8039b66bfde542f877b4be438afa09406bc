{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f9fc6252_b8acff8d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2021-06-11T00:43:47Z",
      "side": 1,
      "message": "Have you considered using uuid-v1 (or v2) which is time-based? It\u0027s guaranteed to be unique, so you don\u0027t need to try five times to avoid collision.",
      "revId": "10a7f8039b66bfde542f877b4be438afa09406bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "16a06524_08e174aa",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-06-11T00:50:43Z",
      "side": 1,
      "message": "These also need to be unguessable now. Though, added your suggestion in b/182939933#comment3.\n\nIt\u0027s a bit of an inbetween zone now. I need to wait until we get TLS or similar setup and see what is really needed. Should be coming soon...",
      "parentUuid": "f9fc6252_b8acff8d",
      "revId": "10a7f8039b66bfde542f877b4be438afa09406bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1f76314d_aae56f46",
        "filename": "libs/binder/RpcState.cpp",
        "patchSetId": 2
      },
      "lineNbr": 146,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2021-06-11T00:43:47Z",
      "side": 1,
      "message": "???",
      "range": {
        "startLine": 146,
        "startChar": 33,
        "endLine": 146,
        "endChar": 35
      },
      "revId": "10a7f8039b66bfde542f877b4be438afa09406bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "124485c3_4c66d34e",
        "filename": "libs/binder/RpcState.cpp",
        "patchSetId": 2
      },
      "lineNbr": 146,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-06-11T00:50:43Z",
      "side": 1,
      "message": "cast to boolean (more common in the kernel)",
      "parentUuid": "1f76314d_aae56f46",
      "range": {
        "startLine": 146,
        "startChar": 33,
        "endLine": 146,
        "endChar": 35
      },
      "revId": "10a7f8039b66bfde542f877b4be438afa09406bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "46831eea_7360207b",
        "filename": "libs/binder/RpcState.cpp",
        "patchSetId": 2
      },
      "lineNbr": 146,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2021-06-11T00:55:42Z",
      "side": 1,
      "message": "oh.... there\u0027s always something to learn!",
      "parentUuid": "124485c3_4c66d34e",
      "range": {
        "startLine": 146,
        "startChar": 33,
        "endLine": 146,
        "endChar": 35
      },
      "revId": "10a7f8039b66bfde542f877b4be438afa09406bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "78ceb462_0e0ae684",
        "filename": "libs/binder/RpcState.cpp",
        "patchSetId": 2
      },
      "lineNbr": 146,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-06-11T00:57:44Z",
      "side": 1,
      "message": "do you know the \u0027down to\u0027 operator?\n\n    size_t tries \u003d 5;\n    while (tries --\u003e 0) { printf(\"can i haz +2?\\n\"); }",
      "parentUuid": "46831eea_7360207b",
      "range": {
        "startLine": 146,
        "startChar": 33,
        "endLine": 146,
        "endChar": 35
      },
      "revId": "10a7f8039b66bfde542f877b4be438afa09406bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ea50bd0c_c4fd5667",
        "filename": "libs/binder/RpcState.cpp",
        "patchSetId": 2
      },
      "lineNbr": 146,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2021-06-11T01:29:17Z",
      "side": 1,
      "message": "I don\u0027t believe this is a new operator. Shouldn\u0027t this better be `while( (tries--) \u003e 0 )`?",
      "parentUuid": "78ceb462_0e0ae684",
      "range": {
        "startLine": 146,
        "startChar": 33,
        "endLine": 146,
        "endChar": 35
      },
      "revId": "10a7f8039b66bfde542f877b4be438afa09406bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f5c043a7_5322d189",
        "filename": "libs/binder/RpcState.cpp",
        "patchSetId": 2
      },
      "lineNbr": 146,
      "author": {
        "id": 1644679
      },
      "writtenOn": "2021-06-11T15:50:22Z",
      "side": 1,
      "message": "Hah! I like the \u0027down to operator\u0027. Stack overflow question about this has another suggestion. The \u0027slides to\u0027:\n```\nwhile (x --\\\n            \\\n             \\\n              \\\n               \u003e 0)\n```\nhttps://stackoverflow.com/questions/1642028/what-is-the-operator-in-c-c",
      "parentUuid": "ea50bd0c_c4fd5667",
      "range": {
        "startLine": 146,
        "startChar": 33,
        "endLine": 146,
        "endChar": 35
      },
      "revId": "10a7f8039b66bfde542f877b4be438afa09406bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}