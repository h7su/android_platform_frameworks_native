{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "43d1bc94_f8e824d6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 2048488
      },
      "writtenOn": "2024-02-15T00:06:40Z",
      "side": 1,
      "message": "Thanks for the recommendations.  Was going to dedupe soon.  haven\u0027t used macros in rust yet, but look interesting.  New patchset coming.",
      "revId": "fd96aae185535a1519577771a6e1e40537ebc033",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7f7947ee_fd66a153",
        "filename": "libs/binder/trusty/rust/binder_rpc_test/binder_rpc_test_session/lib.rs",
        "patchSetId": 4
      },
      "lineNbr": 29,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2024-02-14T00:54:02Z",
      "side": 1,
      "message": "Trusty doesn\u0027t have multithreading so `Mutex` shouldn\u0027t be needed. Rust still enforces it, so I guess we need it unless we can use something else.\n\nOTOH if this ever gets used on Android, we\u0027ll be back to needing it.",
      "revId": "fd96aae185535a1519577771a6e1e40537ebc033",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "56add975_d3732b46",
        "filename": "libs/binder/trusty/rust/binder_rpc_test/binder_rpc_test_session/lib.rs",
        "patchSetId": 4
      },
      "lineNbr": 29,
      "author": {
        "id": 2048488
      },
      "writtenOn": "2024-02-15T00:06:40Z",
      "side": 1,
      "message": "Use of mutex is to have create a mutable static variable.  Only method I could find to achieve this in rust.  Not used for thread safety.",
      "parentUuid": "7f7947ee_fd66a153",
      "revId": "fd96aae185535a1519577771a6e1e40537ebc033",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ff1f2631_a07f7ae8",
        "filename": "libs/binder/trusty/rust/binder_rpc_test/binder_rpc_test_session/lib.rs",
        "patchSetId": 4
      },
      "lineNbr": 55,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2024-02-14T00:54:02Z",
      "side": 1,
      "message": "Binder uses strong pointers with reference counting a lot, so pointees rarely get cloned.\n\nCould you just remove this `Clone` implementation?",
      "revId": "fd96aae185535a1519577771a6e1e40537ebc033",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d4c36583_cbab4657",
        "filename": "libs/binder/trusty/rust/binder_rpc_test/binder_rpc_test_session/lib.rs",
        "patchSetId": 4
      },
      "lineNbr": 55,
      "author": {
        "id": 2048488
      },
      "writtenOn": "2024-02-15T00:06:40Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "ff1f2631_a07f7ae8",
      "revId": "fd96aae185535a1519577771a6e1e40537ebc033",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "33c4749c_41e802e6",
        "filename": "libs/binder/trusty/rust/binder_rpc_test/main.rs",
        "patchSetId": 4
      },
      "lineNbr": 39,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2024-02-14T00:41:39Z",
      "side": 1,
      "message": "We should de-duplicate these.\n\nSimple approach: move the bodies into helper functions that take `port: \u0026str` as a parameter, and call the helpers from the actual tests with the different port names.\n\nA more complex approach to develop, but easier to use after: use `macro_rules!` to define a `service_test!` macro that takes the test case body and instantiates the two tests. Something like:\n```\nmacro_rules! service_test {\n  ($c_name:ident, $rust_name:ident, $body:expr) \u003d\u003e {\n     #[test] fn $c_name() { $body(get_service(SERVICE_PORT); }\n     #[test] fn $rust_name() { $body(get_service(RUST_SERVICE_PORT); }\n  }\n};\n\nservice_test!{ping, ping_rust, |srv| {\n  assert_eq!(srv.as_binder().ping_binder(), Ok(()));\n}};\n```\nThat second one might be a pain to get working, so let\u0027s go with the first one if it doesn\u0027t.",
      "revId": "fd96aae185535a1519577771a6e1e40537ebc033",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b2da6480_d02a8b15",
        "filename": "libs/binder/trusty/rust/binder_rpc_test/main.rs",
        "patchSetId": 4
      },
      "lineNbr": 39,
      "author": {
        "id": 2048488
      },
      "writtenOn": "2024-02-15T00:06:40Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "33c4749c_41e802e6",
      "revId": "fd96aae185535a1519577771a6e1e40537ebc033",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "34d6c9fa_682d84d7",
        "filename": "libs/binder/trusty/rust/binder_rpc_test/rules.mk",
        "patchSetId": 4
      },
      "lineNbr": 28,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2024-02-14T00:55:40Z",
      "side": 1,
      "message": "Should this also be in this CL? It was there in https://r.android.com/2584776.",
      "revId": "fd96aae185535a1519577771a6e1e40537ebc033",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bd8f599d_3d8d4bdd",
        "filename": "libs/binder/trusty/rust/binder_rpc_test/rules.mk",
        "patchSetId": 4
      },
      "lineNbr": 28,
      "author": {
        "id": 2048488
      },
      "writtenOn": "2024-02-15T00:06:40Z",
      "side": 1,
      "message": "Unified script already pulls in that CL, so this line is already in the file before applying this CL.  If this CL *replaces* that CL. then I can add in.",
      "parentUuid": "34d6c9fa_682d84d7",
      "revId": "fd96aae185535a1519577771a6e1e40537ebc033",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0ad1c715_70507b4f",
        "filename": "libs/binder/trusty/rust/binder_rpc_test/service/main.rs",
        "patchSetId": 4
      },
      "lineNbr": 119,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2024-02-14T00:54:02Z",
      "side": 1,
      "message": "`(*locked).is_none()` or even `if let None \u003d *locked` would be better.\n\nHowever, I think `(*locked).get_or_insert_with(|| { ... })` is an even more idiomatic replacement for this whole block.",
      "revId": "fd96aae185535a1519577771a6e1e40537ebc033",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b5c7c179_59a89524",
        "filename": "libs/binder/trusty/rust/binder_rpc_test/service/main.rs",
        "patchSetId": 4
      },
      "lineNbr": 119,
      "author": {
        "id": 2048488
      },
      "writtenOn": "2024-02-15T00:06:40Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "0ad1c715_70507b4f",
      "revId": "fd96aae185535a1519577771a6e1e40537ebc033",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "549e4397_5604fa9b",
        "filename": "libs/binder/trusty/rust/binder_rpc_test/service/rules.mk",
        "patchSetId": 4
      },
      "lineNbr": 34,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2024-02-14T00:54:02Z",
      "side": 1,
      "message": "Do you have a manifest file locally? It should be added to this commit.\n\nIt was there in my commit https://android-review.git.corp.google.com/c/platform/frameworks/native/+/2700753/60/libs/binder/trusty/rust/binder_rpc_test/service/manifest.json.",
      "revId": "fd96aae185535a1519577771a6e1e40537ebc033",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0f2882f2_394b907e",
        "filename": "libs/binder/trusty/rust/binder_rpc_test/service/rules.mk",
        "patchSetId": 4
      },
      "lineNbr": 34,
      "author": {
        "id": 2048488
      },
      "writtenOn": "2024-02-15T00:06:40Z",
      "side": 1,
      "message": "Unified script already pulls in CL 2700753, so this file already exists before applying this CL.  If this CL *replaces* that CL. then I can add in.",
      "parentUuid": "549e4397_5604fa9b",
      "revId": "fd96aae185535a1519577771a6e1e40537ebc033",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}