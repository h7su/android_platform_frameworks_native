{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "0dffbb30_64fa6236",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1965025
      },
      "writtenOn": "2022-08-31T13:47:00Z",
      "side": 1,
      "message": "Now calling `InputDevice.batteryState.capacity` and `InputDevice.batteryState.status` does not block other events. I updated the commit message.\n\n`dumpsys input` still blocks other UI events, it must holds another lock. I\u0027ll investigate later.",
      "revId": "a3d8a6500762a86e0f6205da1b91a2b85a10742a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d3145825_1a4f4d88",
        "filename": "services/inputflinger/reader/EventHub.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1488,
      "author": {
        "id": 1149384
      },
      "writtenOn": "2022-08-31T16:04:48Z",
      "side": 1,
      "message": "you could probably make this `std::filesystem::path` instead of string to get around the compiler error",
      "range": {
        "startLine": 1488,
        "startChar": 4,
        "endLine": 1488,
        "endChar": 15
      },
      "revId": "a3d8a6500762a86e0f6205da1b91a2b85a10742a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "663753a1_2977bfaa",
        "filename": "services/inputflinger/reader/EventHub.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1488,
      "author": {
        "id": 1407716
      },
      "writtenOn": "2022-08-31T18:37:34Z",
      "side": 1,
      "message": "Also, let\u0027s rename the variable to `batteryPath` to avoid confusion with the sysfs path.\n\n    std::filesystem::path batteryPath;",
      "parentUuid": "d3145825_1a4f4d88",
      "range": {
        "startLine": 1488,
        "startChar": 4,
        "endLine": 1488,
        "endChar": 15
      },
      "revId": "a3d8a6500762a86e0f6205da1b91a2b85a10742a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a082dc78_248525ef",
        "filename": "services/inputflinger/reader/EventHub.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1488,
      "author": {
        "id": 1965025
      },
      "writtenOn": "2022-09-02T02:15:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "663753a1_2977bfaa",
      "range": {
        "startLine": 1488,
        "startChar": 4,
        "endLine": 1488,
        "endChar": 15
      },
      "revId": "a3d8a6500762a86e0f6205da1b91a2b85a10742a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9690a9be_50cecdf1",
        "filename": "services/inputflinger/reader/InputReader.cpp",
        "patchSetId": 3
      },
      "lineNbr": 732,
      "author": {
        "id": 1149384
      },
      "writtenOn": "2022-08-31T16:04:48Z",
      "side": 1,
      "message": "i dont think you can do this. InputDevice can change underneath if you aren\u0027t holding the lock",
      "range": {
        "startLine": 732,
        "startChar": 15,
        "endLine": 732,
        "endChar": 42
      },
      "revId": "a3d8a6500762a86e0f6205da1b91a2b85a10742a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "febe6ec9_ce5c12d6",
        "filename": "services/inputflinger/reader/InputReader.cpp",
        "patchSetId": 3
      },
      "lineNbr": 732,
      "author": {
        "id": 1965025
      },
      "writtenOn": "2022-08-31T17:01:27Z",
      "side": 1,
      "message": "Any suggestions for this? Create a separate lock for device, not share with `InputReader::processEventsLocked`?",
      "parentUuid": "9690a9be_50cecdf1",
      "range": {
        "startLine": 732,
        "startChar": 15,
        "endLine": 732,
        "endChar": 42
      },
      "revId": "a3d8a6500762a86e0f6205da1b91a2b85a10742a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e0f0c9ce_786193d6",
        "filename": "services/inputflinger/reader/InputReader.cpp",
        "patchSetId": 3
      },
      "lineNbr": 732,
      "author": {
        "id": 1149384
      },
      "writtenOn": "2022-08-31T18:16:20Z",
      "side": 1,
      "message": "The only idea that I currently have is to do the following:\n\n1. Add API \u0027getBatteryId\u0027 to InputDevice\n2. Call `device-\u003egetBatteryId` while holding the reader lock\n3. Outside of the reader lock, call EventHub-\u003egetBatteryCapacity(batteryId).\n\nThoughts on that?",
      "parentUuid": "febe6ec9_ce5c12d6",
      "range": {
        "startLine": 732,
        "startChar": 15,
        "endLine": 732,
        "endChar": 42
      },
      "revId": "a3d8a6500762a86e0f6205da1b91a2b85a10742a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ca2f852a_a90dbccc",
        "filename": "services/inputflinger/reader/InputReader.cpp",
        "patchSetId": 3
      },
      "lineNbr": 732,
      "author": {
        "id": 1407716
      },
      "writtenOn": "2022-08-31T18:37:34Z",
      "side": 1,
      "message": "+1 We shouldn\u0027t be interacting with InputDevice outside of the lock in our current architecture.\n\nHowever, we can make use of the fact that InputDevice is already stored using a shared_ptr to work around the lifetime issues, and const-correctness to deal with thread safety.\n\nThe InputDevice battery/lights methods that read/write from sysfs can be const since they don\u0027t modify state, but instead are used for the side effects of the EventHub call. This means we can make all of these methods as const throughout InputReader.\n\nNext, we can add an InputReader method like so:\n\n    std::shared_ptr\u003cconst InputDevice\u003e InputReader::getInputDevice(deviceId) const;\n    \nThen here in getBatteryStatus, without holding the lock, we can do:\n\n    const std::shared_ptr\u003cconst InputDevice\u003e device \u003d getInputDevice(deviceId);\n    return device ? device-\u003egetBatteryStatus() : std::nullopt;\n    \nWe should do this with all the EventHub methods for battery/lights. WDYT?",
      "parentUuid": "9690a9be_50cecdf1",
      "range": {
        "startLine": 732,
        "startChar": 15,
        "endLine": 732,
        "endChar": 42
      },
      "revId": "a3d8a6500762a86e0f6205da1b91a2b85a10742a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "009b27b2_1624acc9",
        "filename": "services/inputflinger/reader/InputReader.cpp",
        "patchSetId": 3
      },
      "lineNbr": 732,
      "author": {
        "id": 1965025
      },
      "writtenOn": "2022-08-31T18:46:01Z",
      "side": 1,
      "message": "I\u0027ll try this. Thanks.",
      "parentUuid": "ca2f852a_a90dbccc",
      "range": {
        "startLine": 732,
        "startChar": 15,
        "endLine": 732,
        "endChar": 42
      },
      "revId": "a3d8a6500762a86e0f6205da1b91a2b85a10742a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7e15528f_625c5b66",
        "filename": "services/inputflinger/reader/InputReader.cpp",
        "patchSetId": 3
      },
      "lineNbr": 732,
      "author": {
        "id": 1407716
      },
      "writtenOn": "2022-08-31T19:40:14Z",
      "side": 1,
      "message": "Actually, I think I spoke too soon, and that the approach of using a const InputDevice just moves the locking problem from InputReader to InputDevice. Sorry about that!\n\nFor now, I think Siarhei\u0027s suggestion makes sense, although we\u0027d also have to get the EventHub id alongside the battery id to call EventHub-\u003egetBatteryCapacity().\n\nThe reading/writing lights info could possibly lead to the same issue of holding the lock for too long, although i\u0027m not sure if there are any peripherals where we can reproduce the problem by reading lights.",
      "parentUuid": "009b27b2_1624acc9",
      "range": {
        "startLine": 732,
        "startChar": 15,
        "endLine": 732,
        "endChar": 42
      },
      "revId": "a3d8a6500762a86e0f6205da1b91a2b85a10742a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8c0c2e14_d782ca7e",
        "filename": "services/inputflinger/reader/InputReader.cpp",
        "patchSetId": 3
      },
      "lineNbr": 732,
      "author": {
        "id": 1965025
      },
      "writtenOn": "2022-09-02T02:15:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7e15528f_625c5b66",
      "range": {
        "startLine": 732,
        "startChar": 15,
        "endLine": 732,
        "endChar": 42
      },
      "revId": "a3d8a6500762a86e0f6205da1b91a2b85a10742a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}