{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "2df58a0b_099f3291",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1895775
      },
      "writtenOn": "2023-06-06T00:20:02Z",
      "side": 1,
      "message": "This didn\u0027t work as is - it failed with\n\n\n```\nCMake Error at CMakeLists.txt:28 (find_package):\n  By not providing \"Findfmt.cmake\" in CMAKE_MODULE_PATH this project has\n  asked CMake to find a package configuration file provided by \"fmt\", but\n  CMake did not find one.\n\n  Could not find a package configuration file provided by \"fmt\" with any of\n  the following names:\n\n    fmtConfig.cmake\n    fmt-config.cmake\n\n  Add the installation prefix of \"fmt\" to CMAKE_PREFIX_PATH or set \"fmt_DIR\"\n  to a directory containing one of the above files.  If \"fmt\" provides a\n  separate development package or SDK, be sure it has been installed.\n\n```\n\n\n\n\nIs this test assuming fmtlib is added as a package elsewhere?",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 137
      },
      "revId": "6f942f2452828cf986ae5efebde538442541d19a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ce26bf54_2e6cbe00",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1569496
      },
      "writtenOn": "2023-06-06T20:07:05Z",
      "side": 1,
      "message": "Like the error message said, you will need to install fmtlib. If the build machine is the same as the target, you should install it on the build machine. If you are cross compiling, then you install it on the target and then maybe put it in the sysroot. You will need to make it visible to `find_package` anyways.",
      "parentUuid": "2df58a0b_099f3291",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 137
      },
      "revId": "6f942f2452828cf986ae5efebde538442541d19a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ad18db20_3941480f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1895775
      },
      "writtenOn": "2023-06-06T23:39:26Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "ce26bf54_2e6cbe00",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 137
      },
      "revId": "6f942f2452828cf986ae5efebde538442541d19a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a5e4c589_463cc71b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1133963
      },
      "writtenOn": "2023-06-06T23:42:48Z",
      "side": 1,
      "message": "Is this something we could check for?",
      "parentUuid": "ad18db20_3941480f",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 137
      },
      "revId": "6f942f2452828cf986ae5efebde538442541d19a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c232b370_f9294d40",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1895775
      },
      "writtenOn": "2023-06-07T00:17:32Z",
      "side": 1,
      "message": "we are cross compiling and it is easier to just add_library instead of installing it - is it possible to make find_package optional or configurable?",
      "parentUuid": "ad18db20_3941480f",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 137
      },
      "revId": "6f942f2452828cf986ae5efebde538442541d19a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "88d1dcd0_09f235da",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1569496
      },
      "writtenOn": "2023-06-10T02:30:38Z",
      "side": 1,
      "message": "Why cannot cross-compiling libfmt independent of this project? What will be the differences/difficuties here?",
      "parentUuid": "c232b370_f9294d40",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 137
      },
      "revId": "6f942f2452828cf986ae5efebde538442541d19a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1a472662_e52a8ac6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1895775
      },
      "writtenOn": "2023-06-12T17:52:01Z",
      "side": 1,
      "message": "@enh@google.com can you clarify the issues you have with this change ? - we would like to use this kind of change for using AIDL interfaces for testing outside of an AOSP build.",
      "revId": "6f942f2452828cf986ae5efebde538442541d19a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1b8399f1_5a16357b",
        "filename": "libs/binder/linux/libbase/CMakeLists.txt",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1895775
      },
      "writtenOn": "2023-06-05T22:43:50Z",
      "side": 1,
      "message": "Is ANDROID_BUILD_TOP a requirement just for locating the other dependencies or does it mean more than that?\n\nWe wanted to build this outside of the Android tree without the Android toolchain on a regular Linux distro.",
      "range": {
        "startLine": 30,
        "startChar": 24,
        "endLine": 30,
        "endChar": 41
      },
      "revId": "6f942f2452828cf986ae5efebde538442541d19a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f15db711_3f823004",
        "filename": "libs/binder/linux/libbase/CMakeLists.txt",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1569496
      },
      "writtenOn": "2023-06-06T20:07:05Z",
      "side": 1,
      "message": "The former. You don\u0027t need the whole ANDROID_BUILD_TOP once you do not have it, but then we need to specify LIBBASE_DIR and etc by yourself.",
      "parentUuid": "1b8399f1_5a16357b",
      "range": {
        "startLine": 30,
        "startChar": 24,
        "endLine": 30,
        "endChar": 41
      },
      "revId": "6f942f2452828cf986ae5efebde538442541d19a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6536a277_7e88e505",
        "filename": "libs/binder/linux/libbase/CMakeLists.txt",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1895775
      },
      "writtenOn": "2023-06-06T23:39:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f15db711_3f823004",
      "range": {
        "startLine": 30,
        "startChar": 24,
        "endLine": 30,
        "endChar": 41
      },
      "revId": "6f942f2452828cf986ae5efebde538442541d19a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "625eeb95_e0bc7847",
        "filename": "libs/binder/linux/libbase/CMakeLists.txt",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2023-06-08T18:25:29Z",
      "side": 1,
      "message": "You shouldn\u0027t need this unless trying to build the Trusty code explicitly. Android has it because we\u0027re doing that on Android for testing. Does it not build without this?",
      "revId": "6f942f2452828cf986ae5efebde538442541d19a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "349b06a0_50497a14",
        "filename": "libs/binder/linux/libbase/CMakeLists.txt",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 1569496
      },
      "writtenOn": "2023-06-10T02:30:38Z",
      "side": 1,
      "message": "We are doing similar things to Trusty, and we do not want to bring in the whole Android infrastructure in our use case (building binder on vanilla Linux). So we may share some common headers with Trusty (mostly logging IIRC). If you don\u0027t think we should share it, we can definitely copy the ones that we need to `libs/binder/linux`",
      "parentUuid": "625eeb95_e0bc7847",
      "revId": "6f942f2452828cf986ae5efebde538442541d19a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "734f1950_3a30a13a",
        "filename": "libs/binder/linux/libbase/CMakeLists.txt",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2023-06-10T03:32:15Z",
      "side": 1,
      "message": "The Trusty build of libbinder does not use any of the headers under `trusty/include_mock`, it uses the originals from the Trusty tree. This subdirectory is strictly for building `binderRpcTest_on_trusty_mock` on Android.\n\nYou probably need the header under `trusty/include/log/log.h`, but that one is sufficiently Trusty-specific that you should probably maintain your own copy.",
      "parentUuid": "349b06a0_50497a14",
      "revId": "6f942f2452828cf986ae5efebde538442541d19a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}