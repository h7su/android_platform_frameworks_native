{
  "comments": [
    {
      "key": {
        "uuid": "b64b2b05_46ad504f",
        "filename": "libs/binder/include/binder/IInterface.h",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2019-11-21T23:59:41Z",
      "side": 1,
      "message": "Daniel, I haven\u0027t had time to investigate always doing the check early. What do you think of this? It could always be unified w/ interface_cast.",
      "range": {
        "startLine": 58,
        "startChar": 21,
        "endLine": 58,
        "endChar": 43
      },
      "revId": "21560ab7fa447aef2f90816e250aa1e06ba5948a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "21760045_0a5594ea",
        "filename": "libs/binder/include/binder/IInterface.h",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 1130394
      },
      "writtenOn": "2019-11-22T23:18:02Z",
      "side": 1,
      "message": "Yeah, sounds reasonable. I was also imagining that we could put an interface descriptor list in the struct node in the binder driver so we wouldn\u0027t have to IPC to check it, but we don\u0027t have to do that now.",
      "parentUuid": "b64b2b05_46ad504f",
      "range": {
        "startLine": 58,
        "startChar": 21,
        "endLine": 58,
        "endChar": 43
      },
      "revId": "21560ab7fa447aef2f90816e250aa1e06ba5948a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "30c3fd55_fd7559b8",
        "filename": "libs/binder/include/binder/IInterface.h",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2019-11-22T23:28:26Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "21760045_0a5594ea",
      "range": {
        "startLine": 58,
        "startChar": 21,
        "endLine": 58,
        "endChar": 43
      },
      "revId": "21560ab7fa447aef2f90816e250aa1e06ba5948a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9b876656_310a314d",
        "filename": "libs/binder/include/binder/IInterface.h",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 1130394
      },
      "writtenOn": "2019-11-22T23:21:10Z",
      "side": 1,
      "message": "We don\u0027t have objects that respond to more than one interface descriptor, do we?",
      "range": {
        "startLine": 60,
        "startChar": 13,
        "endLine": 60,
        "endChar": 35
      },
      "revId": "21560ab7fa447aef2f90816e250aa1e06ba5948a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "af91ac69_c9d77d9e",
        "filename": "libs/binder/include/binder/IInterface.h",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2019-11-22T23:28:26Z",
      "side": 1,
      "message": "No, not that I know of. If you want to have multiple of these, you need to be doing something pretty custom.",
      "parentUuid": "9b876656_310a314d",
      "range": {
        "startLine": 60,
        "startChar": 13,
        "endLine": 60,
        "endChar": 35
      },
      "revId": "21560ab7fa447aef2f90816e250aa1e06ba5948a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}