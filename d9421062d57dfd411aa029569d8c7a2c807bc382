{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "19503109_e07cc46d",
        "filename": "cmds/installd/InstalldNativeService.cpp",
        "patchSetId": 3
      },
      "lineNbr": 3869,
      "author": {
        "id": 1060831
      },
      "writtenOn": "2023-08-01T13:26:10Z",
      "side": 1,
      "message": "More precisely, you need CAP_DAC_OVERRIDE - which is deliberately very restricted by SELinux, and installd is one of the few things that have it.\n\nI assumed that passing the fd was being done to avoid needing that. But of course FS_IOC_ENABLE_VERITY is weird in that it wants an fd with read only access but does a separate writability check.",
      "range": {
        "startLine": 3869,
        "startChar": 19,
        "endLine": 3869,
        "endChar": 23
      },
      "revId": "d9421062d57dfd411aa029569d8c7a2c807bc382",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "29b0bbc0_22cf0c86",
        "filename": "cmds/installd/InstalldNativeService.cpp",
        "patchSetId": 3
      },
      "lineNbr": 3871,
      "author": {
        "id": 1166043
      },
      "writtenOn": "2023-07-31T20:34:15Z",
      "side": 1,
      "message": "we need packageName and filePath.\nthis method needs to:\n1. validate the path belongs to the package private data folder,\n2. lock the package using LOCK_PACKAGE()\n\nI think this will mean \"no PFD API\", we might be OK as we are never supposed to be working for any FD",
      "range": {
        "startLine": 3871,
        "startChar": 53,
        "endLine": 3871,
        "endChar": 97
      },
      "revId": "d9421062d57dfd411aa029569d8c7a2c807bc382",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7d15b1a2_2e0016f4",
        "filename": "cmds/installd/InstalldNativeService.cpp",
        "patchSetId": 3
      },
      "lineNbr": 3871,
      "author": {
        "id": 1042276
      },
      "writtenOn": "2023-07-31T21:00:07Z",
      "side": 1,
      "message": "OK, I think we can drop the PFD API for simplicity. Then we can just validate the path in system server, and remove all the checks here.  Will upload the change later.",
      "parentUuid": "29b0bbc0_22cf0c86",
      "range": {
        "startLine": 3871,
        "startChar": 53,
        "endLine": 3871,
        "endChar": 97
      },
      "revId": "d9421062d57dfd411aa029569d8c7a2c807bc382",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0c748a45_c9692c25",
        "filename": "cmds/installd/InstalldNativeService.cpp",
        "patchSetId": 3
      },
      "lineNbr": 3871,
      "author": {
        "id": 1166043
      },
      "writtenOn": "2023-07-31T21:18:40Z",
      "side": 1,
      "message": "In fact, we need to validate paths both in system_server, and here.\nOr just keep single validation point, in installd.\n\nThe security requirements for installd are to validate its inputs in case someone can spoof AIDL requests to installd.",
      "parentUuid": "7d15b1a2_2e0016f4",
      "range": {
        "startLine": 3871,
        "startChar": 53,
        "endLine": 3871,
        "endChar": 97
      },
      "revId": "d9421062d57dfd411aa029569d8c7a2c807bc382",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5e4602ed_034b8338",
        "filename": "cmds/installd/InstalldNativeService.cpp",
        "patchSetId": 3
      },
      "lineNbr": 3871,
      "author": {
        "id": 1042276
      },
      "writtenOn": "2023-07-31T21:34:59Z",
      "side": 1,
      "message": "They will have to spoof the calling UID to pass `ENFORCE_UID(AID_SYSTEM)`.  If they can do that, they can manipulate almost all functions here and in fact everywhere?",
      "parentUuid": "0c748a45_c9692c25",
      "range": {
        "startLine": 3871,
        "startChar": 53,
        "endLine": 3871,
        "endChar": 97
      },
      "revId": "d9421062d57dfd411aa029569d8c7a2c807bc382",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0475689e_9f6bcd26",
        "filename": "cmds/installd/InstalldNativeService.cpp",
        "patchSetId": 3
      },
      "lineNbr": 3871,
      "author": {
        "id": 1166043
      },
      "writtenOn": "2023-07-31T21:40:04Z",
      "side": 1,
      "message": "Maybe, but these are the requirements.",
      "parentUuid": "5e4602ed_034b8338",
      "range": {
        "startLine": 3871,
        "startChar": 53,
        "endLine": 3871,
        "endChar": 97
      },
      "revId": "d9421062d57dfd411aa029569d8c7a2c807bc382",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0400753b_469fd57f",
        "filename": "cmds/installd/InstalldNativeService.cpp",
        "patchSetId": 3
      },
      "lineNbr": 3871,
      "author": {
        "id": 1042276
      },
      "writtenOn": "2023-07-31T22:03:56Z",
      "side": 1,
      "message": "Do you know what code does the check for such a requirement?  Where is the requirement stated?  I was looking for shared code for the requirement, but many of them don\u0027t implement such a check (e.g. getAppSize, linkNativeLibraryDirectory).",
      "parentUuid": "0475689e_9f6bcd26",
      "range": {
        "startLine": 3871,
        "startChar": 53,
        "endLine": 3871,
        "endChar": 97
      },
      "revId": "d9421062d57dfd411aa029569d8c7a2c807bc382",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "25508160_b0fec2b5",
        "filename": "cmds/installd/InstalldNativeService.cpp",
        "patchSetId": 3
      },
      "lineNbr": 3871,
      "author": {
        "id": 1166043
      },
      "writtenOn": "2023-07-31T22:06:47Z",
      "side": 1,
      "message": "Example bug (for the previous version of enableFsVerity lol) b/216112933",
      "parentUuid": "0400753b_469fd57f",
      "range": {
        "startLine": 3871,
        "startChar": 53,
        "endLine": 3871,
        "endChar": 97
      },
      "revId": "d9421062d57dfd411aa029569d8c7a2c807bc382",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2ce52f13_9c694be2",
        "filename": "cmds/installd/InstalldNativeService.cpp",
        "patchSetId": 3
      },
      "lineNbr": 3871,
      "author": {
        "id": 1166043
      },
      "writtenOn": "2023-07-31T22:10:09Z",
      "side": 1,
      "message": "I don\u0027t think we have code that checks for \"private data folder\". I guess you need to define it yourself, similarly to what you were going to do in system_server perhaps?",
      "parentUuid": "25508160_b0fec2b5",
      "range": {
        "startLine": 3871,
        "startChar": 53,
        "endLine": 3871,
        "endChar": 97
      },
      "revId": "d9421062d57dfd411aa029569d8c7a2c807bc382",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1e2ccc39_496eec94",
        "filename": "cmds/installd/InstalldNativeService.cpp",
        "patchSetId": 3
      },
      "lineNbr": 3871,
      "author": {
        "id": 1137063
      },
      "writtenOn": "2023-07-31T22:35:00Z",
      "side": 1,
      "message": "Should we reconsider just allowing apps to use FS_IOC_ENABLE_VERITY?  Then this API would not be needed at all.",
      "parentUuid": "2ce52f13_9c694be2",
      "range": {
        "startLine": 3871,
        "startChar": 53,
        "endLine": 3871,
        "endChar": 97
      },
      "revId": "d9421062d57dfd411aa029569d8c7a2c807bc382",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "13230b05_4b239f8f",
        "filename": "cmds/installd/InstalldNativeService.cpp",
        "patchSetId": 3
      },
      "lineNbr": 3871,
      "author": {
        "id": 1042276
      },
      "writtenOn": "2023-07-31T22:38:35Z",
      "side": 1,
      "message": "Adding more check is fine with me.  But I\u0027d like us to agree with what\u0027s achievable.\n\nThe bug assumes system server isn\u0027t trusted.  If that\u0027s the assumption, all the inputs are from system server, including what\u0027ll be needed for the path validation (e.g. package name, volume uuid, user id, DE/CE storage, etc.), become questionable.  In a sense, what we\u0027d be adding is a large regular expression that reject weird looking package_name/uuid/etc.  But since the attacker can spoof all the inputs, I won\u0027t feel confident about the validation.\n\nThen, I\u0027ll have to question... do we really need to assume system server is untrusted in this case? But not many other cases?",
      "parentUuid": "2ce52f13_9c694be2",
      "range": {
        "startLine": 3871,
        "startChar": 53,
        "endLine": 3871,
        "endChar": 97
      },
      "revId": "d9421062d57dfd411aa029569d8c7a2c807bc382",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2b9c01a9_2b110322",
        "filename": "cmds/installd/InstalldNativeService.cpp",
        "patchSetId": 3
      },
      "lineNbr": 3871,
      "author": {
        "id": 1166043
      },
      "writtenOn": "2023-08-01T04:02:57Z",
      "side": 1,
      "message": "packageName is required for per-package mutex lock.\nregexp is a no-no, it\u0027s super slow and uses a lot of memory.\n\nI don\u0027t have a good answer for you re: attacker etc. Feel free to reach to security people on the bug and discuss with them.\n\nAgree with Eric, that ideally we would allow apps to use FS_IOC_ENABLE_VERITY and rely on per-uid FS permission checks.",
      "parentUuid": "13230b05_4b239f8f",
      "range": {
        "startLine": 3871,
        "startChar": 53,
        "endLine": 3871,
        "endChar": 97
      },
      "revId": "d9421062d57dfd411aa029569d8c7a2c807bc382",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1199273e_59934d78",
        "filename": "cmds/installd/InstalldNativeService.cpp",
        "patchSetId": 3
      },
      "lineNbr": 3871,
      "author": {
        "id": 1060831
      },
      "writtenOn": "2023-08-01T13:26:10Z",
      "side": 1,
      "message": "If you follow the flow for hashSecondaryDexFile there are some path name checks in there. The restrictions are mainly to make sure we are dealing with some app private data file, rather than any other file that system server might have access to.",
      "parentUuid": "2b9c01a9_2b110322",
      "range": {
        "startLine": 3871,
        "startChar": 53,
        "endLine": 3871,
        "endChar": 97
      },
      "revId": "d9421062d57dfd411aa029569d8c7a2c807bc382",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1361f539_15a8b63c",
        "filename": "cmds/installd/InstalldNativeService.cpp",
        "patchSetId": 3
      },
      "lineNbr": 3886,
      "author": {
        "id": 1060831
      },
      "writtenOn": "2023-08-01T13:26:10Z",
      "side": 1,
      "message": "It\u0027s tricky, but not impossible.",
      "range": {
        "startLine": 3885,
        "startChar": 95,
        "endLine": 3886,
        "endChar": 77
      },
      "revId": "d9421062d57dfd411aa029569d8c7a2c807bc382",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "77226758_39a9f079",
        "filename": "cmds/installd/InstalldNativeService.cpp",
        "patchSetId": 3
      },
      "lineNbr": 3906,
      "author": {
        "id": 1060831
      },
      "writtenOn": "2023-08-01T13:26:10Z",
      "side": 1,
      "message": "There\u0027s possibly others out there - see app_data_file_type.\nBut to be fair, esoteric apps with unusual data file types may not be your target audience.",
      "range": {
        "startLine": 3905,
        "startChar": 0,
        "endLine": 3906,
        "endChar": 70
      },
      "revId": "d9421062d57dfd411aa029569d8c7a2c807bc382",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}