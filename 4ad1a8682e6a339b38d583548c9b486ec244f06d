{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b3ad9a44_d46ae5b4",
        "filename": "libs/binder/include/binder/Functional.h",
        "patchSetId": 13
      },
      "lineNbr": 27,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-10-19T23:56:49Z",
      "side": 1,
      "message": "how do we know if this changes?",
      "range": {
        "startLine": 27,
        "startChar": 27,
        "endLine": 27,
        "endChar": 87
      },
      "revId": "4ad1a8682e6a339b38d583548c9b486ec244f06d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "524ef906_a4fb4920",
        "filename": "libs/binder/include/binder/Functional.h",
        "patchSetId": 13
      },
      "lineNbr": 27,
      "author": {
        "id": 1135107
      },
      "writtenOn": "2023-10-20T06:24:23Z",
      "side": 1,
      "message": "Not directly - it\u0027s an implementation detail. But if it changes to less than 3 pointers and triggers memory allocation, your alloc tests will fire.\n\nOn the other hand - as the comment says - 3 pointers is a good bet.",
      "parentUuid": "b3ad9a44_d46ae5b4",
      "range": {
        "startLine": 27,
        "startChar": 27,
        "endLine": 27,
        "endChar": 87
      },
      "revId": "4ad1a8682e6a339b38d583548c9b486ec244f06d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "de8c7216_55c35882",
        "filename": "libs/binder/include/binder/Functional.h",
        "patchSetId": 13
      },
      "lineNbr": 27,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-10-20T21:50:59Z",
      "side": 1,
      "message": "which alloc test will fire? I didn\u0027t realize these paths were covered by binderAllocationLimits, so we should just cover them there. If we don\u0027t have a guarantee this works and it\u0027s just a heuristic, we could keep \u0027std::function\u0027 instead of small function, and have the real tests that check for an allocation.",
      "parentUuid": "524ef906_a4fb4920",
      "range": {
        "startLine": 27,
        "startChar": 27,
        "endLine": 27,
        "endChar": 87
      },
      "revId": "4ad1a8682e6a339b38d583548c9b486ec244f06d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8c2282ef_3085f8f0",
        "filename": "libs/binder/include/binder/Functional.h",
        "patchSetId": 13
      },
      "lineNbr": 27,
      "author": {
        "id": 1135107
      },
      "writtenOn": "2023-10-25T20:51:49Z",
      "side": 1,
      "message": "I think it was `RpcBinderAllocation#SetupRpcServer`. But it doesn\u0027t test all the transports (tls, tipc both sides), so I\u0027m not sure if you want to get rid of that heuristic. It\u0027s a pretty good one for a heuristic, I\u0027d say.\n\nUp to you, I can make this change however you like.",
      "parentUuid": "de8c7216_55c35882",
      "range": {
        "startLine": 27,
        "startChar": 27,
        "endLine": 27,
        "endChar": 87
      },
      "revId": "4ad1a8682e6a339b38d583548c9b486ec244f06d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e2535df6_69a92c14",
        "filename": "libs/binder/include/binder/Functional.h",
        "patchSetId": 13
      },
      "lineNbr": 27,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-10-25T22:49:37Z",
      "side": 1,
      "message": "Yeah, it\u0027s been on my mind for a few days. We can improve binderAllocationLimits separately as needed. This is fine.\n\nCan you put the SmallFunction stuff in an impl namespace or similar? I don\u0027t want clients of libbinder to depend on it, except for the friend classes we know about which implement RpcTransport subclasses.",
      "parentUuid": "8c2282ef_3085f8f0",
      "range": {
        "startLine": 27,
        "startChar": 27,
        "endLine": 27,
        "endChar": 87
      },
      "revId": "4ad1a8682e6a339b38d583548c9b486ec244f06d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ea9f2bd1_2b14194c",
        "filename": "libs/binder/include/binder/Functional.h",
        "patchSetId": 13
      },
      "lineNbr": 27,
      "author": {
        "id": 1135107
      },
      "writtenOn": "2023-10-26T16:38:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e2535df6_69a92c14",
      "range": {
        "startLine": 27,
        "startChar": 27,
        "endLine": 27,
        "endChar": 87
      },
      "revId": "4ad1a8682e6a339b38d583548c9b486ec244f06d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}