{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "fde0b879_7a7dc195",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1951823
      },
      "writtenOn": "2022-08-30T10:19:20Z",
      "side": 1,
      "message": "Seems reasonable to me, but I\u0027ll let Siarhei confirm since I\u0027m not very familiar with this code yet.",
      "revId": "149d7c88e05c908a90522c201417a038c2469f9b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2f841128_d0866285",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1965025
      },
      "writtenOn": "2022-08-31T13:02:33Z",
      "side": 1,
      "message": "Hello guys,\nIt\u0027s the my first time to upload patch for review.\nI modified the patch locally and use `git commit --amend`, it always generated a new `Change-Id` at the bottom of commit message, then `repo upload` creates a new review.\n\nHow can I let it reuse the previous `Change-Id` and upload here as a new patch set?",
      "revId": "149d7c88e05c908a90522c201417a038c2469f9b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "95303bfa_c4bb19aa",
        "filename": "services/inputflinger/reader/EventHub.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1490,
      "author": {
        "id": 1149384
      },
      "writtenOn": "2022-08-30T17:28:24Z",
      "side": 1,
      "message": "This is the only place where we need a lock.\n\nI think the right way to do this would be to create a new method:\n\n```\nconst std::unordered_map\u003cint32_t, RawBatteryInfo\u003e\u0026 EventHub::getBatteryInfo(\n        int32_t deviceId) const {\n        std::scoped_lock lock(mLock);\n        return getBatteryInfoLocked(deviceId);\n```\n\nand then in this function, delete the lock from L1488 and call getBatteryInfo instead.\n\nSame applies to getBatteryStatus.",
      "range": {
        "startLine": 1490,
        "startChar": 23,
        "endLine": 1490,
        "endChar": 43
      },
      "revId": "149d7c88e05c908a90522c201417a038c2469f9b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3cb724a4_a128ac4f",
        "filename": "services/inputflinger/reader/EventHub.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1490,
      "author": {
        "id": 1965025
      },
      "writtenOn": "2022-08-30T18:04:13Z",
      "side": 1,
      "message": "Sure, will do.",
      "parentUuid": "95303bfa_c4bb19aa",
      "range": {
        "startLine": 1490,
        "startChar": 23,
        "endLine": 1490,
        "endChar": 43
      },
      "revId": "149d7c88e05c908a90522c201417a038c2469f9b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9c8a50bf_8f24c94a",
        "filename": "services/inputflinger/reader/EventHub.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1490,
      "author": {
        "id": 1407716
      },
      "writtenOn": "2022-08-30T18:06:00Z",
      "side": 1,
      "message": "If we make a getBatteryInfo function, I don\u0027t think we should return a const-ref, since if we don\u0027t copy the result we\u0027d be reading battery info directly without holding the lock.\n\nIf we want to avoid the copy, we can keep this change as-is (or use a new {} scope for the locked work, and copy just the path to outside that scope).",
      "parentUuid": "95303bfa_c4bb19aa",
      "range": {
        "startLine": 1490,
        "startChar": 23,
        "endLine": 1490,
        "endChar": 43
      },
      "revId": "149d7c88e05c908a90522c201417a038c2469f9b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1a9ab4e3_aa3b50b5",
        "filename": "services/inputflinger/reader/EventHub.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1490,
      "author": {
        "id": 1149384
      },
      "writtenOn": "2022-08-30T18:11:29Z",
      "side": 1,
      "message": "Good point Prabir, thanks for noticing it. Yeah, in those case we can just copy \"it-\u003esecond.path\" and have a scoped_lock in an additional {} scope to get it.\n\nbtw, i dont think scoped_lock is designed to be unlocked and im surprised this compiles at all tbh. for manual lock toggling you are suppose to be using unique_lock",
      "parentUuid": "9c8a50bf_8f24c94a",
      "range": {
        "startLine": 1490,
        "startChar": 23,
        "endLine": 1490,
        "endChar": 43
      },
      "revId": "149d7c88e05c908a90522c201417a038c2469f9b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b471c045_359a6df1",
        "filename": "services/inputflinger/reader/EventHub.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1490,
      "author": {
        "id": 1965025
      },
      "writtenOn": "2022-08-30T18:17:16Z",
      "side": 1,
      "message": "Ok, I use unlock because I saw it on L1773, in this function `EventHub::getEvents`",
      "parentUuid": "1a9ab4e3_aa3b50b5",
      "range": {
        "startLine": 1490,
        "startChar": 23,
        "endLine": 1490,
        "endChar": 43
      },
      "revId": "149d7c88e05c908a90522c201417a038c2469f9b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c08b89df_b09a198e",
        "filename": "services/inputflinger/reader/EventHub.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1490,
      "author": {
        "id": 1149384
      },
      "writtenOn": "2022-08-30T21:52:45Z",
      "side": 1,
      "message": "Interesting, thanks for pointing that out. We should probably change that at some point..",
      "parentUuid": "b471c045_359a6df1",
      "range": {
        "startLine": 1490,
        "startChar": 23,
        "endLine": 1490,
        "endChar": 43
      },
      "revId": "149d7c88e05c908a90522c201417a038c2469f9b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}