{
  "comments": [
    {
      "key": {
        "uuid": "581f982a_09093a74",
        "filename": "libs/adbd_auth/include/adbd_auth.h",
        "patchSetId": 25
      },
      "lineNbr": 23,
      "author": {
        "id": 1010103
      },
      "writtenOn": "2020-02-18T19:45:12Z",
      "side": 1,
      "message": "this isn\u0027t valid in C, it needs to be wrapped in `#ifdef __cplusplus`\n\nOr better yet just use sys/cdefs.h __BEGIN_DECLS / __END_DECLS macros that do that for you",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 23,
        "endChar": 12
      },
      "revId": "5f289d30e6c2fc1a4b45d223b95579221a1d9a7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ae77fbc1_4369b095",
        "filename": "libs/adbd_auth/include/adbd_auth.h",
        "patchSetId": 25
      },
      "lineNbr": 23,
      "author": {
        "id": 1079148
      },
      "writtenOn": "2020-02-18T21:14:06Z",
      "side": 1,
      "message": "Who cares? This library will never be used from C, it\u0027s only consumed by adbd.",
      "parentUuid": "581f982a_09093a74",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 23,
        "endChar": 12
      },
      "revId": "5f289d30e6c2fc1a4b45d223b95579221a1d9a7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e262fe0_2a49ad22",
        "filename": "libs/adbd_auth/include/adbd_auth.h",
        "patchSetId": 25
      },
      "lineNbr": 45,
      "author": {
        "id": 1010103
      },
      "writtenOn": "2020-02-18T19:39:33Z",
      "side": 1,
      "message": "you really can\u0027t do this, it\u0027s not ABI stable. These must be opaque structs with setters. And no \"version\" field, that doesn\u0027t work.\n\nThe callbacks then need a void* for userContext on register, unregister, and callback invoke to springboard back to their own struct/data (similar to the below get_public_keys)",
      "range": {
        "startLine": 30,
        "startChar": 0,
        "endLine": 45,
        "endChar": 2
      },
      "revId": "5f289d30e6c2fc1a4b45d223b95579221a1d9a7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6cff9b40_48f93494",
        "filename": "libs/adbd_auth/include/adbd_auth.h",
        "patchSetId": 25
      },
      "lineNbr": 45,
      "author": {
        "id": 1079148
      },
      "writtenOn": "2020-02-18T21:14:06Z",
      "side": 1,
      "message": "\u003e you really can\u0027t do this, it\u0027s not ABI stable. These must be opaque structs with setters.\n\nThis struct is only passed by pointer, and breaking the ABI of a struct of function pointers is rather difficult. We can add some static asserts to prevent that, if we really think that\u0027s something that\u0027s possible.\n\n\u003e And no \"version\" field, that doesn\u0027t work.\n\nWhy not? This will only get called with a matching version and struct. (We\u0027re missing an adbd_auth_get_version function that returns the version supported by the implementation, though...)",
      "parentUuid": "4e262fe0_2a49ad22",
      "range": {
        "startLine": 30,
        "startChar": 0,
        "endLine": 45,
        "endChar": 2
      },
      "revId": "5f289d30e6c2fc1a4b45d223b95579221a1d9a7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7996564e_fa3fa55f",
        "filename": "libs/adbd_auth/include/adbd_auth.h",
        "patchSetId": 25
      },
      "lineNbr": 47,
      "author": {
        "id": 1010103
      },
      "writtenOn": "2020-02-18T19:45:12Z",
      "side": 1,
      "message": "needs to be typedef\u0027d so this header is valid C",
      "range": {
        "startLine": 47,
        "startChar": 0,
        "endLine": 47,
        "endChar": 22
      },
      "revId": "5f289d30e6c2fc1a4b45d223b95579221a1d9a7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fc52385e_47cb9490",
        "filename": "libs/adbd_auth/include/adbd_auth.h",
        "patchSetId": 25
      },
      "lineNbr": 55,
      "author": {
        "id": 1010103
      },
      "writtenOn": "2020-02-18T19:45:12Z",
      "side": 1,
      "message": "All these method definitions need to be wrapped in an \n\n#if __ANDROID_API__ \u003e\u003d 30\n#endif\n\npair. Each method also needs a trailing annotation of __INTRODUCED_IN(30)",
      "revId": "5f289d30e6c2fc1a4b45d223b95579221a1d9a7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d700c506_43740e6c",
        "filename": "libs/adbd_auth/include/adbd_auth.h",
        "patchSetId": 25
      },
      "lineNbr": 62,
      "author": {
        "id": 1010103
      },
      "writtenOn": "2020-02-18T19:39:33Z",
      "side": 1,
      "message": "Unless this is sharing the Looper that may be registered on the current thread remove this bit. It sounds like it\u0027ll co-operate with the current thread, but I\u0027m guessing it doesn\u0027t?\n\nOr if it does, document that as using the current ALooper (and does one need to already exist? Does it create one if it doesn\u0027t? etc...)",
      "range": {
        "startLine": 62,
        "startChar": 30,
        "endLine": 62,
        "endChar": 36
      },
      "revId": "5f289d30e6c2fc1a4b45d223b95579221a1d9a7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "824a9049_b3c71e04",
        "filename": "libs/adbd_auth/include/adbd_auth.h",
        "patchSetId": 25
      },
      "lineNbr": 62,
      "author": {
        "id": 1079148
      },
      "writtenOn": "2020-02-18T21:14:06Z",
      "side": 1,
      "message": "It is not a looper, it spawns its own thread that does its own logic.",
      "parentUuid": "d700c506_43740e6c",
      "range": {
        "startLine": 62,
        "startChar": 30,
        "endLine": 62,
        "endChar": 36
      },
      "revId": "5f289d30e6c2fc1a4b45d223b95579221a1d9a7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cb22d8e8_12cb5b81",
        "filename": "libs/adbd_auth/include/adbd_auth.h",
        "patchSetId": 25
      },
      "lineNbr": 78,
      "author": {
        "id": 1010103
      },
      "writtenOn": "2020-02-18T19:39:33Z",
      "side": 1,
      "message": "call this `userContext` or something. `arg` sounds like it\u0027s something given, not just a pass-through.\n\nAlso small nit but put this first please.",
      "range": {
        "startLine": 78,
        "startChar": 90,
        "endLine": 78,
        "endChar": 93
      },
      "revId": "5f289d30e6c2fc1a4b45d223b95579221a1d9a7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7ca452b1_f1127276",
        "filename": "libs/adbd_auth/include/adbd_auth.h",
        "patchSetId": 25
      },
      "lineNbr": 112,
      "author": {
        "id": 1079148
      },
      "writtenOn": "2020-02-18T22:19:37Z",
      "side": 1,
      "message": "This (and the one below) should be prefixed with adbd_auth.",
      "range": {
        "startLine": 112,
        "startChar": 9,
        "endLine": 112,
        "endChar": 34
      },
      "revId": "5f289d30e6c2fc1a4b45d223b95579221a1d9a7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ff3a1aa7_0b19ff52",
        "filename": "libs/adbd_auth/include/adbd_auth.h",
        "patchSetId": 25
      },
      "lineNbr": 113,
      "author": {
        "id": 1010103
      },
      "writtenOn": "2020-02-18T19:39:33Z",
      "side": 1,
      "message": "need to be int32_t, sizeof(enum) is variable",
      "range": {
        "startLine": 113,
        "startChar": 35,
        "endLine": 113,
        "endChar": 51
      },
      "revId": "5f289d30e6c2fc1a4b45d223b95579221a1d9a7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "94bdf642_9e3abcc2",
        "filename": "libs/adbd_auth/include/adbd_auth.h",
        "patchSetId": 25
      },
      "lineNbr": 113,
      "author": {
        "id": 1079148
      },
      "writtenOn": "2020-02-18T21:14:06Z",
      "side": 1,
      "message": "sizeof(enum) is only variable if values in the enum do not fit in the enum (i.e. we should static_assert that it\u0027s the right size, not remove type information from the signature)",
      "parentUuid": "ff3a1aa7_0b19ff52",
      "range": {
        "startLine": 113,
        "startChar": 35,
        "endLine": 113,
        "endChar": 51
      },
      "revId": "5f289d30e6c2fc1a4b45d223b95579221a1d9a7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "41667e49_e8b0ee0c",
        "filename": "libs/adbd_auth/include/adbd_auth.h",
        "patchSetId": 25
      },
      "lineNbr": 123,
      "author": {
        "id": 1010103
      },
      "writtenOn": "2020-02-18T19:39:33Z",
      "side": 1,
      "message": "same",
      "range": {
        "startLine": 123,
        "startChar": 34,
        "endLine": 123,
        "endChar": 50
      },
      "revId": "5f289d30e6c2fc1a4b45d223b95579221a1d9a7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6d5bf9e9_d304907b",
        "filename": "libs/adbd_auth/include/adbd_auth.h",
        "patchSetId": 25
      },
      "lineNbr": 129,
      "author": {
        "id": 1010103
      },
      "writtenOn": "2020-02-18T19:39:33Z",
      "side": 1,
      "message": "This appears to be unusable - remove?",
      "range": {
        "startLine": 126,
        "startChar": 0,
        "endLine": 129,
        "endChar": 51
      },
      "revId": "5f289d30e6c2fc1a4b45d223b95579221a1d9a7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d1cb1709_4dee61e7",
        "filename": "libs/adbd_auth/libadbd_auth.map.txt",
        "patchSetId": 25
      },
      "lineNbr": 1,
      "author": {
        "id": 1010103
      },
      "writtenOn": "2020-02-18T19:45:12Z",
      "side": 1,
      "message": "Have all these been added in the same release? If so they need an #introduced\u003d30 on here. If some of these were pre-existing, mark them with when they were added.",
      "revId": "5f289d30e6c2fc1a4b45d223b95579221a1d9a7f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}