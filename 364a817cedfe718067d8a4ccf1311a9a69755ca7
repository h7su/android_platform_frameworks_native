{
  "comments": [
    {
      "key": {
        "uuid": "78005dad_e3437c42",
        "filename": "libs/binder/Parcel.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2258,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2018-11-13T04:46:43Z",
      "side": 1,
      "message": "why are we detaching upon reading this? It looks like we are not doing this for Java.",
      "range": {
        "startLine": 2258,
        "startChar": 0,
        "endLine": 2258,
        "endChar": 67
      },
      "revId": "364a817cedfe718067d8a4ccf1311a9a69755ca7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f943991b_97029990",
        "filename": "libs/binder/Parcel.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2258,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2018-11-13T17:32:45Z",
      "side": 1,
      "message": "This is the right behavior when some piece of the code doesn\u0027t properly know how to handle the comm fd. It will provide the correct warning to higher-level code (that it will be unable to track the lifetime of the PFD). In the long run, we might want to support more of these features in native (by introducing something like \u0027readReliableFileDescriptor\u0027 or similar), but there isn\u0027t a big reason to now. Solution was proposed by jreck, and both him and I also talked to jsharkey about it.",
      "parentUuid": "78005dad_e3437c42",
      "range": {
        "startLine": 2258,
        "startChar": 0,
        "endLine": 2258,
        "endChar": 67
      },
      "revId": "364a817cedfe718067d8a4ccf1311a9a69755ca7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "240211ad_3577d989",
        "filename": "libs/binder/Parcel.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2258,
      "author": {
        "id": 1013030
      },
      "writtenOn": "2018-11-13T18:54:08Z",
      "side": 1,
      "message": "TEMP_FAILURE_RETRY() ?",
      "range": {
        "startLine": 2258,
        "startChar": 28,
        "endLine": 2258,
        "endChar": 33
      },
      "revId": "364a817cedfe718067d8a4ccf1311a9a69755ca7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa62d56b_3c4499ec",
        "filename": "libs/binder/Parcel.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2258,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2018-11-13T21:53:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "240211ad_3577d989",
      "range": {
        "startLine": 2258,
        "startChar": 28,
        "endLine": 2258,
        "endChar": 33
      },
      "revId": "364a817cedfe718067d8a4ccf1311a9a69755ca7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a3734e34_cd9b083c",
        "filename": "libs/binder/Parcel.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2258,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2018-11-14T03:29:33Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "f943991b_97029990",
      "range": {
        "startLine": 2258,
        "startChar": 0,
        "endLine": 2258,
        "endChar": 67
      },
      "revId": "364a817cedfe718067d8a4ccf1311a9a69755ca7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "21508669_0f18c8f0",
        "filename": "libs/binder/Parcel.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2260,
      "author": {
        "id": 1013030
      },
      "writtenOn": "2018-11-14T12:41:18Z",
      "side": 1,
      "message": "technically this is not needed ;-)",
      "range": {
        "startLine": 2260,
        "startChar": 12,
        "endLine": 2260,
        "endChar": 25
      },
      "revId": "364a817cedfe718067d8a4ccf1311a9a69755ca7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b98a9826_9a335a45",
        "filename": "libs/binder/Parcel.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2262,
      "author": {
        "id": 1013030
      },
      "writtenOn": "2018-11-13T18:54:08Z",
      "side": 1,
      "message": "this seems scary - is it possible the comm fd already got closed and we know fail a transaction we wouldn\u0027t fail previously?",
      "range": {
        "startLine": 2262,
        "startChar": 19,
        "endLine": 2262,
        "endChar": 27
      },
      "revId": "364a817cedfe718067d8a4ccf1311a9a69755ca7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e4f81fbb_0de0adce",
        "filename": "libs/binder/Parcel.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2262,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2018-11-13T21:53:13Z",
      "side": 1,
      "message": "well, if the type declares that it has a comm fd, I think it should probably have a valid one. I think we should know about these types of issues. We\u0027ll also have plenty of time to let this soak.",
      "parentUuid": "b98a9826_9a335a45",
      "range": {
        "startLine": 2262,
        "startChar": 19,
        "endLine": 2262,
        "endChar": 27
      },
      "revId": "364a817cedfe718067d8a4ccf1311a9a69755ca7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "993f6f5d_89fdd2cd",
        "filename": "libs/binder/Parcel.cpp",
        "patchSetId": 1
      },
      "lineNbr": 2262,
      "author": {
        "id": 1013030
      },
      "writtenOn": "2018-11-14T12:41:18Z",
      "side": 1,
      "message": "I\u0027m also thinking of SELinux denials etc. I agree it\u0027s good to know, I\u0027m just worried about retroactively failing transactions that would previously have passed. Guess we\u0027ll find out, at least for Pixel.",
      "parentUuid": "e4f81fbb_0de0adce",
      "range": {
        "startLine": 2262,
        "startChar": 19,
        "endLine": 2262,
        "endChar": 27
      },
      "revId": "364a817cedfe718067d8a4ccf1311a9a69755ca7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}