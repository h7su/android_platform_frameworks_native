{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "4844c5ea_fbc4939e",
        "filename": "libs/binder/rust/tests/parcel_fuzzer/parcel_fuzzer.rs",
        "patchSetId": 2
      },
      "lineNbr": 97,
      "author": {
        "id": 1944400
      },
      "writtenOn": "2022-11-01T19:58:46Z",
      "side": 1,
      "message": "This is using the same bytes to generate the parcel and to read from it and also using the same bytes each iteration.\n\nMaybe we can put more of the logic into the `Operations` data type\n\n```\n#[derive(Arbitrary, Debug)]\nenum Operations\u003c\u0027a\u003e {\n    ...\n    \n    Read { parcel_data: \u0026\u0027a [u8], read_ops: Vec\u003cReadOp\u003e },\n}\n\n#[derive(Arbitrary, Debug)]\nenum ReadOp\u003c\u0027a\u003e {\n    SetPosition(i32),\n    GetDataSize,\n    ReadParcelableHolder { stability: bool },\n    ReadBasicDataType { data_type_index: usize },\n}\n```\n\nmaybe could also implement `Arbitrary` for `Parcel` (it would just delegate to `create_random_parcel`), then have `Read { parcel_data: Parcel, read_ops: Vec\u003cReadOp\u003e },`",
      "range": {
        "startLine": 95,
        "startChar": 0,
        "endLine": 97,
        "endChar": 46
      },
      "revId": "09aa300f51fb2a7459224d23f3281404969e99bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "55d3c433_1681cf86",
        "filename": "libs/binder/rust/tests/parcel_fuzzer/parcel_fuzzer.rs",
        "patchSetId": 2
      },
      "lineNbr": 97,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-11-01T22:36:50Z",
      "side": 1,
      "message": "Right, we should split off part data before passing it into create_random_parcel.",
      "parentUuid": "4844c5ea_fbc4939e",
      "range": {
        "startLine": 95,
        "startChar": 0,
        "endLine": 97,
        "endChar": 46
      },
      "revId": "09aa300f51fb2a7459224d23f3281404969e99bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3410cca9_c1596cf4",
        "filename": "libs/binder/rust/tests/parcel_fuzzer/parcel_fuzzer.rs",
        "patchSetId": 2
      },
      "lineNbr": 97,
      "author": {
        "id": 1956258
      },
      "writtenOn": "2022-11-02T20:41:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "55d3c433_1681cf86",
      "range": {
        "startLine": 95,
        "startChar": 0,
        "endLine": 97,
        "endChar": 46
      },
      "revId": "09aa300f51fb2a7459224d23f3281404969e99bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ca40592a_f880ffc2",
        "filename": "libs/binder/rust/tests/parcel_fuzzer/read_utils.rs",
        "patchSetId": 2
      },
      "lineNbr": 44,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-11-01T22:40:29Z",
      "side": 1,
      "message": "just \u0027;\u0027 (still return an error if it fails)",
      "range": {
        "startLine": 43,
        "startChar": 39,
        "endLine": 44,
        "endChar": 18
      },
      "revId": "09aa300f51fb2a7459224d23f3281404969e99bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3e99e0d0_07b08366",
        "filename": "libs/binder/rust/tests/parcel_fuzzer/read_utils.rs",
        "patchSetId": 2
      },
      "lineNbr": 44,
      "author": {
        "id": 1956258
      },
      "writtenOn": "2022-11-02T20:41:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ca40592a_f880ffc2",
      "range": {
        "startLine": 43,
        "startChar": 39,
        "endLine": 44,
        "endChar": 18
      },
      "revId": "09aa300f51fb2a7459224d23f3281404969e99bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "92ca7840_c097561a",
        "filename": "libs/binder/rust/tests/parcel_fuzzer/read_utils.rs",
        "patchSetId": 2
      },
      "lineNbr": 53,
      "author": {
        "id": 1944400
      },
      "writtenOn": "2022-11-01T19:58:46Z",
      "side": 1,
      "message": "would it make more sense to fail if there isn\u0027t enough data?",
      "revId": "09aa300f51fb2a7459224d23f3281404969e99bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cb4cc93b_75245544",
        "filename": "libs/binder/rust/tests/parcel_fuzzer/read_utils.rs",
        "patchSetId": 2
      },
      "lineNbr": 53,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-11-01T22:40:29Z",
      "side": 1,
      "message": "+1 - we want to test reading a parcel which doesn\u0027t have enough data",
      "parentUuid": "92ca7840_c097561a",
      "revId": "09aa300f51fb2a7459224d23f3281404969e99bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "300f03d0_1bcdb15b",
        "filename": "libs/binder/rust/tests/parcel_fuzzer/read_utils.rs",
        "patchSetId": 2
      },
      "lineNbr": 53,
      "author": {
        "id": 1956258
      },
      "writtenOn": "2022-11-02T20:41:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cb4cc93b_75245544",
      "revId": "09aa300f51fb2a7459224d23f3281404969e99bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fa185d1a_576fc2cd",
        "filename": "libs/binder/rust/tests/parcel_fuzzer/read_utils.rs",
        "patchSetId": 2
      },
      "lineNbr": 83,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-11-01T22:40:29Z",
      "side": 1,
      "message": "should there be more here? Or if this is the real range, then `unwrap_or(Stability::Local)` should be an abort?",
      "range": {
        "startLine": 83,
        "startChar": 47,
        "endLine": 83,
        "endChar": 52
      },
      "revId": "09aa300f51fb2a7459224d23f3281404969e99bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0149cd7f_f8c4816d",
        "filename": "libs/binder/rust/tests/parcel_fuzzer/read_utils.rs",
        "patchSetId": 2
      },
      "lineNbr": 83,
      "author": {
        "id": 1956258
      },
      "writtenOn": "2022-11-02T20:41:27Z",
      "side": 1,
      "message": "There are only two values for stability. Changed this to set stability based on boolean.",
      "parentUuid": "fa185d1a_576fc2cd",
      "range": {
        "startLine": 83,
        "startChar": 47,
        "endLine": 83,
        "endChar": 52
      },
      "revId": "09aa300f51fb2a7459224d23f3281404969e99bc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}