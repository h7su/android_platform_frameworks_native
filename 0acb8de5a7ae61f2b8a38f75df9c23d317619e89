{
  "comments": [
    {
      "key": {
        "uuid": "4e929d9e_d72ecd64",
        "filename": "libs/input/tests/fuzzers/InputTransportKeyEvent_fuzzer.cpp",
        "patchSetId": 3
      },
      "lineNbr": 29,
      "author": {
        "id": 1100093
      },
      "writtenOn": "2020-07-28T00:36:34Z",
      "side": 1,
      "message": "500 is pretty big, on avg you are wasting 250 bytes of entropy on this channel name, is the name used for something scary?",
      "range": {
        "startLine": 29,
        "startChar": 60,
        "endLine": 29,
        "endChar": 63
      },
      "revId": "0acb8de5a7ae61f2b8a38f75df9c23d317619e89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f169a125_7c888fda",
        "filename": "libs/input/tests/fuzzers/InputTransportMotionEvent_fuzzer.cpp",
        "patchSetId": 3
      },
      "lineNbr": 28,
      "author": {
        "id": 1100093
      },
      "writtenOn": "2020-07-28T00:36:34Z",
      "side": 1,
      "message": "same comment",
      "range": {
        "startLine": 28,
        "startChar": 60,
        "endLine": 28,
        "endChar": 63
      },
      "revId": "0acb8de5a7ae61f2b8a38f75df9c23d317619e89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d00f1087_af0d8163",
        "filename": "libs/input/tests/fuzzers/InputTransportMotionEvent_fuzzer.cpp",
        "patchSetId": 3
      },
      "lineNbr": 42,
      "author": {
        "id": 1100093
      },
      "writtenOn": "2020-07-28T00:36:34Z",
      "side": 1,
      "message": "why -1 if you have a range?",
      "range": {
        "startLine": 42,
        "startChar": 23,
        "endLine": 42,
        "endChar": 70
      },
      "revId": "0acb8de5a7ae61f2b8a38f75df9c23d317619e89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2b116abd_cab70298",
        "filename": "libs/input/tests/fuzzers/InputTransportMotionEvent_fuzzer.cpp",
        "patchSetId": 3
      },
      "lineNbr": 46,
      "author": {
        "id": 1100093
      },
      "writtenOn": "2020-07-28T00:36:34Z",
      "side": 1,
      "message": "where does 10 come from?",
      "range": {
        "startLine": 46,
        "startChar": 63,
        "endLine": 46,
        "endChar": 66
      },
      "revId": "0acb8de5a7ae61f2b8a38f75df9c23d317619e89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2f54a532_344750a5",
        "filename": "libs/input/tests/fuzzers/InputTransportMotionEvent_fuzzer.cpp",
        "patchSetId": 3
      },
      "lineNbr": 56,
      "author": {
        "id": 1100093
      },
      "writtenOn": "2020-07-28T00:36:34Z",
      "side": 1,
      "message": "Should we limit this the 2 times here to reasonable times? I assume they\u0027re not controlled?  Though mayvbe system clock could be",
      "range": {
        "startLine": 56,
        "startChar": 12,
        "endLine": 56,
        "endChar": 21
      },
      "revId": "0acb8de5a7ae61f2b8a38f75df9c23d317619e89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2f3bcb5e_1a4720a7",
        "filename": "libs/input/tests/fuzzers/InputTransportMotionEvent_fuzzer.cpp",
        "patchSetId": 3
      },
      "lineNbr": 65,
      "author": {
        "id": 1100093
      },
      "writtenOn": "2020-07-28T00:36:34Z",
      "side": 1,
      "message": "where do these limits come from?",
      "range": {
        "startLine": 65,
        "startChar": 73,
        "endLine": 65,
        "endChar": 82
      },
      "revId": "0acb8de5a7ae61f2b8a38f75df9c23d317619e89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "08f8875c_a46da0a7",
        "filename": "libs/input/tests/fuzzers/InputTransportMotionEvent_fuzzer.cpp",
        "patchSetId": 3
      },
      "lineNbr": 68,
      "author": {
        "id": 1100093
      },
      "writtenOn": "2020-07-28T00:36:34Z",
      "side": 1,
      "message": "Where does 48 come from?",
      "range": {
        "startLine": 68,
        "startChar": 71,
        "endLine": 68,
        "endChar": 73
      },
      "revId": "0acb8de5a7ae61f2b8a38f75df9c23d317619e89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "39269443_69270e9a",
        "filename": "libs/input/tests/fuzzers/KeyCharacterMap_fuzzer.cpp",
        "patchSetId": 3
      },
      "lineNbr": 28,
      "author": {
        "id": 1100093
      },
      "writtenOn": "2020-07-28T00:36:34Z",
      "side": 1,
      "message": "Is this enum? In genreal if its an enum, include the enum here and use maxes and stuff.  This way if the enum adds a new format we can auto fuzz it in the futuer",
      "range": {
        "startLine": 28,
        "startChar": 87,
        "endLine": 28,
        "endChar": 89
      },
      "revId": "0acb8de5a7ae61f2b8a38f75df9c23d317619e89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f05d19f1_b86377eb",
        "filename": "libs/input/tests/fuzzers/KeyCharacterMap_fuzzer.cpp",
        "patchSetId": 3
      },
      "lineNbr": 43,
      "author": {
        "id": 1100093
      },
      "writtenOn": "2020-07-28T00:36:34Z",
      "side": 1,
      "message": "Can you go 1 layer deeper and avoid writing to the file system?  What is the exec/s here?",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 43,
        "endChar": 57
      },
      "revId": "0acb8de5a7ae61f2b8a38f75df9c23d317619e89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "92f92a3f_19c08832",
        "filename": "libs/input/tests/fuzzers/VelocityTracker_fuzzer.cpp",
        "patchSetId": 3
      },
      "lineNbr": 39,
      "author": {
        "id": 1100093
      },
      "writtenOn": "2020-07-28T00:36:34Z",
      "side": 1,
      "message": "How hard is it to get these via includes so if they change we can get them or are these strings in the includes and we #defined them here because you can\u0027t include them?",
      "range": {
        "startLine": 27,
        "startChar": 0,
        "endLine": 39,
        "endChar": 32
      },
      "revId": "0acb8de5a7ae61f2b8a38f75df9c23d317619e89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a373d276_ad9edfa5",
        "filename": "libs/input/tests/fuzzers/VelocityTracker_fuzzer.cpp",
        "patchSetId": 3
      },
      "lineNbr": 43,
      "author": {
        "id": 1100093
      },
      "writtenOn": "2020-07-28T00:36:34Z",
      "side": 1,
      "message": "What happens if you don\u0027t set this id but use another one, is there any code path that doesn\u0027t get hit in the test mode?",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 43,
        "endChar": 87
      },
      "revId": "0acb8de5a7ae61f2b8a38f75df9c23d317619e89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eb04570f_1d3fcc53",
        "filename": "libs/input/tests/fuzzers/VelocityTracker_fuzzer.cpp",
        "patchSetId": 3
      },
      "lineNbr": 119,
      "author": {
        "id": 1100093
      },
      "writtenOn": "2020-07-28T00:36:34Z",
      "side": 1,
      "message": "Comment why this (I think I know but why?)",
      "range": {
        "startLine": 110,
        "startChar": 0,
        "endLine": 119,
        "endChar": 9
      },
      "revId": "0acb8de5a7ae61f2b8a38f75df9c23d317619e89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5a5d2e34_efac6225",
        "filename": "libs/input/tests/fuzzers/VelocityTracker_fuzzer.cpp",
        "patchSetId": 3
      },
      "lineNbr": 207,
      "author": {
        "id": 1100093
      },
      "writtenOn": "2020-07-28T00:36:34Z",
      "side": 1,
      "message": "Do events have to happen in coronological order?",
      "range": {
        "startLine": 205,
        "startChar": 0,
        "endLine": 207,
        "endChar": 42
      },
      "revId": "0acb8de5a7ae61f2b8a38f75df9c23d317619e89",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}