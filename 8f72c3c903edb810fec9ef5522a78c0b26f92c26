{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c9c775e0_aa887a71",
        "filename": "libs/binder/BpBinder.cpp",
        "patchSetId": 3
      },
      "lineNbr": 119,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-08-10T01:34:02Z",
      "side": 1,
      "message": "check return value - in the case that Tag* from L110 is non-null, but the binder promotion fails, we should reuse that Tag, rather than creating a new one on L115, which is silently dropped here",
      "range": {
        "startLine": 119,
        "startChar": 0,
        "endLine": 119,
        "endChar": 35
      },
      "revId": "8f72c3c903edb810fec9ef5522a78c0b26f92c26",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8c81dcd7_e7e352b8",
        "filename": "libs/binder/BpBinder.cpp",
        "patchSetId": 3
      },
      "lineNbr": 119,
      "author": {
        "id": 1944400
      },
      "writtenOn": "2022-08-10T18:09:25Z",
      "side": 1,
      "message": "maybe set defaults in the Tag struct\n\n```\n        struct entry_t {\n            void* object \u003d nullptr;\n            void* cleanupCookie \u003d nullptr;\n            IBinder::object_cleanup_func func \u003d nullptr;\n        };\n```\n\nand then do something like\n\n```\nentry_t\u0026 entry \u003d mObjects[objectID];\nif (entry.object !\u003d nullptr) {\n        if (auto attached \u003d static_cast\u003cBpBinder::Tag*\u003e(entry.object)-\u003ebinder.promote()) {\n            return attached;\n        }\n} else {\n        entry.object \u003d new BpBinder::Tag;\n}\n// ...\n```",
      "parentUuid": "c9c775e0_aa887a71",
      "range": {
        "startLine": 119,
        "startChar": 0,
        "endLine": 119,
        "endChar": 35
      },
      "revId": "8f72c3c903edb810fec9ef5522a78c0b26f92c26",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b9cfcb9d_9162768a",
        "filename": "libs/binder/BpBinder.cpp",
        "patchSetId": 3
      },
      "lineNbr": 119,
      "author": {
        "id": 1644679
      },
      "writtenOn": "2022-08-10T18:18:51Z",
      "side": 1,
      "message": "What do you think about this?",
      "parentUuid": "c9c775e0_aa887a71",
      "range": {
        "startLine": 119,
        "startChar": 0,
        "endLine": 119,
        "endChar": 35
      },
      "revId": "8f72c3c903edb810fec9ef5522a78c0b26f92c26",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1509f9e3_c173e3a8",
        "filename": "libs/binder/BpBinder.cpp",
        "patchSetId": 3
      },
      "lineNbr": 119,
      "author": {
        "id": 1944400
      },
      "writtenOn": "2022-08-11T21:35:32Z",
      "side": 1,
      "message": "lgtm. imo checking the `insert` return is overkill now",
      "parentUuid": "b9cfcb9d_9162768a",
      "range": {
        "startLine": 119,
        "startChar": 0,
        "endLine": 119,
        "endChar": 35
      },
      "revId": "8f72c3c903edb810fec9ef5522a78c0b26f92c26",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cc81d9e7_0123009a",
        "filename": "libs/binder/include/binder/BpBinder.h",
        "patchSetId": 3
      },
      "lineNbr": 122,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-08-10T01:34:02Z",
      "side": 1,
      "message": "this type can be defined in the .cpp file and put in an anonymous namespace",
      "range": {
        "startLine": 118,
        "startChar": 0,
        "endLine": 122,
        "endChar": 0
      },
      "revId": "8f72c3c903edb810fec9ef5522a78c0b26f92c26",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2d5a9d98_cef5adae",
        "filename": "libs/binder/include/binder/BpBinder.h",
        "patchSetId": 3
      },
      "lineNbr": 122,
      "author": {
        "id": 1644679
      },
      "writtenOn": "2022-08-10T18:18:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cc81d9e7_0123009a",
      "range": {
        "startLine": 118,
        "startChar": 0,
        "endLine": 122,
        "endChar": 0
      },
      "revId": "8f72c3c903edb810fec9ef5522a78c0b26f92c26",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}