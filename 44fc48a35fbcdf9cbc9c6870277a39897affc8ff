{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "d023aeb7_b81b0423",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1040213
      },
      "writtenOn": "2021-05-14T21:02:30Z",
      "side": 1,
      "message": "looks like a good check, some thoughts, feel free to ignore.",
      "revId": "44fc48a35fbcdf9cbc9c6870277a39897affc8ff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "202907d4_cfc9de0d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-05-14T21:13:08Z",
      "side": 1,
      "message": "yeah, I think it\u0027s all good advice. Will fix if there is anything that\u0027s critical to fix or if TH fails, otherwise will keep in mind next time I touch this.",
      "parentUuid": "d023aeb7_b81b0423",
      "revId": "44fc48a35fbcdf9cbc9c6870277a39897affc8ff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9287fcd8_4d4cfe68",
        "filename": "libs/binder/Parcel.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1473,
      "author": {
        "id": 1040213
      },
      "writtenOn": "2021-05-14T21:02:30Z",
      "side": 1,
      "message": "nit: a client abort would be ok but isn\u0027t this a server side abort?  would prefer to return NO_MEMORY here.",
      "range": {
        "startLine": 1473,
        "startChar": 4,
        "endLine": 1473,
        "endChar": 23
      },
      "revId": "44fc48a35fbcdf9cbc9c6870277a39897affc8ff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d5f8dfa0_1b12a045",
        "filename": "libs/binder/Parcel.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1473,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-05-14T21:13:08Z",
      "side": 1,
      "message": "this is for elmSize (sizeof(T)). This abort won\u0027t happen dynamically, but it indicates a problem in the server side. I\u0027m adding it to justify the cast later.",
      "parentUuid": "9287fcd8_4d4cfe68",
      "range": {
        "startLine": 1473,
        "startChar": 4,
        "endLine": 1473,
        "endChar": 23
      },
      "revId": "44fc48a35fbcdf9cbc9c6870277a39897affc8ff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "05158cc0_0693b05d",
        "filename": "libs/binder/Parcel.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1475,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-05-14T20:03:47Z",
      "side": 1,
      "message": "this is also an approximation because something might be more bytes than it is on the parcel. This won\u0027t be important for AIDL generated structures, but it could be important for some other structures. That might be one reason to target this change for T.",
      "range": {
        "startLine": 1475,
        "startChar": 7,
        "endLine": 1475,
        "endChar": 20
      },
      "revId": "44fc48a35fbcdf9cbc9c6870277a39897affc8ff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dbadf946_d791971b",
        "filename": "libs/binder/Parcel.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1475,
      "author": {
        "id": 1040213
      },
      "writtenOn": "2021-05-14T21:02:30Z",
      "side": 1,
      "message": "shouldn\u0027t this be the minimum element size (as written to binder)?  in any case, for large data, perhaps something like shared memory/MemoryDealer should be used.",
      "parentUuid": "05158cc0_0693b05d",
      "range": {
        "startLine": 1475,
        "startChar": 7,
        "endLine": 1475,
        "endChar": 20
      },
      "revId": "44fc48a35fbcdf9cbc9c6870277a39897affc8ff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "48d8a65f_3f4dc7ba",
        "filename": "libs/binder/Parcel.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1479,
      "author": {
        "id": 1040213
      },
      "writtenOn": "2021-05-14T21:02:30Z",
      "side": 1,
      "message": "nit: this could be safely cast to int32_t since you check on line 1473, then the builtin function implementation could get simpler.",
      "range": {
        "startLine": 1479,
        "startChar": 32,
        "endLine": 1479,
        "endChar": 33
      },
      "revId": "44fc48a35fbcdf9cbc9c6870277a39897affc8ff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "37d771ba_0d9010b6",
        "filename": "libs/binder/Parcel.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1479,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-05-14T21:13:08Z",
      "side": 1,
      "message": "You mean use __builtin_mul_overflow_p instead? I\u0027m on the fence.",
      "parentUuid": "48d8a65f_3f4dc7ba",
      "range": {
        "startLine": 1479,
        "startChar": 32,
        "endLine": 1479,
        "endChar": 33
      },
      "revId": "44fc48a35fbcdf9cbc9c6870277a39897affc8ff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ffd6a75e_59dcd958",
        "filename": "libs/binder/Parcel.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1483,
      "author": {
        "id": 1040213
      },
      "writtenOn": "2021-05-14T21:02:30Z",
      "side": 1,
      "message": "nit: perhaps expose BINDER_VM_SIZE and use that instead?\n\nhttps://cs.android.com/android/platform/superproject/+/master:frameworks/native/libs/binder/ProcessState.cpp;drc\u003d6ba5a259faf092d127a1f417d5bfe389f2236198;l\u003d44",
      "range": {
        "startLine": 1483,
        "startChar": 22,
        "endLine": 1483,
        "endChar": 40
      },
      "revId": "44fc48a35fbcdf9cbc9c6870277a39897affc8ff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "154653ec_3f482d26",
        "filename": "libs/binder/Parcel.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1485,
      "author": {
        "id": 1040213
      },
      "writtenOn": "2021-05-14T21:02:30Z",
      "side": 1,
      "message": "nit: why not just \u003e?  it seems by the naming that \u003d\u003d max would be permitted.",
      "range": {
        "startLine": 1485,
        "startChar": 23,
        "endLine": 1485,
        "endChar": 25
      },
      "revId": "44fc48a35fbcdf9cbc9c6870277a39897affc8ff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2d23a2d7_d32baca9",
        "filename": "libs/binder/Parcel.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1485,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-05-14T21:13:08Z",
      "side": 1,
      "message": "I thought about this when typing it and decided if the size is exactly 1MB it deserves to fail (there always be a status header for the parcel so in reality a single transaction is limited to be slightly larger than the total transaction size).\n\nThat being said, the largest transactions in practice are ~300KB",
      "parentUuid": "154653ec_3f482d26",
      "range": {
        "startLine": 1485,
        "startChar": 23,
        "endLine": 1485,
        "endChar": 25
      },
      "revId": "44fc48a35fbcdf9cbc9c6870277a39897affc8ff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4496bd5d_4f1edc99",
        "filename": "libs/binder/Parcel.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1485,
      "author": {
        "id": 1040213
      },
      "writtenOn": "2021-05-14T21:29:33Z",
      "side": 1,
      "message": "the ndk code :-)\n\n    if (size \u003e 1000000) return STATUS_NO_MEMORY;",
      "parentUuid": "2d23a2d7_d32baca9",
      "range": {
        "startLine": 1485,
        "startChar": 23,
        "endLine": 1485,
        "endChar": 25
      },
      "revId": "44fc48a35fbcdf9cbc9c6870277a39897affc8ff",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}