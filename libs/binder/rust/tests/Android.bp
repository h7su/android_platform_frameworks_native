rust_test {
    name: "rustBinderTest",
    srcs: ["integration.rs"],
    rustlibs: [
        "libbinder_rs",
        "libselinux_bindgen",
    ],
    shared_libs: [
        "libselinux",
    ],
    // For the binaries to be pushed properly as specified in AndroidTest.xml,
    // this cannot be the same as the module name.
    stem: "rustBinderTestClientBinary",
    test_suites: ["general-tests"],
}

rust_test {
    name: "rustBinderTestService",
    srcs: ["integration.rs"],
    rustlibs: [
        "libbinder_rs",
        "liblibc",
    ],
    // For the binaries to be pushed properly as specified in AndroidTest.xml,
    // this cannot be the same as the module name.
    stem: "rustBinderTestServiceBinary",
    test_harness: false,
    // TODO(b/164473602): Remove this setting and add the module to `data`
    // attribute of rustBinderTest.
    auto_gen_config: false,
    test_suites: ["general-tests"],
}

cc_test {
    name: "rustBinderSerializationTest",
    shared_libs: [
        "libbinder",
        "libbinder_ndk",
        "libutils",
    ],
    static_libs: [
        "libbinder_rs_serialization_test"
    ],
    srcs: [
        "serialization.cpp",
    ],
    auto_gen_config: true,
    test_suites: ["general-tests"],
}

rust_bindgen {
    name: "libbinder_rs_serialization_bindgen",
    crate_name: "binder_rs_serialization_bindgen",
    wrapper_src: "serialization.h",
    source_stem: "bindings",
    cflags: [
        "-x c++",
        "-std=gnu++17",
    ],
    bindgen_flags: [
        "--whitelist-type", "Transaction",
        "--whitelist-var", "TESTDATA_.*",
    ],

    shared_libs: [
        "libbinder",
        "libc++",
    ],
}

rust_ffi_static {
    name: "libbinder_rs_serialization_test",
    crate_name: "binder_rs_serialization_test",
    srcs: [
        "serialization.rs",
        ":libbinder_rs_serialization_bindgen",
    ],
    rustlibs: [
        "libbinder_rs",
    ],
}
