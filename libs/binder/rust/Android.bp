// This file is generated by cargo2android.py.

cc_library_static {
    name: "libbinder_rs_interface",
    shared_libs: [
        "libbinder",
    ],
    srcs: [
        "src/native/BinderInterface.cpp",
    ],
}

rust_library_rlib {
    name: "libbinder_rs",
    crate_name: "binder",
    srcs: ["src/lib.rs"],
    edition: "2018",
    shared_libs: [
        "libbinder",
        "libutils",
    ],
    static_libs: [
        "libbinder_rs_interface",
    ],
    rlibs: [
        "liblibc",
        "libstd.static",
        "libtest.static",
    ],
    flags: [
        "-C debuginfo=2",
    ],
}

rust_test {
    name: "libbinder_rs-internal_test",
    crate_name: "binder",
    srcs: ["src/lib.rs"],
    test_suites: ["general-tests"],
    auto_gen_config: true,
    edition: "2018",
    shared_libs: [
        "libbinder",
        "libutils",
        "libc++",
    ],

    // TODO: why doesn't the rlib include its static deps?
    static_libs: [
        "libbinder_rs_interface",
    ],
    // On device test must be statically linked because we don't ship dynamic
    // rust libs
    rlibs: [
        "liblibc",
        "libstd.static",
        "libtest.static",
    ],
}

rust_test {
    name: "libbinder_rs-integration_test",
    srcs: ["tests/client.rs", "tests/service.rs"],
    test_suites: ["general-tests"],
    auto_gen_config: true,
    edition: "2018",
    shared_libs: [
        "libbinder",
        "libutils",
        "libutilscallstack",
        "libc++",
    ],

    // TODO: why doesn't the rlib include its static deps?
    static_libs: [
        "libbinder_rs_interface",
    ],
    // On device test must be statically linked because we don't ship dynamic
    // rust libs
    rlibs: [
        "libbinder_rs",
        "libstd.static",
        "libtest.static",
    ],
    flags: [
        "-C debuginfo=2",
    ],
}
