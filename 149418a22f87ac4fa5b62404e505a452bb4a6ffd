{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "65f12e2b_06faa5e1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1966485
      },
      "writtenOn": "2022-09-28T23:24:47Z",
      "side": 1,
      "message": "Upstream from Meta.",
      "revId": "149418a22f87ac4fa5b62404e505a452bb4a6ffd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b4093fa5_dc6875a7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1099928
      },
      "writtenOn": "2023-01-26T15:48:25Z",
      "side": 1,
      "message": "Sorry, slipped through my inbox.",
      "revId": "149418a22f87ac4fa5b62404e505a452bb4a6ffd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fcbc183d_6d70cf88",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1894651
      },
      "writtenOn": "2023-01-31T00:57:10Z",
      "side": 1,
      "message": "(I\u0027m generally leery of using the assertions without putting up as many guard rails as possible, having been bitten by a not-actually-true assertion before. IMO, the way I had things was better because of this, but let me know if you disagree still and I\u0027ll do it your way)",
      "revId": "149418a22f87ac4fa5b62404e505a452bb4a6ffd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "08db2f29_329ac162",
        "filename": "services/surfaceflinger/Layer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 257,
      "author": {
        "id": 1099928
      },
      "writtenOn": "2023-01-26T15:48:25Z",
      "side": 1,
      "message": "Why not just annotate the function `REQUIRES(...)`?",
      "range": {
        "startLine": 257,
        "startChar": 4,
        "endLine": 257,
        "endChar": 17
      },
      "revId": "149418a22f87ac4fa5b62404e505a452bb4a6ffd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "11ee2d7d_2751b9aa",
        "filename": "services/surfaceflinger/Layer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 257,
      "author": {
        "id": 1894651
      },
      "writtenOn": "2023-01-31T00:57:10Z",
      "side": 1,
      "message": "The function is annotated with REQUIRES, this statement is there for the benefit of people reading the code to convince them that the ASSERT_MUTEX/FakeGuard are correct, and so that if someone makes the function no longer annotated as `REQUIRES(...)`, they\u0027ll hopefully notice this.",
      "parentUuid": "08db2f29_329ac162",
      "range": {
        "startLine": 257,
        "startChar": 4,
        "endLine": 257,
        "endChar": 17
      },
      "revId": "149418a22f87ac4fa5b62404e505a452bb4a6ffd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "51968379_92b7714f",
        "filename": "services/surfaceflinger/Layer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 257,
      "author": {
        "id": 1099928
      },
      "writtenOn": "2023-02-08T23:31:04Z",
      "side": 1,
      "message": "OK, a granular assertion sounds beneficial, but IMO the more intuitive name for this macro is `ASSERT_MUTEX`. Could we rename, and remove the original `ASSERT_MUTEX` in favor of `FakeGuard`?",
      "parentUuid": "11ee2d7d_2751b9aa",
      "range": {
        "startLine": 257,
        "startChar": 4,
        "endLine": 257,
        "endChar": 17
      },
      "revId": "149418a22f87ac4fa5b62404e505a452bb4a6ffd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eb478a81_64bdc553",
        "filename": "services/surfaceflinger/Layer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 257,
      "author": {
        "id": 1894651
      },
      "writtenOn": "2023-02-09T00:30:14Z",
      "side": 1,
      "message": "Deleted the line entirely in favor of marking the lambda as REQUIRES.\n\n(I don\u0027t think it\u0027s beneficial to rename ASSERT_MUTEX though, which still needs to stick around to implement MUTEX_ALIAS: Wthread-safety uses \"assert\" to mean you\u0027re telling the compiler that you hold the mutex, and this is the opposite, it\u0027s asking the compiler to reject your code if you don\u0027t hold the mutex.)",
      "parentUuid": "51968379_92b7714f",
      "range": {
        "startLine": 257,
        "startChar": 4,
        "endLine": 257,
        "endChar": 17
      },
      "revId": "149418a22f87ac4fa5b62404e505a452bb4a6ffd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "49331ba3_cc49c345",
        "filename": "services/surfaceflinger/Layer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 259,
      "author": {
        "id": 1099928
      },
      "writtenOn": "2023-01-26T15:48:25Z",
      "side": 1,
      "message": "This seems synonymous with:\n\n    ftl::FakeGuard guard(layer-\u003emFlinger-\u003emStateLock);",
      "range": {
        "startLine": 259,
        "startChar": 8,
        "endLine": 259,
        "endChar": 20
      },
      "revId": "149418a22f87ac4fa5b62404e505a452bb4a6ffd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "81601e06_bb597a8f",
        "filename": "services/surfaceflinger/Layer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 259,
      "author": {
        "id": 1894651
      },
      "writtenOn": "2023-01-31T00:57:10Z",
      "side": 1,
      "message": "It is, but this was for symmetry with the REQUIRE_MUTEX above to make it harder to change one without the other.",
      "parentUuid": "49331ba3_cc49c345",
      "range": {
        "startLine": 259,
        "startChar": 8,
        "endLine": 259,
        "endChar": 20
      },
      "revId": "149418a22f87ac4fa5b62404e505a452bb4a6ffd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "31a0630d_3b16e88b",
        "filename": "services/surfaceflinger/Layer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 259,
      "author": {
        "id": 1099928
      },
      "writtenOn": "2023-02-08T23:31:04Z",
      "side": 1,
      "message": "Assuming the lambda can be annotated with `REQUIRES(mFlinger-\u003emStateLock)`, could we use `MUTEX_ALIAS` here to avoid asymmetry?",
      "parentUuid": "81601e06_bb597a8f",
      "range": {
        "startLine": 259,
        "startChar": 8,
        "endLine": 259,
        "endChar": 20
      },
      "revId": "149418a22f87ac4fa5b62404e505a452bb4a6ffd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6cf1df6d_b9654a1e",
        "filename": "services/surfaceflinger/Layer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 259,
      "author": {
        "id": 1894651
      },
      "writtenOn": "2023-02-09T00:30:14Z",
      "side": 1,
      "message": "We can actually annotate it with REQUIRES(layer-\u003emFlinger-\u003emStateLock) directly, because all of the thread safety annotations disappear when the lambda gets stuffed in a std::function. I went with this, let me know if you prefer using the MUTEX_ALIAS here.",
      "parentUuid": "31a0630d_3b16e88b",
      "range": {
        "startLine": 259,
        "startChar": 8,
        "endLine": 259,
        "endChar": 20
      },
      "revId": "149418a22f87ac4fa5b62404e505a452bb4a6ffd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b7014aaf_4171a4d9",
        "filename": "services/surfaceflinger/Layer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 941,
      "author": {
        "id": 1099928
      },
      "writtenOn": "2023-01-26T15:48:25Z",
      "side": 1,
      "message": "Ditto: This is equivalent to annotating `setBackgroundColor` with `REQUIRES(mFlinger-\u003emStateLock)`, and suppressing analysis for this alias using `ftl::FakeGuard`.",
      "range": {
        "startLine": 941,
        "startChar": 12,
        "endLine": 941,
        "endChar": 23
      },
      "revId": "149418a22f87ac4fa5b62404e505a452bb4a6ffd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "988339ee_a318a7af",
        "filename": "services/surfaceflinger/Layer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 941,
      "author": {
        "id": 1894651
      },
      "writtenOn": "2023-01-31T00:57:10Z",
      "side": 1,
      "message": "I don\u0027t think this is equivalent: if you accidentally (or intentionally) remove the REQUIRES from setBackgroundColor, your proposal would silently keep working, whereas this would fail to compile until you remove the incorrect assertion.",
      "parentUuid": "b7014aaf_4171a4d9",
      "range": {
        "startLine": 941,
        "startChar": 12,
        "endLine": 941,
        "endChar": 23
      },
      "revId": "149418a22f87ac4fa5b62404e505a452bb4a6ffd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ade8280d_d0c1e361",
        "filename": "services/surfaceflinger/Layer.h",
        "patchSetId": 1
      },
      "lineNbr": 898,
      "author": {
        "id": 1099928
      },
      "writtenOn": "2023-02-08T23:31:04Z",
      "side": 1,
      "message": "Can the pointer actually be `const`?",
      "range": {
        "startLine": 898,
        "startChar": 7,
        "endLine": 898,
        "endChar": 15
      },
      "revId": "149418a22f87ac4fa5b62404e505a452bb4a6ffd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "07f5bb79_cd4d7faa",
        "filename": "services/surfaceflinger/Layer.h",
        "patchSetId": 1
      },
      "lineNbr": 898,
      "author": {
        "id": 1894651
      },
      "writtenOn": "2023-02-09T00:30:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ade8280d_d0c1e361",
      "range": {
        "startLine": 898,
        "startChar": 7,
        "endLine": 898,
        "endChar": 15
      },
      "revId": "149418a22f87ac4fa5b62404e505a452bb4a6ffd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}