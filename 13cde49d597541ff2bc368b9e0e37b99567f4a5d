{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "62980d9b_0dfa915d",
        "filename": "libs/binder/RpcConnection.cpp",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-04-20T01:08:59Z",
      "side": 1,
      "message": "btw, the other benefit of this is that it will detect if someone sets up a server but doesn\u0027t properly call join",
      "range": {
        "startLine": 57,
        "startChar": 0,
        "endLine": 57,
        "endChar": 91
      },
      "revId": "13cde49d597541ff2bc368b9e0e37b99567f4a5d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a0837b8a_77e70500",
        "filename": "libs/binder/RpcConnection.cpp",
        "patchSetId": 1
      },
      "lineNbr": 186,
      "author": {
        "id": 1644679
      },
      "writtenOn": "2021-04-20T01:09:24Z",
      "side": 1,
      "message": "nit: something more detailed?",
      "range": {
        "startLine": 186,
        "startChar": 54,
        "endLine": 186,
        "endChar": 63
      },
      "revId": "13cde49d597541ff2bc368b9e0e37b99567f4a5d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "38883382_eba3732b",
        "filename": "libs/binder/RpcConnection.cpp",
        "patchSetId": 1
      },
      "lineNbr": 186,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-04-20T01:25:00Z",
      "side": 1,
      "message": "it does include the line number (this is just paired with assignServerToThisThread). Will update if there\u0027s anything else",
      "parentUuid": "a0837b8a_77e70500",
      "range": {
        "startLine": 186,
        "startChar": 54,
        "endLine": 186,
        "endChar": 63
      },
      "revId": "13cde49d597541ff2bc368b9e0e37b99567f4a5d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dff9b4b7_d2351bb0",
        "filename": "libs/binder/RpcConnection.cpp",
        "patchSetId": 1
      },
      "lineNbr": 186,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-04-20T01:29:53Z",
      "side": 1,
      "message": "+1 to Devin\u0027s suggestion. Line number isn\u0027t enough when looking at builds on go/ab",
      "parentUuid": "38883382_eba3732b",
      "range": {
        "startLine": 186,
        "startChar": 54,
        "endLine": 186,
        "endChar": 63
      },
      "revId": "13cde49d597541ff2bc368b9e0e37b99567f4a5d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "846c9ee1_e3f5cb3c",
        "filename": "libs/binder/RpcConnection.cpp",
        "patchSetId": 1
      },
      "lineNbr": 186,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2021-04-20T02:59:55Z",
      "side": 1,
      "message": "Can you print some information about the \u0027socket\u0027?",
      "parentUuid": "dff9b4b7_d2351bb0",
      "range": {
        "startLine": 186,
        "startChar": 54,
        "endLine": 186,
        "endChar": 63
      },
      "revId": "13cde49d597541ff2bc368b9e0e37b99567f4a5d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "502e59c6_f075e8a5",
        "filename": "libs/binder/RpcConnection.cpp",
        "patchSetId": 1
      },
      "lineNbr": 186,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-04-20T17:21:40Z",
      "side": 1,
      "message": "Done, but FWIW:\n- Even if we added another \u0027bad state\u0027 log, the line number would still be enough because our build numbers encode the list of changes that are in a build, and we can recover that list, so if we really needed to look at it, it\u0027s relevant.\n- I didn\u0027t add any information about the socket itself because this is an abort on a failure to remove a C++ object from a std::vector of C++ objects, and I\u0027m not sure how relevant this could be.\n\nIf this triggers, right now, it essentially has to be because of memory corruption :(",
      "parentUuid": "846c9ee1_e3f5cb3c",
      "range": {
        "startLine": 186,
        "startChar": 54,
        "endLine": 186,
        "endChar": 63
      },
      "revId": "13cde49d597541ff2bc368b9e0e37b99567f4a5d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}