{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "9493c88d_44bdf491",
        "filename": "libs/binder/rust/src/binder.rs",
        "patchSetId": 5
      },
      "lineNbr": 898,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2023-10-20T00:46:47Z",
      "side": 1,
      "message": "```suggestion\n        impl std::ops::Deref for $native {\n```\nso users don\u0027t have to import this trait.",
      "revId": "618698d93c7e9a68e55530abb6f3fe4a8a1bb6e0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b3e5659b_9a3c0ab3",
        "filename": "libs/binder/rust/src/binder.rs",
        "patchSetId": 5
      },
      "lineNbr": 898,
      "author": {
        "id": 1942645
      },
      "writtenOn": "2023-10-20T18:45:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9493c88d_44bdf491",
      "revId": "618698d93c7e9a68e55530abb6f3fe4a8a1bb6e0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f94cf037_1f5c6fb1",
        "filename": "libs/binder/rust/src/binder.rs",
        "patchSetId": 5
      },
      "lineNbr": 899,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2023-10-20T00:46:47Z",
      "side": 1,
      "message": "Could even unwrap the box here, and do `type Target \u003d dyn $interface + Sync + Send`.",
      "revId": "618698d93c7e9a68e55530abb6f3fe4a8a1bb6e0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6e623a3f_7dfaee7f",
        "filename": "libs/binder/rust/src/binder.rs",
        "patchSetId": 5
      },
      "lineNbr": 901,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2023-10-20T00:47:52Z",
      "side": 1,
      "message": "Main thing I\u0027m not sure about: if we should use `Deref`, or just a separate `inner` method. The Rust docs only recommend implementing `Deref` for smart pointers, and I\u0027m not entirely sure `$native` counts as one (leaning towards yes).\n\n@cranes@google.com wdyt?",
      "revId": "618698d93c7e9a68e55530abb6f3fe4a8a1bb6e0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f5662940_c5de0110",
        "filename": "libs/binder/rust/src/binder.rs",
        "patchSetId": 5
      },
      "lineNbr": 901,
      "author": {
        "id": 1809421
      },
      "writtenOn": "2023-10-20T18:46:47Z",
      "side": 1,
      "message": "We impl Deref for `Strong\u003c\u003e`, why do we need it for `$native`? What is the use case for this change @oarbildo@google.com?",
      "parentUuid": "6e623a3f_7dfaee7f",
      "revId": "618698d93c7e9a68e55530abb6f3fe4a8a1bb6e0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e53671f9_beecce7d",
        "filename": "libs/binder/rust/src/binder.rs",
        "patchSetId": 5
      },
      "lineNbr": 901,
      "author": {
        "id": 1942645
      },
      "writtenOn": "2023-10-20T18:51:24Z",
      "side": 1,
      "message": "The use case is to cast from an IFooBinder object back to the original MyFooo object that implements IFooBinder. For that the cast chain that I follow is something like Strong\u003cIOpaqueKey\u003e -\u003e Binder\u003cBnOpaqueKey\u003e -\u003e BnOpaqueKey -\u003e OpaqueKey.",
      "parentUuid": "f5662940_c5de0110",
      "revId": "618698d93c7e9a68e55530abb6f3fe4a8a1bb6e0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bdb7d911_ea72db7c",
        "filename": "libs/binder/rust/src/binder.rs",
        "patchSetId": 5
      },
      "lineNbr": 901,
      "author": {
        "id": 1809421
      },
      "writtenOn": "2023-10-20T18:53:55Z",
      "side": 1,
      "message": "But you\u0027re just going to get a `Box\u003cdyn IOpaqueKey...\u003e` from this deref? Couldn\u0027t you already get that from `Strong\u003cIOpaqueKey\u003e`?",
      "parentUuid": "e53671f9_beecce7d",
      "revId": "618698d93c7e9a68e55530abb6f3fe4a8a1bb6e0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "43360563_97b86e6e",
        "filename": "libs/binder/rust/src/binder.rs",
        "patchSetId": 5
      },
      "lineNbr": 901,
      "author": {
        "id": 1942645
      },
      "writtenOn": "2023-10-20T18:55:42Z",
      "side": 1,
      "message": "No, I need the original object to be able to access some private data server side.",
      "parentUuid": "bdb7d911_ea72db7c",
      "revId": "618698d93c7e9a68e55530abb6f3fe4a8a1bb6e0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "97d684e9_bf9c3884",
        "filename": "libs/binder/rust/src/binder.rs",
        "patchSetId": 5
      },
      "lineNbr": 901,
      "author": {
        "id": 1809421
      },
      "writtenOn": "2023-10-20T18:57:04Z",
      "side": 1,
      "message": "I understand that, but how can you get that out of a `Box\u003cdyn IOpaqueKey + Sync + Send\u003e` (i.e. `Self::Target`)?",
      "parentUuid": "43360563_97b86e6e",
      "revId": "618698d93c7e9a68e55530abb6f3fe4a8a1bb6e0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b078e12_c0d4b6e2",
        "filename": "libs/binder/rust/src/binder.rs",
        "patchSetId": 5
      },
      "lineNbr": 901,
      "author": {
        "id": 1942645
      },
      "writtenOn": "2023-10-20T19:02:34Z",
      "side": 1,
      "message": "I was testing that I could get the state out with code similar to:\n```\nlet binder \u003d key.as_binder();\nlet remote \u003d binder.is_remote();\nif remote {\n    return Err(hwcrypto_err!(UNSUPPORTED, \"binder is not local\"));\n}\nlet binder_key \u003d (\u0026(**key) as *const dyn IOpaqueKey) as *const Binder\u003cBnOpaqueKey\u003e;\nlet bk_binding \u003d unsafe {\u0026(*binder_key)};\nlet opaque_key_material \u003d ((***bk_binding).as_ref() as *const dyn IOpaqueKey) as *const OpaqueKey;\nlet okm_binding \u003d unsafe {\u0026(*opaque_key_material)};\ndecrypt_key(\u0026okm_binding.opaque_key_material.key_blob, aes, kdf)```\nDo you see a problem with it?",
      "parentUuid": "97d684e9_bf9c3884",
      "revId": "618698d93c7e9a68e55530abb6f3fe4a8a1bb6e0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6331b5f8_3d71432d",
        "filename": "libs/binder/rust/src/binder.rs",
        "patchSetId": 5
      },
      "lineNbr": 901,
      "author": {
        "id": 1942645
      },
      "writtenOn": "2023-10-20T19:05:02Z",
      "side": 1,
      "message": "where `key: \u0026binder::Strong\u003cdyn IOpaqueKey\u003e`",
      "parentUuid": "9b078e12_c0d4b6e2",
      "revId": "618698d93c7e9a68e55530abb6f3fe4a8a1bb6e0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "23cde70a_73ddb508",
        "filename": "libs/binder/rust/src/binder.rs",
        "patchSetId": 5
      },
      "lineNbr": 901,
      "author": {
        "id": 1809421
      },
      "writtenOn": "2023-10-20T19:13:18Z",
      "side": 1,
      "message": "Yeah, you can\u0027t just cast from a trait object to the underlying object here. That\u0027s not sound, the layout of the trait object pointer is not well-defined.",
      "parentUuid": "6331b5f8_3d71432d",
      "revId": "618698d93c7e9a68e55530abb6f3fe4a8a1bb6e0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3355cad5_3b378462",
        "filename": "libs/binder/rust/tests/integration.rs",
        "patchSetId": 5
      },
      "lineNbr": 30,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2023-10-20T00:46:47Z",
      "side": 1,
      "message": "This shouldn\u0027t be needed.",
      "revId": "618698d93c7e9a68e55530abb6f3fe4a8a1bb6e0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "60833113_5147f001",
        "filename": "libs/binder/rust/tests/integration.rs",
        "patchSetId": 5
      },
      "lineNbr": 30,
      "author": {
        "id": 1942645
      },
      "writtenOn": "2023-10-20T18:45:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3355cad5_3b378462",
      "revId": "618698d93c7e9a68e55530abb6f3fe4a8a1bb6e0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}