{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e3485390_dcb90531",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1003473
      },
      "writtenOn": "2021-01-26T01:50:06Z",
      "side": 1,
      "message": "Thank you!",
      "revId": "9cdc1a5eac3f36771ecd712223fe9ad946a3d682",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c5eb11be_d3cd46de",
        "filename": "libs/binder/IPCThreadState.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1436,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2021-01-26T01:37:19Z",
      "side": 1,
      "message": "why wouldn\u0027t you set this in the constructor instead, if you believe it\u0027s being called often enough to matter?",
      "revId": "9cdc1a5eac3f36771ecd712223fe9ad946a3d682",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0d230b7f_bcc6bddf",
        "filename": "libs/binder/IPCThreadState.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1436,
      "author": {
        "id": 1003473
      },
      "writtenOn": "2021-01-26T01:50:06Z",
      "side": 1,
      "message": "It is called only when Binder.Observer is installed.  Also, I was not certain that the construction is called when we are already ON the thread as opposed to constructing the thread object on some other thread. Is this guaranteed?",
      "parentUuid": "c5eb11be_d3cd46de",
      "revId": "9cdc1a5eac3f36771ecd712223fe9ad946a3d682",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "58518629_23b31327",
        "filename": "libs/binder/IPCThreadState.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1439,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2021-01-26T01:37:19Z",
      "side": 1,
      "message": "note that this is broken on macOS if you need to build/run there?",
      "revId": "9cdc1a5eac3f36771ecd712223fe9ad946a3d682",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "177c3a21_f71785a7",
        "filename": "libs/binder/IPCThreadState.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1439,
      "author": {
        "id": 1003473
      },
      "writtenOn": "2021-01-26T01:50:06Z",
      "side": 1,
      "message": "I can add code just like in android::base::GetThreadId() to take care of __APPLE__. Do we support binder on MacOS?  What about Windows?",
      "parentUuid": "58518629_23b31327",
      "revId": "9cdc1a5eac3f36771ecd712223fe9ad946a3d682",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d2d7bc02_17a13d6a",
        "filename": "libs/binder/IPCThreadState.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1443,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2021-01-26T01:37:19Z",
      "side": 1,
      "message": "can you guarantee that you don\u0027t get called from weird places involving fork() or clone()? if not, you shouldn\u0027t be doing your own tid caching...",
      "revId": "9cdc1a5eac3f36771ecd712223fe9ad946a3d682",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e4fa64e3_5462d32b",
        "filename": "libs/binder/IPCThreadState.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1443,
      "author": {
        "id": 1003473
      },
      "writtenOn": "2021-01-26T01:50:06Z",
      "side": 1,
      "message": "Currently, there is only one call, from the Binder.Observer, so at that point the binder thread is already fully established and is not going anywhere.",
      "parentUuid": "d2d7bc02_17a13d6a",
      "revId": "9cdc1a5eac3f36771ecd712223fe9ad946a3d682",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}