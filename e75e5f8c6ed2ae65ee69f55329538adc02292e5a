{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "15cfb4c5_53b96605",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1644679
      },
      "writtenOn": "2022-12-08T17:00:38Z",
      "side": 1,
      "message": "existing presubmit failure: https://b.corp.google.com/issues/261804136",
      "revId": "e75e5f8c6ed2ae65ee69f55329538adc02292e5a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4efcc37d_aafb78a1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-12-09T18:41:46Z",
      "side": 1,
      "message": "(adding ndk api council group)",
      "revId": "e75e5f8c6ed2ae65ee69f55329538adc02292e5a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e249bb51_b68bbf2d",
        "filename": "libs/binder/ProcessState.cpp",
        "patchSetId": 1
      },
      "lineNbr": 443,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-12-08T23:43:21Z",
      "side": 1,
      "message": "so - this works, but also, for processes like servicemanager, I don\u0027t think it will work right now. If you renamed this API (e.g. hasAvailableBinderThread), you could do \u0027mThreadPoolStarted || mCurrentThread \u003e 0\u0027 and it\u0027ll handle a few more cases, but the current API should work for most cases, and knowing about the threadpool itself is great.",
      "range": {
        "startLine": 443,
        "startChar": 11,
        "endLine": 443,
        "endChar": 29
      },
      "revId": "e75e5f8c6ed2ae65ee69f55329538adc02292e5a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a3cc6630_a6fb4595",
        "filename": "libs/binder/ProcessState.cpp",
        "patchSetId": 1
      },
      "lineNbr": 443,
      "author": {
        "id": 1644679
      },
      "writtenOn": "2022-12-09T16:23:12Z",
      "side": 1,
      "message": "Ah because joinThreadPool doesn\u0027t set mThreadPoolStarted.\nSo this API is then pretty specific to avoiding the abort when changing sizes.\n\nIn the case there was already another thread that joined, but the thread pool was not started, we would still be allowed to set the maxThreadPool size and then start the thread pool, but it would be unnecessary? Is that always the case?",
      "parentUuid": "e249bb51_b68bbf2d",
      "range": {
        "startLine": 443,
        "startChar": 11,
        "endLine": 443,
        "endChar": 29
      },
      "revId": "e75e5f8c6ed2ae65ee69f55329538adc02292e5a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0763c210_3bbb674e",
        "filename": "libs/binder/ProcessState.cpp",
        "patchSetId": 1
      },
      "lineNbr": 443,
      "author": {
        "id": 1644679
      },
      "writtenOn": "2022-12-09T18:07:25Z",
      "side": 1,
      "message": "Maybe it makes sense to add a separate `hasAvailableBinderThread` API, if that ends up being needed, since they treated differently in libbinder.",
      "parentUuid": "a3cc6630_a6fb4595",
      "range": {
        "startLine": 443,
        "startChar": 11,
        "endLine": 443,
        "endChar": 29
      },
      "revId": "e75e5f8c6ed2ae65ee69f55329538adc02292e5a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}