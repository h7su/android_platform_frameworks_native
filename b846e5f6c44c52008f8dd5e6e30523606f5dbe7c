{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "a334a5d4_84246171",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1040213
      },
      "writtenOn": "2021-02-01T22:53:35Z",
      "side": 1,
      "message": "Some code to test the speed of bulk parceling.",
      "revId": "b846e5f6c44c52008f8dd5e6e30523606f5dbe7c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "53cd228a_3900d4bb",
        "filename": "libs/binder/tests/binderParcelBenchmark.cpp",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-02-02T01:34:51Z",
      "side": 1,
      "message": "nit: you could also use a pointer to a Parcel method, for these, to avoid needing templating",
      "range": {
        "startLine": 25,
        "startChar": 10,
        "endLine": 25,
        "endChar": 25
      },
      "revId": "b846e5f6c44c52008f8dd5e6e30523606f5dbe7c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c1d617da_94b0c6cb",
        "filename": "libs/binder/tests/binderParcelBenchmark.cpp",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1040213
      },
      "writtenOn": "2021-02-03T00:26:32Z",
      "side": 1,
      "message": "Ack. i kept this as a template for parallel form for the writeData / readData tests (see subsequent CL).",
      "parentUuid": "53cd228a_3900d4bb",
      "range": {
        "startLine": 25,
        "startChar": 10,
        "endLine": 25,
        "endChar": 25
      },
      "revId": "b846e5f6c44c52008f8dd5e6e30523606f5dbe7c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "946dfc7f_51f9e0bd",
        "filename": "libs/binder/tests/binderParcelBenchmark.cpp",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-02-04T00:43:20Z",
      "side": 1,
      "message": "should we change this to calling writeData/readData directly, since these methods call it directly?",
      "parentUuid": "c1d617da_94b0c6cb",
      "range": {
        "startLine": 25,
        "startChar": 10,
        "endLine": 25,
        "endChar": 25
      },
      "revId": "b846e5f6c44c52008f8dd5e6e30523606f5dbe7c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ed3d40e9_16decee2",
        "filename": "libs/binder/tests/binderParcelBenchmark.cpp",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1040213
      },
      "writtenOn": "2021-02-05T16:55:54Z",
      "side": 1,
      "message": "That is in the following dependent CL.  This CL tests the original performance of the Parcel class, so it can be compared.",
      "parentUuid": "946dfc7f_51f9e0bd",
      "range": {
        "startLine": 25,
        "startChar": 10,
        "endLine": 25,
        "endChar": 25
      },
      "revId": "b846e5f6c44c52008f8dd5e6e30523606f5dbe7c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4af3a84e_e411f382",
        "filename": "libs/binder/tests/binderParcelBenchmark.cpp",
        "patchSetId": 1
      },
      "lineNbr": 78,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-02-01T23:29:54Z",
      "side": 1,
      "message": "An extra copy should definitely never have been happening before - even if it was iterating over these fields (was it?). So what\u0027s the idea of doing it here? Is it because when we receive binder transactions, we are making an allocation, so this approximates that?",
      "range": {
        "startLine": 78,
        "startChar": 30,
        "endLine": 78,
        "endChar": 58
      },
      "revId": "b846e5f6c44c52008f8dd5e6e30523606f5dbe7c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5a5345dd_cf7f88b5",
        "filename": "libs/binder/tests/binderParcelBenchmark.cpp",
        "patchSetId": 1
      },
      "lineNbr": 78,
      "author": {
        "id": 1040213
      },
      "writtenOn": "2021-02-02T01:26:37Z",
      "side": 1,
      "message": "Yes, you are right - this is not a general concern. This is for creating a std::vector argument to deliver through the AIDL interface (if the data wasn\u0027t in vector format already).  Of some concern for our internal media logging, but is not a general concern.\n\nAs you point out, perhaps the vector allocation on the receiving Binder transaction is more general to track.",
      "parentUuid": "4af3a84e_e411f382",
      "range": {
        "startLine": 78,
        "startChar": 30,
        "endLine": 78,
        "endChar": 58
      },
      "revId": "b846e5f6c44c52008f8dd5e6e30523606f5dbe7c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "787b1103_e6f33016",
        "filename": "libs/binder/tests/binderParcelBenchmark.cpp",
        "patchSetId": 1
      },
      "lineNbr": 78,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-02-02T01:34:51Z",
      "side": 1,
      "message": "yeah - that would be binderThroughputTest, but it\u0027s a bit out of date/messy and tests limited things.\n\nMaybe we could avoid the extra allocation case here? I think in general, people should be using std::vector if they are going to call these parceling methods. If they aren\u0027t doing this, and they can\u0027t convert to use this type, we should investigate some other strategy before making allocations like this",
      "parentUuid": "5a5345dd_cf7f88b5",
      "range": {
        "startLine": 78,
        "startChar": 30,
        "endLine": 78,
        "endChar": 58
      },
      "revId": "b846e5f6c44c52008f8dd5e6e30523606f5dbe7c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6f06cf58_25f734cc",
        "filename": "libs/binder/tests/binderParcelBenchmark.cpp",
        "patchSetId": 1
      },
      "lineNbr": 78,
      "author": {
        "id": 1040213
      },
      "writtenOn": "2021-02-03T00:26:32Z",
      "side": 1,
      "message": "Sounds good, I\u0027ll remove the benchmark.",
      "parentUuid": "787b1103_e6f33016",
      "range": {
        "startLine": 78,
        "startChar": 30,
        "endLine": 78,
        "endChar": 58
      },
      "revId": "b846e5f6c44c52008f8dd5e6e30523606f5dbe7c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}