{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "472bd352_976136c6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-06-07T17:53:08Z",
      "side": 1,
      "message": "a",
      "revId": "a5ca02028581e12cf9e74fc1e257a62685f60af9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "710a508c_fc99701a",
        "filename": "libs/binder/servicedispatcher.cpp",
        "patchSetId": 6
      },
      "lineNbr": 76,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-06-07T17:53:37Z",
      "side": 1,
      "message": "do we have a way to shutdown this service btw?",
      "range": {
        "startLine": 76,
        "startChar": 26,
        "endLine": 76,
        "endChar": 43
      },
      "revId": "a5ca02028581e12cf9e74fc1e257a62685f60af9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4e809135_1e2a5fda",
        "filename": "libs/binder/servicedispatcher.cpp",
        "patchSetId": 6
      },
      "lineNbr": 76,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-06-07T19:21:53Z",
      "side": 1,
      "message": "No.",
      "parentUuid": "710a508c_fc99701a",
      "range": {
        "startLine": 76,
        "startChar": 26,
        "endLine": 76,
        "endChar": 43
      },
      "revId": "a5ca02028581e12cf9e74fc1e257a62685f60af9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4e75e026_8b22f1f7",
        "filename": "libs/binder/servicedispatcher.cpp",
        "patchSetId": 6
      },
      "lineNbr": 76,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-06-07T19:51:27Z",
      "side": 1,
      "message": "is there a bug for it, or can you add another command to servicedispatcher?",
      "parentUuid": "4e809135_1e2a5fda",
      "range": {
        "startLine": 76,
        "startChar": 26,
        "endLine": 76,
        "endChar": 43
      },
      "revId": "a5ca02028581e12cf9e74fc1e257a62685f60af9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4453658d_fa43f23e",
        "filename": "libs/binder/servicedispatcher.cpp",
        "patchSetId": 6
      },
      "lineNbr": 84,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-06-07T17:53:08Z",
      "side": 1,
      "message": "leftover?",
      "range": {
        "startLine": 84,
        "startChar": 0,
        "endLine": 84,
        "endChar": 35
      },
      "revId": "a5ca02028581e12cf9e74fc1e257a62685f60af9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5f0bfc11_86e6cdb2",
        "filename": "libs/binder/servicedispatcher.cpp",
        "patchSetId": 6
      },
      "lineNbr": 84,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-06-07T19:21:53Z",
      "side": 1,
      "message": "No, this is intentional.\n\nLOG(INFO) logs to logd. This explicitly writes to stdout. This is so that the host can capture its output and know which device port the service is assigned to.",
      "parentUuid": "4453658d_fa43f23e",
      "range": {
        "startLine": 84,
        "startChar": 0,
        "endLine": 84,
        "endChar": 35
      },
      "revId": "a5ca02028581e12cf9e74fc1e257a62685f60af9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9e14e38c_f6d49b7a",
        "filename": "libs/binder/servicedispatcher.cpp",
        "patchSetId": 6
      },
      "lineNbr": 100,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-06-07T17:53:08Z",
      "side": 1,
      "message": "nit: do we really need this?",
      "range": {
        "startLine": 88,
        "startChar": 0,
        "endLine": 100,
        "endChar": 2
      },
      "revId": "a5ca02028581e12cf9e74fc1e257a62685f60af9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ed8598cc_225f4674",
        "filename": "libs/binder/servicedispatcher.cpp",
        "patchSetId": 6
      },
      "lineNbr": 100,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-06-07T19:21:53Z",
      "side": 1,
      "message": "This is so that the error logs are more visible to the client (instead of checking logcat to figure out what\u0027s actually going on)",
      "parentUuid": "9e14e38c_f6d49b7a",
      "range": {
        "startLine": 88,
        "startChar": 0,
        "endLine": 100,
        "endChar": 2
      },
      "revId": "a5ca02028581e12cf9e74fc1e257a62685f60af9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5973c920_d424c4ed",
        "filename": "libs/binder/servicedispatcher.cpp",
        "patchSetId": 6
      },
      "lineNbr": 104,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-06-07T17:53:08Z",
      "side": 1,
      "message": "will this always print a warning that this feature is userdebug only? I still think we should want to warn about this (at least for now)",
      "range": {
        "startLine": 104,
        "startChar": 0,
        "endLine": 104,
        "endChar": 34
      },
      "revId": "a5ca02028581e12cf9e74fc1e257a62685f60af9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5894abbd_bdce0864",
        "filename": "libs/binder/servicedispatcher.cpp",
        "patchSetId": 6
      },
      "lineNbr": 104,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-06-07T19:21:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5973c920_d424c4ed",
      "range": {
        "startLine": 104,
        "startChar": 0,
        "endLine": 104,
        "endChar": 34
      },
      "revId": "a5ca02028581e12cf9e74fc1e257a62685f60af9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8d5f1266_efcb4463",
        "filename": "libs/binder/servicedispatcher.cpp",
        "patchSetId": 6
      },
      "lineNbr": 110,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-06-07T17:53:08Z",
      "side": 1,
      "message": "This should always fail from the service itself. This seems like a nice optimization, but we should see the same behavior even if we remove this line, right?",
      "range": {
        "startLine": 107,
        "startChar": 0,
        "endLine": 110,
        "endChar": 5
      },
      "revId": "a5ca02028581e12cf9e74fc1e257a62685f60af9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2979e2ce_7b5cc35a",
        "filename": "libs/binder/servicedispatcher.cpp",
        "patchSetId": 6
      },
      "lineNbr": 110,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-06-07T19:21:53Z",
      "side": 1,
      "message": "Yeah it is the same behavior (with different logs) if we remove this line; the user will see something about permission denial, but it won\u0027t say anything about debuggable builds until they check the logcat, because the service logs to logcat.",
      "parentUuid": "8d5f1266_efcb4463",
      "range": {
        "startLine": 107,
        "startChar": 0,
        "endLine": 110,
        "endChar": 5
      },
      "revId": "a5ca02028581e12cf9e74fc1e257a62685f60af9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1e78d4c1_43d8cf0f",
        "filename": "libs/binder/servicedispatcher.cpp",
        "patchSetId": 6
      },
      "lineNbr": 112,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-06-07T17:53:08Z",
      "side": 1,
      "message": "we should default 1, yeah? (or document default in Usage)",
      "range": {
        "startLine": 112,
        "startChar": 0,
        "endLine": 112,
        "endChar": 28
      },
      "revId": "a5ca02028581e12cf9e74fc1e257a62685f60af9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9e35b829_2e599590",
        "filename": "libs/binder/servicedispatcher.cpp",
        "patchSetId": 6
      },
      "lineNbr": 112,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-06-07T19:21:53Z",
      "side": 1,
      "message": "Done, I documented default number in Usage.\n\nHowever, even with \"1\" RPC threads, the service still needs to support multithreading. So IMO this number doesn\u0027t really matter. It is like having 15 binder threads by default if configureThreadPool() is not called.",
      "parentUuid": "1e78d4c1_43d8cf0f",
      "range": {
        "startLine": 112,
        "startChar": 0,
        "endLine": 112,
        "endChar": 28
      },
      "revId": "a5ca02028581e12cf9e74fc1e257a62685f60af9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2e772b27_709535a1",
        "filename": "libs/binder/servicedispatcher.cpp",
        "patchSetId": 6
      },
      "lineNbr": 128,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-06-07T17:53:08Z",
      "side": 1,
      "message": "nit: this is fine/right, but I\u0027m curious, is there any reason to prefer this style over:\n\nif (optind + 1 !\u003d argc) return Usage(argv[0]);\nauto name \u003d argv[optind];",
      "range": {
        "startLine": 126,
        "startChar": 0,
        "endLine": 128,
        "endChar": 45
      },
      "revId": "a5ca02028581e12cf9e74fc1e257a62685f60af9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "20729d45_eadee8e4",
        "filename": "libs/binder/servicedispatcher.cpp",
        "patchSetId": 6
      },
      "lineNbr": 128,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-06-07T19:21:53Z",
      "side": 1,
      "message": "Ah I was thinking `shift` (in bash)\n\n```\nlocal name \u003d $1\nshift\nif [[ $# \u003e 1 ]]; then exit 1; fi\n```",
      "parentUuid": "2e772b27_709535a1",
      "range": {
        "startLine": 126,
        "startChar": 0,
        "endLine": 128,
        "endChar": 45
      },
      "revId": "a5ca02028581e12cf9e74fc1e257a62685f60af9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}