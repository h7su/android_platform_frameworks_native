{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b041fd42_2df32d69",
        "filename": "libs/binder/format.h",
        "patchSetId": 6
      },
      "lineNbr": 24,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-10-18T00:40:04Z",
      "side": 1,
      "message": "Hey, I forgot when I +2\u0027d earlier. By including this, we\u0027re statically including a lot more code into libbinder (no longer gets gc\u0027d with --gc-sections). So, we should measure the memory to justify it.\n\nAny chance you could pull showmap of a process using this (e.g. servicemanager) before and after this change?",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 24,
        "endChar": 23
      },
      "revId": "135751df2b58388e4a84f0f56c1bad740e27773e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d1870c0b_a5107ef3",
        "filename": "libs/binder/format.h",
        "patchSetId": 6
      },
      "lineNbr": 24,
      "author": {
        "id": 1135107
      },
      "writtenOn": "2023-10-18T17:33:08Z",
      "side": 1,
      "message": "fmtlib static module is just 100 lines long, so I don\u0027t expect it to make any difference. Anyway, here is your output - I don\u0027t see any correlation between having this change and impact on memory.\n\n1. without: https://paste.googleplex.com/5902112021020672?raw\n2. with: https://paste.googleplex.com/5731179603951616?raw\n3. with: https://paste.googleplex.com/5397211503394816?raw\n4. without: https://paste.googleplex.com/5842979347496960?raw\n5. without: https://paste.googleplex.com/6006636526174208?raw\n\nAt what column are you looking at?",
      "parentUuid": "b041fd42_2df32d69",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 24,
        "endChar": 23
      },
      "revId": "135751df2b58388e4a84f0f56c1bad740e27773e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d93d993f_4205558e",
        "filename": "libs/binder/format.h",
        "patchSetId": 6
      },
      "lineNbr": 24,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-10-18T17:58:39Z",
      "side": 1,
      "message": "libbinder.so row, the shared clean column goes up by 36KB, and private dirty column goes up by 4KB, so estimate of memory increase would be 36KB + ~50 * 4KB \u003d 236KB. Btw, there is recently a long discussion about this method of estimating memory on b/206145174, if you want to know in more details.\n\nAnyway, most of these methods are in test, and we can use string concatenation, and it\u0027s fine. In servicedispatcher, it can trivially be changed to use streams, and that codepath isn\u0027t important.\n\nThe RpcState.cpp one may take a little bit of work, but it seems we can pretty easily avoid this dependency? Would you be okay removing it?",
      "parentUuid": "d1870c0b_a5107ef3",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 24,
        "endChar": 23
      },
      "revId": "135751df2b58388e4a84f0f56c1bad740e27773e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0208264d_99af0adc",
        "filename": "libs/binder/format.h",
        "patchSetId": 6
      },
      "lineNbr": 24,
      "author": {
        "id": 1135107
      },
      "writtenOn": "2023-10-18T18:07:27Z",
      "side": 1,
      "message": "Ah, I see it now. But I don\u0027t see where are you getting these number from :).\n\nShared clean column goes up by 68 or 72 *bytes*, private dirty by 4 bytes (for units - please note virtual size for entire process is 10MB, not 10GB).",
      "parentUuid": "d93d993f_4205558e",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 24,
        "endChar": 23
      },
      "revId": "135751df2b58388e4a84f0f56c1bad740e27773e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8f839132_5e74c3f5",
        "filename": "libs/binder/format.h",
        "patchSetId": 6
      },
      "lineNbr": 24,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-10-18T19:50:59Z",
      "side": 1,
      "message": "10GB is the amount of virtual address space that is reserved, mostly from scudo which is reserving a large amount of space. However, this space doesn\u0027t represent real memory use.",
      "parentUuid": "0208264d_99af0adc",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 24,
        "endChar": 23
      },
      "revId": "135751df2b58388e4a84f0f56c1bad740e27773e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d1c201c7_1ebdca7a",
        "filename": "libs/binder/format.h",
        "patchSetId": 6
      },
      "lineNbr": 24,
      "author": {
        "id": 1135107
      },
      "writtenOn": "2023-10-18T23:54:28Z",
      "side": 1,
      "message": "Ah, I didn\u0027t know that it\u0027s indeed 10GB!\n\nAnyway, synced offline - I\u0027ll drop format from RpcState but will leave it in tests and servicedispatcher.",
      "parentUuid": "8f839132_5e74c3f5",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 24,
        "endChar": 23
      },
      "revId": "135751df2b58388e4a84f0f56c1bad740e27773e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}