{
  "comments": [
    {
      "key": {
        "uuid": "e4da74ba_e0efe432",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 8,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-09-24T17:14:56Z",
      "side": 1,
      "message": "always put reasoning on commit messages - for external (and bugs will be deleted after 10 years....)\n\nAll for hpp argument, but Android has so many \u0027C or C++\u0027 headers and .h is so common, the cflag option makes sense. Curious why spending time on this CL when the bug is for a build fix?",
      "revId": "7277fabb100a0f74602ee731106d5cb83a752730",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d5a5a839_0722645a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 8,
      "author": {
        "id": 1416371
      },
      "writtenOn": "2020-09-24T17:18:18Z",
      "side": 1,
      "message": "The bug talks about not having the C standard version passed into the compiler. Since the arguments for C/C++ are different, the bindgen module needs to know which language is in use to pass it in.\n\nThe exact interface is being debated on the other CL, but the gist of it is to have .h default to C, .hh, .hpp default to C++, with properties that override which language is in use.\n\nThat means this project either needs to use a .hpp file or set whatever properties are added so that we pass in a C++ std version rather than a C std version.",
      "parentUuid": "e4da74ba_e0efe432",
      "revId": "7277fabb100a0f74602ee731106d5cb83a752730",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "edd175ec_a81cf011",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 8,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-09-24T17:25:13Z",
      "side": 1,
      "message": "The problem is then that rust_bindgen only has headers? The existing cc stuff does this based on if you are including headers in a .c or .cpp/cc file.",
      "parentUuid": "d5a5a839_0722645a",
      "revId": "7277fabb100a0f74602ee731106d5cb83a752730",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "264ced02_60d51e08",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 8,
      "author": {
        "id": 1416371
      },
      "writtenOn": "2020-09-24T17:26:36Z",
      "side": 1,
      "message": "Yeah. The idea was to default to C (since bindgen\u0027s C++ utility is limited), then swap to C++ if we see .hpp, .hh, or an explicit request from the user to treat the header as C++.",
      "parentUuid": "edd175ec_a81cf011",
      "revId": "7277fabb100a0f74602ee731106d5cb83a752730",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be457902_425beb4f",
        "filename": "libs/binder/rust/Android.bp",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 1416371
      },
      "writtenOn": "2020-09-24T15:40:46Z",
      "side": 1,
      "message": "If your autodetector is working right, this cflag should be removable.",
      "revId": "7277fabb100a0f74602ee731106d5cb83a752730",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2300cc17_c5c24d5a",
        "filename": "libs/binder/rust/Android.bp",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 1115178
      },
      "writtenOn": "2020-09-24T17:48:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "be457902_425beb4f",
      "revId": "7277fabb100a0f74602ee731106d5cb83a752730",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}