{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "0924a07b_6aad70f1",
        "filename": "libs/binder/RpcState.cpp",
        "patchSetId": 2
      },
      "lineNbr": 255,
      "author": {
        "id": 1944400
      },
      "writtenOn": "2022-07-15T21:27:54Z",
      "side": 1,
      "message": "IIUC, we want to clear `mNodeForAddress`, which requires holding the lock, but it isn\u0027t ok to run the dtor for the `sp\u003cIBinder\u003e`s inside it while holding the lock.\n\n1. Is it necessary to promote the `wp\u003cIBinder\u003e`? Or, could we just check if we have an `sp\u003cIBinder\u003e` and move that over to `tempHoldBinder`? (maybe the extra validation is valuable, just curious if it is necessary)\n\n```\n    std::vector\u003csp\u003cIBinder\u003e\u003e tempHoldBinder;\n    mTerminated \u003d true;\n    for (auto\u0026 [address, node] : mNodeForAddress) {\n        if (node.sentRef) {\n            tempHoldBinder.push_back(std::move(node.sentRef));\n        }\n    }\n    mNodeForAddress.clear();\n```\n\n2. There are also `sp\u003cIBinder\u003e` in `asyncTodo`. Is that guaranteed to be empty at this point?",
      "range": {
        "startLine": 253,
        "startChar": 0,
        "endLine": 255,
        "endChar": 37
      },
      "revId": "c93cc66e83e28ce64ff58f931885c24d0092c94a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8dbfa30c_e68fa4c0",
        "filename": "libs/binder/RpcState.cpp",
        "patchSetId": 2
      },
      "lineNbr": 255,
      "author": {
        "id": 1944400
      },
      "writtenOn": "2022-07-15T21:29:12Z",
      "side": 1,
      "message": "Ah, I guess (2) doesn\u0027t matter because you are promoting all the weak pointers. So, I guess if (1) is possible, then some extra code for `asyncTodo` is needed.",
      "parentUuid": "0924a07b_6aad70f1",
      "range": {
        "startLine": 253,
        "startChar": 0,
        "endLine": 255,
        "endChar": 37
      },
      "revId": "c93cc66e83e28ce64ff58f931885c24d0092c94a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f1f24200_fd49fb7f",
        "filename": "libs/binder/RpcState.cpp",
        "patchSetId": 2
      },
      "lineNbr": 255,
      "author": {
        "id": 1944400
      },
      "writtenOn": "2022-07-15T21:29:55Z",
      "side": 1,
      "message": "(also, I mean this as more of a follow up discussion, the fix LGTM)",
      "parentUuid": "8dbfa30c_e68fa4c0",
      "range": {
        "startLine": 253,
        "startChar": 0,
        "endLine": 255,
        "endChar": 37
      },
      "revId": "c93cc66e83e28ce64ff58f931885c24d0092c94a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "06e1edcd_0dc66dea",
        "filename": "libs/binder/RpcState.cpp",
        "patchSetId": 2
      },
      "lineNbr": 255,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-07-15T22:42:24Z",
      "side": 1,
      "message": "If you receive a binder (like a callback), sentRef will be nullptr, but you\u0027ll have a BpBinder for it, held by the current thread. It won\u0027t be held by the infrastructure here (so that when you drop the BpBinder on your thread, it can send the decref across the wire - this happens from onLastStrongRef in BpBinder)",
      "parentUuid": "f1f24200_fd49fb7f",
      "range": {
        "startLine": 253,
        "startChar": 0,
        "endLine": 255,
        "endChar": 37
      },
      "revId": "c93cc66e83e28ce64ff58f931885c24d0092c94a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "154a12d9_a072cdc3",
        "filename": "libs/binder/RpcState.cpp",
        "patchSetId": 2
      },
      "lineNbr": 255,
      "author": {
        "id": 1944400
      },
      "writtenOn": "2022-07-15T23:23:47Z",
      "side": 1,
      "message": "So, you are saying that might not have a strong pointer for all the binders and that makes sense to me, but what I don\u0027t get is, when we only have a weak pointer for a particular binder, why are we bothering to attempt promoting it?",
      "parentUuid": "06e1edcd_0dc66dea",
      "range": {
        "startLine": 253,
        "startChar": 0,
        "endLine": 255,
        "endChar": 37
      },
      "revId": "c93cc66e83e28ce64ff58f931885c24d0092c94a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "02a713ed_b6eb2527",
        "filename": "libs/binder/RpcState.cpp",
        "patchSetId": 2
      },
      "lineNbr": 255,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-07-15T23:51:03Z",
      "side": 1,
      "message": "It was supposed to be for the OBJECT_LIFETIME_WEAK case. Though because onIncStrongAttempted can return false, I probably should have \u0027std::vector\u003cwp\u003cIBinder\u003e\u003e tempWeakHolds\u0027 as well and if it doesn\u0027t promote, std::move the weak pointer.",
      "parentUuid": "154a12d9_a072cdc3",
      "range": {
        "startLine": 253,
        "startChar": 0,
        "endLine": 255,
        "endChar": 37
      },
      "revId": "c93cc66e83e28ce64ff58f931885c24d0092c94a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d8e71749_e69c9e34",
        "filename": "libs/binder/RpcState.cpp",
        "patchSetId": 2
      },
      "lineNbr": 255,
      "author": {
        "id": 1944400
      },
      "writtenOn": "2022-07-18T17:26:10Z",
      "side": 1,
      "message": "Maybe we could just grab the whole `mNodeForAddress` out of `this` and then let it tear down normally after the unlock. Then, none of the smart pointer dtors will be invoked.\n\n```\nauto temp \u003d std::move(mNodeForAddress);\nmNodeForAddress \u003d std::map\u003cuint64_t, BinderNode\u003e(); // explicit re-init\n_l.unlock()\ntemp.clear();  // explicit\n```",
      "parentUuid": "02a713ed_b6eb2527",
      "range": {
        "startLine": 253,
        "startChar": 0,
        "endLine": 255,
        "endChar": 37
      },
      "revId": "c93cc66e83e28ce64ff58f931885c24d0092c94a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}