{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "28aa3d54_2fa00e7d",
        "filename": "libs/binder/IServiceManager.cpp",
        "patchSetId": 28
      },
      "lineNbr": 97,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-06-17T19:35:29Z",
      "side": 1,
      "message": "Why is this needed? I would expect ServiceManagerHostShim to override getService directly",
      "range": {
        "startLine": 92,
        "startChar": 0,
        "endLine": 97,
        "endChar": 5
      },
      "revId": "b4eff85b7527b1b3166a884398749c7b7c1798cc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "42579a56_7fac947d",
        "filename": "libs/binder/IServiceManager.cpp",
        "patchSetId": 28
      },
      "lineNbr": 97,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-06-17T22:35:51Z",
      "side": 1,
      "message": "\u003e Why is this needed?\n\nFor ServiceManager::waitForService(). This makes it partially work:\n\nhttps://android-review.googlesource.com/c/platform/frameworks/native/+/1727280/35/libs/binder/tests/binderHostDeviceTest.cpp#141\n\nIt doesn\u0027t fully work yet because registerForNotification() doesn\u0027t work. CL:1738487 demonstrates how it fails.\n\n\u003e I would expect ServiceManagerHostShim to override getService directly\n\nI can do that, but it appears that the parent class ServiceManagerShim::getService() implements it by calling `ServiceManagerShim::checkService()`, which is overridden above. Hence I didn\u0027t override getService().",
      "parentUuid": "28aa3d54_2fa00e7d",
      "range": {
        "startLine": 92,
        "startChar": 0,
        "endLine": 97,
        "endChar": 5
      },
      "revId": "b4eff85b7527b1b3166a884398749c7b7c1798cc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aa0a8eb5_bc464f9e",
        "filename": "libs/binder/IServiceManager.cpp",
        "patchSetId": 28
      },
      "lineNbr": 97,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-06-17T23:06:02Z",
      "side": 1,
      "message": "Aha! Can you add a comment here or something to explain this? Maybe:\n\n\u0027directly get the service in a way that, for lazy services, requests the service to be started if it is not currently started. This way, calls directly to ServiceManagerShim::getService will still have the 5s delay that is expected by a large amount of Android code\u0027",
      "parentUuid": "42579a56_7fac947d",
      "range": {
        "startLine": 92,
        "startChar": 0,
        "endLine": 97,
        "endChar": 5
      },
      "revId": "b4eff85b7527b1b3166a884398749c7b7c1798cc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c873844a_e2ea585e",
        "filename": "libs/binder/IServiceManager.cpp",
        "patchSetId": 28
      },
      "lineNbr": 103,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-06-17T19:35:29Z",
      "side": 1,
      "message": "this should still be needed on host when multiple threads are involved. Curious, what problem is it calling?",
      "range": {
        "startLine": 103,
        "startChar": 0,
        "endLine": 103,
        "endChar": 22
      },
      "revId": "b4eff85b7527b1b3166a884398749c7b7c1798cc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4a93c6db_ea30b731",
        "filename": "libs/binder/IServiceManager.cpp",
        "patchSetId": 28
      },
      "lineNbr": 103,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-06-17T22:35:51Z",
      "side": 1,
      "message": "Can you explain a bit more? Isn\u0027t this called upon process destruction?\n\nThis is needed because DeviceServiceExtra (AdbForwarder / CommandResult) is attached to the binder object. If it is never destroyed, the process `adb shell servicemanager manager` will still be killed, since it is a child process of this process. BUT, `adb forward` is not removed. See AdbForwarder::~AdbForwarder in ServiceManagerHost.cpp in this CL.\n\nHowever, these are all based on my speculation. I can manually check if adding this will actually prevent the adb forwarded port to be cleaned up.",
      "parentUuid": "c873844a_e2ea585e",
      "range": {
        "startLine": 103,
        "startChar": 0,
        "endLine": 103,
        "endChar": 22
      },
      "revId": "b4eff85b7527b1b3166a884398749c7b7c1798cc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6bf58966_72d2d8a4",
        "filename": "libs/binder/IServiceManager.cpp",
        "patchSetId": 28
      },
      "lineNbr": 103,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-06-17T23:06:02Z",
      "side": 1,
      "message": "If this process crashes, we also want the port forwarding to be cleaned up. Is there any way to tell adb this? Please check w/ security team on this if it is a follow-up",
      "parentUuid": "4a93c6db_ea30b731",
      "range": {
        "startLine": 103,
        "startChar": 0,
        "endLine": 103,
        "endChar": 22
      },
      "revId": "b4eff85b7527b1b3166a884398749c7b7c1798cc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "73bb60bd_469c3e0d",
        "filename": "libs/binder/IServiceManager.cpp",
        "patchSetId": 28
      },
      "lineNbr": 103,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-06-17T23:38:12Z",
      "side": 1,
      "message": "Sure, filing b/191409606\n\nBut regardless, ensuring this is cleaned up is a good mitigation, right? Or, what about if I keep no_destroy on the binder object, but delete the DeviceServiceExtra object up on process exit?",
      "parentUuid": "6bf58966_72d2d8a4",
      "range": {
        "startLine": 103,
        "startChar": 0,
        "endLine": 103,
        "endChar": 22
      },
      "revId": "b4eff85b7527b1b3166a884398749c7b7c1798cc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8ad5c349_47e8c671",
        "filename": "libs/binder/IServiceManager.cpp",
        "patchSetId": 28
      },
      "lineNbr": 430,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-06-17T19:35:29Z",
      "side": 1,
      "message": "nit: comment like L66 (there are a lot of these)",
      "revId": "b4eff85b7527b1b3166a884398749c7b7c1798cc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7434696c_66d4c518",
        "filename": "libs/binder/IServiceManager.cpp",
        "patchSetId": 28
      },
      "lineNbr": 436,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-06-17T19:35:29Z",
      "side": 1,
      "message": "this should be on the path",
      "range": {
        "startLine": 436,
        "startChar": 34,
        "endLine": 436,
        "endChar": 46
      },
      "revId": "b4eff85b7527b1b3166a884398749c7b7c1798cc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "075f77c5_f7fb2341",
        "filename": "libs/binder/IServiceManager.cpp",
        "patchSetId": 28
      },
      "lineNbr": 436,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-06-17T22:35:51Z",
      "side": 1,
      "message": "It should, but I think this is clearer.\n\nDo you want me to change it back to servicedispatcher without `/system/bin`? I\u0027ll do that in the next patchset.",
      "parentUuid": "7434696c_66d4c518",
      "range": {
        "startLine": 436,
        "startChar": 34,
        "endLine": 436,
        "endChar": 46
      },
      "revId": "b4eff85b7527b1b3166a884398749c7b7c1798cc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "045675f0_110566a8",
        "filename": "libs/binder/IServiceManager.cpp",
        "patchSetId": 28
      },
      "lineNbr": 436,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-06-17T23:06:02Z",
      "side": 1,
      "message": "Did I ask you to change it the other way? I don\u0027t remember",
      "parentUuid": "075f77c5_f7fb2341",
      "range": {
        "startLine": 436,
        "startChar": 34,
        "endLine": 436,
        "endChar": 46
      },
      "revId": "b4eff85b7527b1b3166a884398749c7b7c1798cc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "940e939a_d04a5659",
        "filename": "libs/binder/IServiceManager.cpp",
        "patchSetId": 28
      },
      "lineNbr": 436,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-06-17T23:38:12Z",
      "side": 1,
      "message": "No I did it myself.",
      "parentUuid": "045675f0_110566a8",
      "range": {
        "startLine": 436,
        "startChar": 34,
        "endLine": 436,
        "endChar": 46
      },
      "revId": "b4eff85b7527b1b3166a884398749c7b7c1798cc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "25049e6a_29200f49",
        "filename": "libs/binder/ServiceManagerHost.cpp",
        "patchSetId": 28
      },
      "lineNbr": 60,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-06-17T19:35:29Z",
      "side": 1,
      "message": "super nit: s/if/while/ (or is that overkill)?",
      "range": {
        "startLine": 60,
        "startChar": 4,
        "endLine": 60,
        "endChar": 6
      },
      "revId": "b4eff85b7527b1b3166a884398749c7b7c1798cc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "834e56f4_450c5d4b",
        "filename": "libs/binder/ServiceManagerHost.cpp",
        "patchSetId": 28
      },
      "lineNbr": 60,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-06-17T22:35:51Z",
      "side": 1,
      "message": "That\u0027s an overkill IMO.\n\nBut maybe I should be using executeResult-\u003estdoutEndsWithNewLine() here?!\n\nEDIT: nah, this is clearer because of L61\n\nEDIT again: actually I should be using android::base::Trim() now that I have libbase",
      "parentUuid": "25049e6a_29200f49",
      "range": {
        "startLine": 60,
        "startChar": 4,
        "endLine": 60,
        "endChar": 6
      },
      "revId": "b4eff85b7527b1b3166a884398749c7b7c1798cc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6d2bd312_680f815a",
        "filename": "libs/binder/ServiceManagerHost.cpp",
        "patchSetId": 28
      },
      "lineNbr": 75,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-06-17T19:35:29Z",
      "side": 1,
      "message": "okay - for Process I understood why you were doing this (that way, the kill/waitpid would get switched to the other process). I was thinking of bringing it up then, because it might be a gotcha.\n\nFor instance:\n\n   Object a \u003d /*create resource 1*/;\n   {\n       Object b \u003d /*create resource 2*/;\n       a \u003d std::move(b); // now a-\u003e2 and b-\u003e1\n       ...\n       // some lines\n       ...\n       // resource 1 is now detroyed by the destructor of a\n   }\n\nThis situation seemed error prone to me, because it appears like we stop caring about resource 1 at the move operation, but it won\u0027t be destroyed until later. However, for the \u0027Process\u0027 case, I thought that would be okay because if you waitpid too early, nothing may actually be killing the child process.\n\nOf course, I understand that your implementation is consistent with the standard, but it seems like in this case and in the Process case, we are really holding onto memory longer than we need to. I feel it would be messy above to rely on the fact during \u0027some lines\u0027 that resource 1 isn\u0027t freed.\n\nI\u0027m curious, do you have any thoughts on this case? Is the only reason to make the implementation easier, since in this case, you don\u0027t have to worry about destroying the object during operator\u003d?",
      "range": {
        "startLine": 75,
        "startChar": 9,
        "endLine": 75,
        "endChar": 13
      },
      "revId": "b4eff85b7527b1b3166a884398749c7b7c1798cc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2f3db2bd_d3683f38",
        "filename": "libs/binder/ServiceManagerHost.cpp",
        "patchSetId": 28
      },
      "lineNbr": 75,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-06-17T22:35:51Z",
      "side": 1,
      "message": "\u003e The only reason to make the implementation easier, since in this case, you don\u0027t have to worry about destroying the object during operator\u003d?\n\nRight, that\u0027s the only reason.\n\nThe other more obvious implementation is to not implement the move operator, but use std::unique_ptr to wrap it instead. I personally think that\u0027s much clearer to read, though it causes a few more memory allocation.\n\nI don\u0027t have a preference for any solution. I am happy to destroy \"this\" here if you think that\u0027s important. (Same for processes above).",
      "parentUuid": "6d2bd312_680f815a",
      "range": {
        "startLine": 75,
        "startChar": 9,
        "endLine": 75,
        "endChar": 13
      },
      "revId": "b4eff85b7527b1b3166a884398749c7b7c1798cc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d6aa5252_5be3593e",
        "filename": "libs/binder/ServiceManagerHost.cpp",
        "patchSetId": 28
      },
      "lineNbr": 75,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-06-17T23:06:02Z",
      "side": 1,
      "message": "I just wanted to make sure I understood. Thanks. If that\u0027s the reason, this sgtm.",
      "parentUuid": "2f3db2bd_d3683f38",
      "range": {
        "startLine": 75,
        "startChar": 9,
        "endLine": 75,
        "endChar": 13
      },
      "revId": "b4eff85b7527b1b3166a884398749c7b7c1798cc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3a17f6c6_83d5fc97",
        "filename": "libs/binder/ServiceManagerHost.cpp",
        "patchSetId": 28
      },
      "lineNbr": 127,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-06-17T19:35:29Z",
      "side": 1,
      "message": "this function should not exist - it is unneeded since it\u0027s the composition of other straightforward APIs",
      "range": {
        "startLine": 127,
        "startChar": 30,
        "endLine": 127,
        "endChar": 51
      },
      "revId": "b4eff85b7527b1b3166a884398749c7b7c1798cc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5e24c321_4bb7b444",
        "filename": "libs/binder/ServiceManagerHost.cpp",
        "patchSetId": 28
      },
      "lineNbr": 127,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-06-17T23:13:50Z",
      "side": 1,
      "message": "I still need it on L116",
      "parentUuid": "3a17f6c6_83d5fc97",
      "range": {
        "startLine": 127,
        "startChar": 30,
        "endLine": 127,
        "endChar": 51
      },
      "revId": "b4eff85b7527b1b3166a884398749c7b7c1798cc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "73c44fe1_734d176b",
        "filename": "libs/binder/ServiceManagerHost.cpp",
        "patchSetId": 28
      },
      "lineNbr": 145,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-06-17T19:35:29Z",
      "side": 1,
      "message": "nit - this is almost an exact duplicate of the logic on L59-L70. This is okay, but I\u0027m curious does it need to be like this?",
      "range": {
        "startLine": 131,
        "startChar": 0,
        "endLine": 145,
        "endChar": 0
      },
      "revId": "b4eff85b7527b1b3166a884398749c7b7c1798cc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a5a59cc9_f7a052d8",
        "filename": "libs/binder/ServiceManagerHost.cpp",
        "patchSetId": 28
      },
      "lineNbr": 145,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-06-17T23:13:50Z",
      "side": 1,
      "message": "Indeed. But they are parsing results of different commands (one for adb, the other for servicedispatcher). They just happen to have the same format.\n\nI\u0027ll refactor it out.",
      "parentUuid": "73c44fe1_734d176b",
      "range": {
        "startLine": 131,
        "startChar": 0,
        "endLine": 145,
        "endChar": 0
      },
      "revId": "b4eff85b7527b1b3166a884398749c7b7c1798cc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "69015636_e21e70fd",
        "filename": "libs/binder/ServiceManagerHost.h",
        "patchSetId": 28
      },
      "lineNbr": 25,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-06-17T19:35:29Z",
      "side": 1,
      "message": "I don\u0027t think we want to expose this as an API (also, if this is the API, it\u0027s a bit strange that you must always specify \u0027adb\u0027 and \u0027shell\u0027 at the beginning, right?)",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 25,
        "endChar": 70
      },
      "revId": "b4eff85b7527b1b3166a884398749c7b7c1798cc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "066b99f0_3e7b2895",
        "filename": "libs/binder/ServiceManagerHost.h",
        "patchSetId": 28
      },
      "lineNbr": 25,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-06-17T23:13:50Z",
      "side": 1,
      "message": "It is not an API; it is in libs/binder/ServiceManagerHost.h, not libs/binder/include",
      "parentUuid": "69015636_e21e70fd",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 25,
        "endChar": 70
      },
      "revId": "b4eff85b7527b1b3166a884398749c7b7c1798cc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bd6189dc_5ff523e2",
        "filename": "libs/binder/ServiceManagerHost.h",
        "patchSetId": 28
      },
      "lineNbr": 29,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-06-17T19:35:29Z",
      "side": 1,
      "message": "reason to use C++17 style for this again?",
      "range": {
        "startLine": 29,
        "startChar": 52,
        "endLine": 29,
        "endChar": 53
      },
      "revId": "b4eff85b7527b1b3166a884398749c7b7c1798cc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "84912de9_86090f9c",
        "filename": "libs/binder/ServiceManagerHost.h",
        "patchSetId": 28
      },
      "lineNbr": 29,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-06-17T23:13:50Z",
      "side": 1,
      "message": "Same as execute():\n\nhttps://android-review.googlesource.com/c/platform/frameworks/native/+/1737083/16/libs/binder/UtilsHost.h#97\n\nI expect caller to do \n\n```\ngetDeviceService({\"adb\", \"shell\", \"servicedispatcher\", \"foo\"})\n```\n\nBut if I use a const reference here, internally I\u0027ll have to make a copy anyway, because I need non-const reference to the string buffer.",
      "parentUuid": "bd6189dc_5ff523e2",
      "range": {
        "startLine": 29,
        "startChar": 52,
        "endLine": 29,
        "endChar": 53
      },
      "revId": "b4eff85b7527b1b3166a884398749c7b7c1798cc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cd54da0b_be925e1f",
        "filename": "libs/binder/include/binder/IServiceManager.h",
        "patchSetId": 28
      },
      "lineNbr": 172,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-06-17T19:35:29Z",
      "side": 1,
      "message": "comment?",
      "revId": "b4eff85b7527b1b3166a884398749c7b7c1798cc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}