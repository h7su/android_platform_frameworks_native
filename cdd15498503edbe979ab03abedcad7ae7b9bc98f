{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e24dd865_62eb5ba2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1956258
      },
      "writtenOn": "2022-11-05T00:51:13Z",
      "side": 1,
      "message": "Follow up CL for changes in aosp/2281010",
      "revId": "cdd15498503edbe979ab03abedcad7ae7b9bc98f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9e657195_83752e71",
        "filename": "libs/binder/rust/tests/parcel_fuzzer/read_utils.rs",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-11-05T00:57:32Z",
      "side": 1,
      "message": "does this need to be specified?",
      "range": {
        "startLine": 60,
        "startChar": 48,
        "endLine": 60,
        "endChar": 50
      },
      "revId": "cdd15498503edbe979ab03abedcad7ae7b9bc98f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5579fa36_df162aec",
        "filename": "libs/binder/rust/tests/parcel_fuzzer/read_utils.rs",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 1956258
      },
      "writtenOn": "2022-11-05T01:00:36Z",
      "side": 1,
      "message": "IIUC, rustc complains about size being unknown at compile time and apparently const can\u0027t be used with vec making allocations.",
      "parentUuid": "9e657195_83752e71",
      "range": {
        "startLine": 60,
        "startChar": 48,
        "endLine": 60,
        "endChar": 50
      },
      "revId": "cdd15498503edbe979ab03abedcad7ae7b9bc98f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4f78a5a1_bd6db0c0",
        "filename": "libs/binder/rust/tests/parcel_fuzzer/read_utils.rs",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 1944400
      },
      "writtenOn": "2022-11-07T19:23:37Z",
      "side": 1,
      "message": "try\n\n```\npub const READ_FUNCS: \u0026[fn(\u0026BorrowedParcel\u003c\u0027_\u003e)] \u003d \u0026[\n```\n\nthat makes it a slice instead of an array. IIUC, the slice is pointing to a const array, but since you don\u0027t need to write down its type anymore, you don\u0027t need to specify the size manually\n\n\n---\n\naside: there is an unstable rust feature that allows you to use `_` in `const` context to have the compiler infer the type for you, then you could do\n\n```\npub const READ_FUNCS: [fn(\u0026BorrowedParcel\u003c\u0027_\u003e); _] \u003d [\n```",
      "parentUuid": "5579fa36_df162aec",
      "range": {
        "startLine": 60,
        "startChar": 48,
        "endLine": 60,
        "endChar": 50
      },
      "revId": "cdd15498503edbe979ab03abedcad7ae7b9bc98f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7901d36f_1d24db80",
        "filename": "libs/binder/rust/tests/parcel_fuzzer/read_utils.rs",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 1956258
      },
      "writtenOn": "2022-11-07T20:08:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4f78a5a1_bd6db0c0",
      "range": {
        "startLine": 60,
        "startChar": 48,
        "endLine": 60,
        "endChar": 50
      },
      "revId": "cdd15498503edbe979ab03abedcad7ae7b9bc98f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}