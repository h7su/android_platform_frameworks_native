{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "70773cae_f4e8ba52",
        "filename": "libs/binder/UtilsHost.cpp",
        "patchSetId": 16
      },
      "lineNbr": 119,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-06-17T19:45:56Z",
      "side": 1,
      "message": "some of these things like this could be dropped w/ the static libbase dep, right?",
      "range": {
        "startLine": 113,
        "startChar": 0,
        "endLine": 119,
        "endChar": 6
      },
      "revId": "ce15ba324aca50c67f1a9bddf8dbcefacb2248e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "92396d56_84b3e105",
        "filename": "libs/binder/UtilsHost.cpp",
        "patchSetId": 16
      },
      "lineNbr": 119,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-06-17T21:09:38Z",
      "side": 1,
      "message": "I think libbase\u0027s ReadFdToString() reads until the buffer is drained, which is not suitable here.",
      "parentUuid": "70773cae_f4e8ba52",
      "range": {
        "startLine": 113,
        "startChar": 0,
        "endLine": 119,
        "endChar": 6
      },
      "revId": "ce15ba324aca50c67f1a9bddf8dbcefacb2248e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f5b1156c_9f5e3cbf",
        "filename": "libs/binder/UtilsHost.cpp",
        "patchSetId": 16
      },
      "lineNbr": 128,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-06-17T19:45:56Z",
      "side": 1,
      "message": "is \u0027nfds\u0027 the number of fds? is this right?",
      "range": {
        "startLine": 128,
        "startChar": 0,
        "endLine": 128,
        "endChar": 53
      },
      "revId": "ce15ba324aca50c67f1a9bddf8dbcefacb2248e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "18cde279_ad6a34c6",
        "filename": "libs/binder/UtilsHost.cpp",
        "patchSetId": 16
      },
      "lineNbr": 128,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2021-06-17T19:51:54Z",
      "side": 1,
      "message": "select() is weird and actually wants the max fd + 1 (!). (and is also limited to 1024.)\n\nbut the real code review comment here is \"please use poll() instead of select() in new code\".",
      "parentUuid": "f5b1156c_9f5e3cbf",
      "range": {
        "startLine": 128,
        "startChar": 0,
        "endLine": 128,
        "endChar": 53
      },
      "revId": "ce15ba324aca50c67f1a9bddf8dbcefacb2248e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "50037891_519a7333",
        "filename": "libs/binder/UtilsHost.cpp",
        "patchSetId": 16
      },
      "lineNbr": 128,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-06-17T21:09:38Z",
      "side": 1,
      "message": "Yeah, see L134\n\nI\u0027ll change this to poll()",
      "parentUuid": "18cde279_ad6a34c6",
      "range": {
        "startLine": 128,
        "startChar": 0,
        "endLine": 128,
        "endChar": 53
      },
      "revId": "ce15ba324aca50c67f1a9bddf8dbcefacb2248e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6e4efba1_d1326349",
        "filename": "libs/binder/UtilsHost.h",
        "patchSetId": 16
      },
      "lineNbr": 67,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-06-17T19:45:56Z",
      "side": 1,
      "message": "avoid? This is the composition of two other APIs",
      "range": {
        "startLine": 65,
        "startChar": 0,
        "endLine": 67,
        "endChar": 5
      },
      "revId": "ce15ba324aca50c67f1a9bddf8dbcefacb2248e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "46082c1c_752553f4",
        "filename": "libs/binder/UtilsHost.h",
        "patchSetId": 16
      },
      "lineNbr": 67,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-06-17T21:12:37Z",
      "side": 1,
      "message": "This is useful as a predicate to execute() in several cases (see follow up CLs), so I would like to keep it here.\n\nThe code is something like\n\n```\nexecute(..., \u0026CommandResult::stdoutEndsWithNewLine);\n```\n\n... which waits until the subprocess writes a \\n. This is the behavior of servicedispatcher.",
      "parentUuid": "6e4efba1_d1326349",
      "range": {
        "startLine": 65,
        "startChar": 0,
        "endLine": 67,
        "endChar": 5
      },
      "revId": "ce15ba324aca50c67f1a9bddf8dbcefacb2248e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "219b5a58_b8bac240",
        "filename": "libs/binder/UtilsHost.h",
        "patchSetId": 16
      },
      "lineNbr": 97,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-06-17T19:45:56Z",
      "side": 1,
      "message": "I keep commenting on this same thing. What\u0027s up? Am I missing something, that you prefer this style?",
      "range": {
        "startLine": 97,
        "startChar": 69,
        "endLine": 97,
        "endChar": 70
      },
      "revId": "ce15ba324aca50c67f1a9bddf8dbcefacb2248e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "00e88bc4_0fe27ae1",
        "filename": "libs/binder/UtilsHost.h",
        "patchSetId": 16
      },
      "lineNbr": 97,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-06-17T21:12:37Z",
      "side": 1,
      "message": "You miss my comments in the previous CL.\n\nThis needs to be a modifiable buffer because exec() needs char*[]. If this were a const reference, then I\u0027ll always to a copy of the vector.",
      "parentUuid": "219b5a58_b8bac240",
      "range": {
        "startLine": 97,
        "startChar": 69,
        "endLine": 97,
        "endChar": 70
      },
      "revId": "ce15ba324aca50c67f1a9bddf8dbcefacb2248e2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}