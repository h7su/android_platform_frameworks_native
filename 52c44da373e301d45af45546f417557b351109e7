{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "3898d9b7_dd4b967d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-08-26T19:55:38Z",
      "side": 1,
      "message": "wait, so what do we get from doing this exactly? I don\u0027t understand",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 50
      },
      "revId": "52c44da373e301d45af45546f417557b351109e7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "48f63070_a8dc511e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1208973
      },
      "writtenOn": "2021-08-26T20:00:55Z",
      "side": 1,
      "message": "The tests are autogenerated as part of the bindings.  So if anything in the code they are binding changes, if they add more bindings, or potentially if bindgen itself changes, we\u0027ll automatically have a test for that and can detect failures faster.",
      "parentUuid": "3898d9b7_dd4b967d",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 50
      },
      "revId": "52c44da373e301d45af45546f417557b351109e7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "464e658f_04a3169b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-08-26T20:55:44Z",
      "side": 1,
      "message": "do I understand correctly, this is testing to make sure that everything still compiles, since changes to various components might be breaking? Maybe you could add this or your comment in the commit message? Makes sense.",
      "parentUuid": "48f63070_a8dc511e",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 50
      },
      "revId": "52c44da373e301d45af45546f417557b351109e7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "87e836a8_c3ee5105",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1208973
      },
      "writtenOn": "2021-08-26T21:05:18Z",
      "side": 1,
      "message": "Not exactly.  If something doesn\u0027t compile, TreeHugger will presumably catch that.\n\nBindgen\u0027s tests seem to test things such as whether the layout of shared structs are what it expects (since if they were not that would cause major problems).  I think it\u0027s more of an issue when using the same bindings across different architectures, which shouldn\u0027t be a problem for us, but it doesn\u0027t hurt to be safe.  https://github.com/rust-lang/rust-bindgen/issues/1823 gives an example of the sort of tests it generates.",
      "parentUuid": "464e658f_04a3169b",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 50
      },
      "revId": "52c44da373e301d45af45546f417557b351109e7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "97e1360f_9e4ceea8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1115178
      },
      "writtenOn": "2021-08-27T13:20:35Z",
      "side": 1,
      "message": "Yup, layout mismatches would result in undefined behavior at runtime -- the tests verify that the shared struct layouts are as expected.\n\nActual test code is only generated if there are layouts to test, which is why some of these tests don\u0027t actually test anything *right now*. In the future however, if these bindings begin to include structs, then having these test modules already defined ensures we\u0027ll be testing those generated layouts.",
      "parentUuid": "87e836a8_c3ee5105",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 50
      },
      "revId": "52c44da373e301d45af45546f417557b351109e7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}