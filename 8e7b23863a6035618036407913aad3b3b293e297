{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f2524597_f8876dad",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1944400
      },
      "writtenOn": "2023-05-12T21:26:13Z",
      "side": 1,
      "message": "It usually wouldn\u0027t matter because this just determines a minimum version, right?\n\n```\nprotocolVersion \u003d std::min(header.version,\n                           server-\u003emProtocolVersion.value_or(RPC_WIRE_PROTOCOL_VERSION));\n```\n\nBut now I see that if the client supports a high version than the server, then this could be used by the server to opt into a version it doesn\u0027t actually support.",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 13,
        "endChar": 9
      },
      "revId": "8e7b23863a6035618036407913aad3b3b293e297",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f4f5bbae_6ff0d89e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-05-12T22:22:13Z",
      "side": 1,
      "message": "Right. It should still be caught when the RpcServer initializes the corresponding RpcSession, but then you see the error after a client connects.",
      "parentUuid": "f2524597_f8876dad",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 13,
        "endChar": 9
      },
      "revId": "8e7b23863a6035618036407913aad3b3b293e297",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8af5a787_1fcf0642",
        "filename": "libs/binder/trusty/RpcServerTrusty.cpp",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-05-11T23:33:57Z",
      "side": 1,
      "message": "though - Andrei - maybe you could suggest to make this an abort? or a harder error?",
      "range": {
        "startLine": 70,
        "startChar": 5,
        "endLine": 70,
        "endChar": 9
      },
      "revId": "8e7b23863a6035618036407913aad3b3b293e297",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "403ae64e_38924153",
        "filename": "libs/binder/trusty/RpcServerTrusty.cpp",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2023-05-11T23:51:53Z",
      "side": 1,
      "message": "One way would be with `assert`, but those might get removed in release builds.\n\nAnother way would be `LOG_ALWAYS_FATAL_IF`, it works roughly the same on Trusty as on Android.",
      "parentUuid": "8af5a787_1fcf0642",
      "range": {
        "startLine": 70,
        "startChar": 5,
        "endLine": 70,
        "endChar": 9
      },
      "revId": "8e7b23863a6035618036407913aad3b3b293e297",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2cd79c22_4b109c12",
        "filename": "libs/binder/trusty/RpcServerTrusty.cpp",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-05-12T22:41:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "403ae64e_38924153",
      "range": {
        "startLine": 70,
        "startChar": 5,
        "endLine": 70,
        "endChar": 9
      },
      "revId": "8e7b23863a6035618036407913aad3b3b293e297",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}