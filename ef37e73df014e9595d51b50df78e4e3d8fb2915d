{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c3b1e873_4d911523",
        "filename": "libs/binder/Binder.cpp",
        "patchSetId": 15
      },
      "lineNbr": 459,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-05-13T07:30:16Z",
      "side": 1,
      "message": "Steven, because the service is now responsible for the socket() fd, not the accept()-ed fd, the service can no longer know when to shutdown the server.\n\nIn addition, this means that once servicedispatcher sets up the socket fd and call configureRpcServer(), this service can not be configured to listen to another port.\n\nAny suggestions? Some solutions I can think of:\n\n- add another function to IBinder that terminates the RPC thread pool and deletes the RpcServer object\n- If poll() / accept4() reaches some time out, RpcServer::join() will stop joining.\n\netc.",
      "range": {
        "startLine": 456,
        "startChar": 0,
        "endLine": 459,
        "endChar": 5
      },
      "revId": "ef37e73df014e9595d51b50df78e4e3d8fb2915d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d2bf90be_9b91bf0e",
        "filename": "libs/binder/Binder.cpp",
        "patchSetId": 15
      },
      "lineNbr": 459,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-05-13T07:34:38Z",
      "side": 1,
      "message": "In the previous patchset, because the service only handles the accept()ed fd, once the client (host) close()es the fd, the service also receives EOF in the accept()ed fd.\n\nIn the new design, RpcServer::join() keeps accept()-ing fds, so we don\u0027t know when the client (host) is done with it.",
      "parentUuid": "c3b1e873_4d911523",
      "range": {
        "startLine": 456,
        "startChar": 0,
        "endLine": 459,
        "endChar": 5
      },
      "revId": "ef37e73df014e9595d51b50df78e4e3d8fb2915d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}