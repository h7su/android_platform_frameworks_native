{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ddfe188e_3bd9e394",
        "filename": "libs/binder/Binder.cpp",
        "patchSetId": 15
      },
      "lineNbr": 439,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-05-13T16:52:52Z",
      "side": 1,
      "message": "we also need to restrict this based on the caller - must be root + shell",
      "revId": "ef37e73df014e9595d51b50df78e4e3d8fb2915d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0f2f1295_8cbd94f9",
        "filename": "libs/binder/Binder.cpp",
        "patchSetId": 15
      },
      "lineNbr": 439,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-05-14T03:23:16Z",
      "side": 1,
      "message": "How do I get caller information?",
      "parentUuid": "ddfe188e_3bd9e394",
      "revId": "ef37e73df014e9595d51b50df78e4e3d8fb2915d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "042a0e68_e6f95bd2",
        "filename": "libs/binder/Binder.cpp",
        "patchSetId": 15
      },
      "lineNbr": 439,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-05-14T03:54:52Z",
      "side": 1,
      "message": "IPCThreadState::self()-\u003egetCallingUid()",
      "parentUuid": "0f2f1295_8cbd94f9",
      "revId": "ef37e73df014e9595d51b50df78e4e3d8fb2915d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c3b1e873_4d911523",
        "filename": "libs/binder/Binder.cpp",
        "patchSetId": 15
      },
      "lineNbr": 459,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-05-13T07:30:16Z",
      "side": 1,
      "message": "Steven, because the service is now responsible for the socket() fd, not the accept()-ed fd, the service can no longer know when to shutdown the server.\n\nIn addition, this means that once servicedispatcher sets up the socket fd and call configureRpcServer(), this service can not be configured to listen to another port.\n\nAny suggestions? Some solutions I can think of:\n\n- add another function to IBinder that terminates the RPC thread pool and deletes the RpcServer object\n- If poll() / accept4() reaches some time out, RpcServer::join() will stop joining.\n\netc.",
      "range": {
        "startLine": 456,
        "startChar": 0,
        "endLine": 459,
        "endChar": 5
      },
      "revId": "ef37e73df014e9595d51b50df78e4e3d8fb2915d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d2bf90be_9b91bf0e",
        "filename": "libs/binder/Binder.cpp",
        "patchSetId": 15
      },
      "lineNbr": 459,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-05-13T07:34:38Z",
      "side": 1,
      "message": "In the previous patchset, because the service only handles the accept()ed fd, once the client (host) close()es the fd, the service also receives EOF in the accept()ed fd.\n\nIn the new design, RpcServer::join() keeps accept()-ing fds, so we don\u0027t know when the client (host) is done with it.",
      "parentUuid": "c3b1e873_4d911523",
      "range": {
        "startLine": 456,
        "startChar": 0,
        "endLine": 459,
        "endChar": 5
      },
      "revId": "ef37e73df014e9595d51b50df78e4e3d8fb2915d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1ba32e33_4e8af79b",
        "filename": "libs/binder/Binder.cpp",
        "patchSetId": 15
      },
      "lineNbr": 459,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-05-13T16:52:52Z",
      "side": 1,
      "message": "\u003e add another function to IBinder that terminates the RPC thread pool and deletes the RpcServer object\n\nI like this option.",
      "parentUuid": "d2bf90be_9b91bf0e",
      "range": {
        "startLine": 456,
        "startChar": 0,
        "endLine": 459,
        "endChar": 5
      },
      "revId": "ef37e73df014e9595d51b50df78e4e3d8fb2915d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "42dc1fb9_ba56e175",
        "filename": "libs/binder/Binder.cpp",
        "patchSetId": 15
      },
      "lineNbr": 459,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-05-13T23:50:33Z",
      "side": 1,
      "message": "There\u0027s another decision to make. How should the host tell the service to terminate the thread pool? Some options:\n\n- call servicedispatcher again after the host finishes using it\n- keep the servicedispatcher alive until the host is done with using the service. If adb shell disconnects, servicedispatcher dies, and the service can somehow detect this and terminates the thread pool. This can be done by servicedispatcher sending a pipe() fd to the service and ask the service to monitor it.",
      "parentUuid": "1ba32e33_4e8af79b",
      "range": {
        "startLine": 456,
        "startChar": 0,
        "endLine": 459,
        "endChar": 5
      },
      "revId": "ef37e73df014e9595d51b50df78e4e3d8fb2915d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c573a3b2_ae4d7d2d",
        "filename": "libs/binder/Binder.cpp",
        "patchSetId": 15
      },
      "lineNbr": 459,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-05-13T23:55:55Z",
      "side": 1,
      "message": "RpcSession-\u003eshutdown should do it. We could also potentially attach this to the root object lifetime.\n\nThe API might look like (you could add in binder/ServiceManagement.h):\n\n     /**\n      * WARNING: debug build only, not user! Will return nullptr!\n      *\n      * If non-null, the root object of the session will be the service.\n      */\n     sp\u003cRpcSession\u003e getDebugDeviceRpcConnection(const std::string\u0026 serviceName);\n\nOpen question: how to handle multiple simultaneous calls to the API",
      "parentUuid": "42dc1fb9_ba56e175",
      "range": {
        "startLine": 456,
        "startChar": 0,
        "endLine": 459,
        "endChar": 5
      },
      "revId": "ef37e73df014e9595d51b50df78e4e3d8fb2915d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9526e5c1_a77fb531",
        "filename": "libs/binder/Binder.cpp",
        "patchSetId": 15
      },
      "lineNbr": 459,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-05-14T03:23:16Z",
      "side": 1,
      "message": "This still needs work, but I think it can be in a follow-up CL.",
      "parentUuid": "c573a3b2_ae4d7d2d",
      "range": {
        "startLine": 456,
        "startChar": 0,
        "endLine": 459,
        "endChar": 5
      },
      "revId": "ef37e73df014e9595d51b50df78e4e3d8fb2915d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e51139f2_8c81dd34",
        "filename": "libs/binder/RpcJoinThread.cpp",
        "patchSetId": 15
      },
      "lineNbr": 74,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-05-13T16:27:06Z",
      "side": 1,
      "message": "should there also be a command on binders to shutdown their server threads?",
      "range": {
        "startLine": 74,
        "startChar": 0,
        "endLine": 74,
        "endChar": 26
      },
      "revId": "ef37e73df014e9595d51b50df78e4e3d8fb2915d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a8626fef_e8c02b00",
        "filename": "libs/binder/RpcJoinThread.cpp",
        "patchSetId": 15
      },
      "lineNbr": 74,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-05-14T03:23:16Z",
      "side": 1,
      "message": "Yes -- maybe in a follow up CL?",
      "parentUuid": "e51139f2_8c81dd34",
      "range": {
        "startLine": 74,
        "startChar": 0,
        "endLine": 74,
        "endChar": 26
      },
      "revId": "ef37e73df014e9595d51b50df78e4e3d8fb2915d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "21b8dcc4_3efcc659",
        "filename": "libs/binder/RpcJoinThread.h",
        "patchSetId": 15
      },
      "lineNbr": 25,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-05-13T16:27:06Z",
      "side": 1,
      "message": "can we avoid this class in a separate file? or rename to RpcDevJoinThread, so it\u0027s specific to this use? Most people running an RpcServer should be creating their own thread (and it\u0027s internal). We want to prevent too much logic getting added here.",
      "range": {
        "startLine": 25,
        "startChar": 0,
        "endLine": 25,
        "endChar": 22
      },
      "revId": "ef37e73df014e9595d51b50df78e4e3d8fb2915d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "88e39b19_8ff8abb5",
        "filename": "libs/binder/RpcJoinThread.h",
        "patchSetId": 15
      },
      "lineNbr": 35,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-05-13T16:27:06Z",
      "side": 1,
      "message": "prefer to expose RpcServer object rather than this? that will be easier to use elsewhere?",
      "range": {
        "startLine": 34,
        "startChar": 0,
        "endLine": 35,
        "endChar": 45
      },
      "revId": "ef37e73df014e9595d51b50df78e4e3d8fb2915d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e474758_a74a3363",
        "filename": "libs/binder/include/binder/IBinder.h",
        "patchSetId": 15
      },
      "lineNbr": 160,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-05-13T16:27:06Z",
      "side": 1,
      "message": "should we pull the thread count from ProcessState?",
      "range": {
        "startLine": 160,
        "startChar": 0,
        "endLine": 160,
        "endChar": 76
      },
      "revId": "ef37e73df014e9595d51b50df78e4e3d8fb2915d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d2f1cbd7_5a3d0ad2",
        "filename": "libs/binder/include/binder/IBinder.h",
        "patchSetId": 15
      },
      "lineNbr": 160,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-05-13T16:27:06Z",
      "side": 1,
      "message": "you can remove this (sounds like 1 thread isn\u0027t okay)",
      "range": {
        "startLine": 160,
        "startChar": 40,
        "endLine": 160,
        "endChar": 75
      },
      "revId": "ef37e73df014e9595d51b50df78e4e3d8fb2915d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8a0c4b10_1a001f63",
        "filename": "libs/binder/include/binder/IBinder.h",
        "patchSetId": 15
      },
      "lineNbr": 164,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-05-13T16:27:06Z",
      "side": 1,
      "message": "what would the second calls do? should we have separate calls?",
      "range": {
        "startLine": 163,
        "startChar": 50,
        "endLine": 164,
        "endChar": 62
      },
      "revId": "ef37e73df014e9595d51b50df78e4e3d8fb2915d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ffbf45e6_f68f4ae7",
        "filename": "libs/binder/include/binder/IBinder.h",
        "patchSetId": 15
      },
      "lineNbr": 164,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-05-14T03:23:16Z",
      "side": 1,
      "message": "If the client needs more / less threads after it is configured, it is still possible to adjust this number.\n\nI am okay with having separate calls.",
      "parentUuid": "8a0c4b10_1a001f63",
      "range": {
        "startLine": 163,
        "startChar": 50,
        "endLine": 164,
        "endChar": 62
      },
      "revId": "ef37e73df014e9595d51b50df78e4e3d8fb2915d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}