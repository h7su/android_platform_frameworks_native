{
  "comments": [
    {
      "key": {
        "uuid": "397c5aa9_4665d336",
        "filename": "services/inputflinger/tests/fuzzers/Android.bp",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 1133258
      },
      "writtenOn": "2020-05-19T01:38:36Z",
      "side": 1,
      "message": "Whitespace..",
      "range": {
        "startLine": 28,
        "startChar": 6,
        "endLine": 28,
        "endChar": 9
      },
      "revId": "fad26a1bf1289b7eb4179d829869b760e1f789b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "76d65a48_8c469bc5",
        "filename": "services/inputflinger/tests/fuzzers/Android.bp",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 1680610
      },
      "writtenOn": "2020-06-08T22:12:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "397c5aa9_4665d336",
      "range": {
        "startLine": 28,
        "startChar": 6,
        "endLine": 28,
        "endChar": 9
      },
      "revId": "fad26a1bf1289b7eb4179d829869b760e1f789b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9003eaaa_16213fd6",
        "filename": "services/inputflinger/tests/fuzzers/include/fuzzTestInputListener.h",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1006497
      },
      "writtenOn": "2020-05-19T13:01:29Z",
      "side": 1,
      "message": "nit: Filename should be FuzzTestInputListener or ideally TestInputListener (since we\u0027re already in the fuzzer directory)",
      "revId": "fad26a1bf1289b7eb4179d829869b760e1f789b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "04429c59_cbdf295e",
        "filename": "services/inputflinger/tests/fuzzers/include/fuzzTestInputListener.h",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1680610
      },
      "writtenOn": "2020-06-08T22:12:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9003eaaa_16213fd6",
      "revId": "fad26a1bf1289b7eb4179d829869b760e1f789b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7d540ef3_a0195101",
        "filename": "services/inputflinger/tests/fuzzers/include/fuzzTestInputListener.h",
        "patchSetId": 1
      },
      "lineNbr": 2,
      "author": {
        "id": 1133258
      },
      "writtenOn": "2020-05-19T01:38:36Z",
      "side": 1,
      "message": "2020",
      "range": {
        "startLine": 2,
        "startChar": 17,
        "endLine": 2,
        "endChar": 22
      },
      "revId": "fad26a1bf1289b7eb4179d829869b760e1f789b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "40386f8f_ce601567",
        "filename": "services/inputflinger/tests/fuzzers/include/fuzzTestInputListener.h",
        "patchSetId": 1
      },
      "lineNbr": 2,
      "author": {
        "id": 1680610
      },
      "writtenOn": "2020-06-08T22:12:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7d540ef3_a0195101",
      "range": {
        "startLine": 2,
        "startChar": 17,
        "endLine": 2,
        "endChar": 22
      },
      "revId": "fad26a1bf1289b7eb4179d829869b760e1f789b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e5655f08_dbfc662c",
        "filename": "services/inputflinger/tests/fuzzers/include/fuzzTestInputListener.h",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1006497
      },
      "writtenOn": "2020-05-19T13:01:29Z",
      "side": 1,
      "message": "Can we figure out how to share the existing TestInputListener rather than creating a copy for each kind of test?",
      "revId": "fad26a1bf1289b7eb4179d829869b760e1f789b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d40e3866_222b5323",
        "filename": "services/inputflinger/tests/fuzzers/include/fuzzTestInputListener.h",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1353865
      },
      "writtenOn": "2020-06-10T19:08:09Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "e5655f08_dbfc662c",
      "revId": "fad26a1bf1289b7eb4179d829869b760e1f789b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d137c3ab_5041df25",
        "filename": "services/inputflinger/tests/fuzzers/include/fuzzTestInputListener.h",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1728946
      },
      "writtenOn": "2020-07-18T00:14:32Z",
      "side": 1,
      "message": "So the reason we had to split out our own TestInputListener was due to gtest not compiling for arm64 on macOS: if the tests themselves were split out then we could use those headers and ours could be deleted; however that is outside the scope of our current project. Happy to help resolve it though.",
      "parentUuid": "d40e3866_222b5323",
      "revId": "fad26a1bf1289b7eb4179d829869b760e1f789b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2193766e_524402c3",
        "filename": "services/inputflinger/tests/fuzzers/inputMapperFuzzers/Android.bp",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1006497
      },
      "writtenOn": "2020-05-19T13:01:29Z",
      "side": 1,
      "message": "nit: directory should be services/inputflinger/tests/fuzzers/mappers\n\nNo need to repeat things that are already in the directory path.",
      "revId": "fad26a1bf1289b7eb4179d829869b760e1f789b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "517c3e85_b9a24793",
        "filename": "services/inputflinger/tests/fuzzers/inputMapperFuzzers/Android.bp",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1680610
      },
      "writtenOn": "2020-06-08T22:12:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2193766e_524402c3",
      "revId": "fad26a1bf1289b7eb4179d829869b760e1f789b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b8947e84_e5751ca1",
        "filename": "services/inputflinger/tests/fuzzers/inputMapperFuzzers/Android.bp",
        "patchSetId": 1
      },
      "lineNbr": 2,
      "author": {
        "id": 1006497
      },
      "writtenOn": "2020-05-19T13:01:29Z",
      "side": 1,
      "message": "nit: inputflinger_mapper_fuzz_defaults\n\nF is not capitalized in inputflinger and there\u0027s no need to repeat input",
      "range": {
        "startLine": 2,
        "startChar": 11,
        "endLine": 2,
        "endChar": 49
      },
      "revId": "fad26a1bf1289b7eb4179d829869b760e1f789b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8e57f497_64905f45",
        "filename": "services/inputflinger/tests/fuzzers/inputMapperFuzzers/Android.bp",
        "patchSetId": 1
      },
      "lineNbr": 2,
      "author": {
        "id": 1680610
      },
      "writtenOn": "2020-06-08T22:12:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b8947e84_e5751ca1",
      "range": {
        "startLine": 2,
        "startChar": 11,
        "endLine": 2,
        "endChar": 49
      },
      "revId": "fad26a1bf1289b7eb4179d829869b760e1f789b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "72ab7bf1_8283b6dc",
        "filename": "services/inputflinger/tests/fuzzers/inputMapperFuzzers/cursorInputFuzzer/Android.bp",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1006497
      },
      "writtenOn": "2020-05-19T13:01:29Z",
      "side": 1,
      "message": "Do we really need to put each in a different directory? Ideally we\u0027d have one directory for input mappers and then one file for each type of mapper. So cursors tests should all be in\n\n  services/inputflinger/tests/fuzzers/mappers/CursorInputMapper_fuzzer.cpp\n\nAlso, nit: file names should always be UpperCamelCase (i.e. CursorInputFuzzer, not cursorInputFuzzer)",
      "revId": "fad26a1bf1289b7eb4179d829869b760e1f789b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "809aab80_a8698e1f",
        "filename": "services/inputflinger/tests/fuzzers/inputMapperFuzzers/cursorInputFuzzer/Android.bp",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1680610
      },
      "writtenOn": "2020-06-08T22:12:29Z",
      "side": 1,
      "message": "Moved fuzzers to all be placed in their buckets (mappers, inputClassifier, etc), and renamed to UpperCamelCase",
      "parentUuid": "72ab7bf1_8283b6dc",
      "revId": "fad26a1bf1289b7eb4179d829869b760e1f789b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2630c2d4_9db64c9e",
        "filename": "services/inputflinger/tests/fuzzers/inputMapperFuzzers/cursorInputFuzzer/cursorInputFuzzer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1133258
      },
      "writtenOn": "2020-05-19T01:38:36Z",
      "side": 1,
      "message": "Please use google test libs instead. like test class and TEST_F?",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 24,
        "endChar": 26
      },
      "revId": "fad26a1bf1289b7eb4179d829869b760e1f789b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "db673b60_ea9c563a",
        "filename": "services/inputflinger/tests/fuzzers/inputMapperFuzzers/cursorInputFuzzer/cursorInputFuzzer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1680610
      },
      "writtenOn": "2020-06-08T22:12:29Z",
      "side": 1,
      "message": "Not quite sure I understand. This function is required by libfuzzer, and run by ClusterFuzz, it is not a specific test case.",
      "parentUuid": "2630c2d4_9db64c9e",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 24,
        "endChar": 26
      },
      "revId": "fad26a1bf1289b7eb4179d829869b760e1f789b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ea454b1c_ffbedad6",
        "filename": "services/inputflinger/tests/fuzzers/inputMapperFuzzers/cursorInputFuzzer/cursorInputFuzzer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1353865
      },
      "writtenOn": "2020-06-10T19:08:09Z",
      "side": 1,
      "message": "@Linxhao, this method implements a fuzz target based on libfuzzer fuzzing engine (refer to example https://llvm.org/docs/LibFuzzer.html#toy-example).",
      "parentUuid": "db673b60_ea9c563a",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 24,
        "endChar": 26
      },
      "revId": "fad26a1bf1289b7eb4179d829869b760e1f789b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "72e8fd81_094d6adc",
        "filename": "services/inputflinger/tests/fuzzers/inputMapperFuzzers/cursorInputFuzzer/cursorInputFuzzer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 1133258
      },
      "writtenOn": "2020-05-19T01:38:36Z",
      "side": 1,
      "message": "Use Mock PointerController.",
      "range": {
        "startLine": 75,
        "startChar": 4,
        "endLine": 75,
        "endChar": 26
      },
      "revId": "fad26a1bf1289b7eb4179d829869b760e1f789b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f01c22c1_df2c106c",
        "filename": "services/inputflinger/tests/fuzzers/inputMapperFuzzers/cursorInputFuzzer/cursorInputFuzzer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 1006497
      },
      "writtenOn": "2020-05-19T13:01:29Z",
      "side": 1,
      "message": "Using FakePointerController is fine, it already exists for testing purposes.",
      "parentUuid": "72e8fd81_094d6adc",
      "range": {
        "startLine": 75,
        "startChar": 4,
        "endLine": 75,
        "endChar": 26
      },
      "revId": "fad26a1bf1289b7eb4179d829869b760e1f789b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "191edb65_3aeb23ce",
        "filename": "services/inputflinger/tests/fuzzers/inputMapperFuzzers/cursorInputFuzzer2/cursorInputFuzzer2.cpp",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1006497
      },
      "writtenOn": "2020-05-19T13:01:29Z",
      "side": 1,
      "message": "Is there any reason to put this in a second file? Can all tests for a given item live in the same file?",
      "revId": "fad26a1bf1289b7eb4179d829869b760e1f789b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fb712edf_abdc4f7b",
        "filename": "services/inputflinger/tests/fuzzers/inputMapperFuzzers/cursorInputFuzzer2/cursorInputFuzzer2.cpp",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1680610
      },
      "writtenOn": "2020-06-08T22:12:29Z",
      "side": 1,
      "message": "As the fuzzers are independent (not test cases), they are compiled into separate binaries to run with CF.",
      "parentUuid": "191edb65_3aeb23ce",
      "revId": "fad26a1bf1289b7eb4179d829869b760e1f789b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1de51708_d8616082",
        "filename": "services/inputflinger/tests/fuzzers/inputMapperFuzzers/cursorInputFuzzer2/cursorInputFuzzer2.cpp",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1353865
      },
      "writtenOn": "2020-06-10T19:08:09Z",
      "side": 1,
      "message": "As Mike mentioned, these tests have to be in their own files (for reference on libfuzzer, see https://github.com/google/fuzzing/blob/master/tutorial/libFuzzerTutorial.md)",
      "parentUuid": "fb712edf_abdc4f7b",
      "revId": "fad26a1bf1289b7eb4179d829869b760e1f789b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6a31c340_66fe32c5",
        "filename": "services/inputflinger/tests/fuzzers/inputMapperFuzzers/cursorInputFuzzer2/cursorInputFuzzer2.cpp",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1133258
      },
      "writtenOn": "2020-05-19T01:38:36Z",
      "side": 1,
      "message": "Use parameterized TEST_P.",
      "range": {
        "startLine": 24,
        "startChar": 37,
        "endLine": 24,
        "endChar": 65
      },
      "revId": "fad26a1bf1289b7eb4179d829869b760e1f789b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f5a5d6ec_4682e974",
        "filename": "services/inputflinger/tests/fuzzers/inputMapperFuzzers/cursorInputFuzzer2/cursorInputFuzzer2.cpp",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1680610
      },
      "writtenOn": "2020-06-08T22:12:29Z",
      "side": 1,
      "message": "Similarly to the other comment, I\u0027m not quite sure I understand. This function is required by libfuzzer, and run by ClusterFuzz, it is not a specific test case.",
      "parentUuid": "6a31c340_66fe32c5",
      "range": {
        "startLine": 24,
        "startChar": 37,
        "endLine": 24,
        "endChar": 65
      },
      "revId": "fad26a1bf1289b7eb4179d829869b760e1f789b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d933649a_59ef67a5",
        "filename": "services/inputflinger/tests/fuzzers/inputMapperFuzzers/cursorInputFuzzer2/cursorInputFuzzer2.cpp",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1353865
      },
      "writtenOn": "2020-06-10T19:08:09Z",
      "side": 1,
      "message": "See other comment.",
      "parentUuid": "f5a5d6ec_4682e974",
      "range": {
        "startLine": 24,
        "startChar": 37,
        "endLine": 24,
        "endChar": 65
      },
      "revId": "fad26a1bf1289b7eb4179d829869b760e1f789b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e61b4b44_284423b8",
        "filename": "services/inputflinger/tests/fuzzers/inputMapperFuzzers/cursorInputFuzzer2/cursorInputFuzzer2.cpp",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1006497
      },
      "writtenOn": "2020-05-19T13:01:29Z",
      "side": 1,
      "message": "nit: prefer sized types over unsized types\n\n  const int32_t DEVICE_ID \u003d tester.ConsumeIntegralInRange\u003cint32_t\u003e(0, 5);\n\nHere and everywhere else.",
      "range": {
        "startLine": 31,
        "startChar": 60,
        "endLine": 31,
        "endChar": 63
      },
      "revId": "fad26a1bf1289b7eb4179d829869b760e1f789b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bdc4cdda_a13e6d63",
        "filename": "services/inputflinger/tests/fuzzers/inputMapperFuzzers/cursorInputFuzzer2/cursorInputFuzzer2.cpp",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 1680610
      },
      "writtenOn": "2020-06-08T22:12:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e61b4b44_284423b8",
      "range": {
        "startLine": 31,
        "startChar": 60,
        "endLine": 31,
        "endChar": 63
      },
      "revId": "fad26a1bf1289b7eb4179d829869b760e1f789b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7b53b8d0_093ca239",
        "filename": "services/inputflinger/tests/fuzzers/inputMapperFuzzers/cursorInputFuzzer2/cursorInputFuzzer2.cpp",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 1006497
      },
      "writtenOn": "2020-05-19T13:01:29Z",
      "side": 1,
      "message": "nit: don\u0027t mix unsigned and signed types\n\n  const uint32_t DEVICE_CLASSES \u003d tester.ConsumeIntegralInRange\u003cuint32_t\u003e(0, 5);",
      "revId": "fad26a1bf1289b7eb4179d829869b760e1f789b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8b86f93d_85a7669c",
        "filename": "services/inputflinger/tests/fuzzers/inputMapperFuzzers/cursorInputFuzzer2/cursorInputFuzzer2.cpp",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 1680610
      },
      "writtenOn": "2020-06-08T22:12:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7b53b8d0_093ca239",
      "revId": "fad26a1bf1289b7eb4179d829869b760e1f789b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "50072cc8_0080f9cf",
        "filename": "services/inputflinger/tests/fuzzers/inputMapperFuzzers/cursorInputFuzzer2/cursorInputFuzzer2.cpp",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 1006497
      },
      "writtenOn": "2020-05-19T13:01:29Z",
      "side": 1,
      "message": "Don\u0027t use raw pointers unless necessary. Prefer std::unique_ptr, then std::shared_ptr, then sp\u003c\u003e. \n\nSo here should be:\n\n    auto device \u003d std::make_unique\u003cInputDevice\u003e(mFakeContext, DEVICE_ID, DEVICE_GENERATION,\n                                                DEVICE_CONTROLLER_NUMBER, identifier,\n                                                DEVICE_CLASSES);\n\nDitto for all other places where a raw pointer is used.",
      "revId": "fad26a1bf1289b7eb4179d829869b760e1f789b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b8c63ad3_c672a24b",
        "filename": "services/inputflinger/tests/fuzzers/inputMapperFuzzers/cursorInputFuzzer2/cursorInputFuzzer2.cpp",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 1353865
      },
      "writtenOn": "2020-06-10T19:08:09Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "50072cc8_0080f9cf",
      "revId": "fad26a1bf1289b7eb4179d829869b760e1f789b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e4f77ba7_7bfd9c46",
        "filename": "services/inputflinger/tests/fuzzers/inputMapperFuzzers/cursorInputFuzzer2/cursorInputFuzzer2.cpp",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 1006497
      },
      "writtenOn": "2020-05-19T13:01:29Z",
      "side": 1,
      "message": "Seems like all of the above should be moved into SetUp once you\u0027ve moved to parameterized tests. Right now there\u0027s a lot of duplication between InputMapperTest and the setup code here.",
      "revId": "fad26a1bf1289b7eb4179d829869b760e1f789b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a0247afd_05b8542e",
        "filename": "services/inputflinger/tests/fuzzers/inputMapperFuzzers/cursorInputFuzzer2/cursorInputFuzzer2.cpp",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 1353865
      },
      "writtenOn": "2020-06-10T19:08:09Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "e4f77ba7_7bfd9c46",
      "revId": "fad26a1bf1289b7eb4179d829869b760e1f789b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e34fedc_e4f8d9e1",
        "filename": "services/inputflinger/tests/fuzzers/inputMapperFuzzers/cursorInputFuzzer2/cursorInputFuzzer2.cpp",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 1728946
      },
      "writtenOn": "2020-07-18T00:14:32Z",
      "side": 1,
      "message": "I believe we\u0027ve gotten these",
      "parentUuid": "a0247afd_05b8542e",
      "revId": "fad26a1bf1289b7eb4179d829869b760e1f789b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aa02477a_4e0973fc",
        "filename": "services/inputflinger/tests/fuzzers/inputMapperFuzzers/cursorInputFuzzer2/cursorInputFuzzer2.cpp",
        "patchSetId": 1
      },
      "lineNbr": 86,
      "author": {
        "id": 1006497
      },
      "writtenOn": "2020-05-19T13:01:29Z",
      "side": 1,
      "message": "Can we split these out to actually be separate tests?\n\nBasically any time you\u0027re creating a new mapper seems like a good signal that it should be in another test since we\u0027re probably fuzzing different functionality.",
      "revId": "fad26a1bf1289b7eb4179d829869b760e1f789b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7bce7172_2f6e8d88",
        "filename": "services/inputflinger/tests/fuzzers/inputMapperFuzzers/cursorInputFuzzer2/cursorInputFuzzer2.cpp",
        "patchSetId": 1
      },
      "lineNbr": 86,
      "author": {
        "id": 1353865
      },
      "writtenOn": "2020-06-10T19:08:09Z",
      "side": 1,
      "message": "This is a good point. There are pros and cons for breaking the test into multiple tests. The pros is that the test is faster. But one important con is that the interaction between the different calls can lead to a more interesting fuzzing and deeper code penetration/coverage.",
      "parentUuid": "aa02477a_4e0973fc",
      "revId": "fad26a1bf1289b7eb4179d829869b760e1f789b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "829d80a2_7762a6b9",
        "filename": "services/inputflinger/tests/fuzzers/inputMapperFuzzers/cursorInputFuzzer2/cursorInputFuzzer2.cpp",
        "patchSetId": 1
      },
      "lineNbr": 86,
      "author": {
        "id": 1728946
      },
      "writtenOn": "2020-07-18T00:14:32Z",
      "side": 1,
      "message": "I prefer to have a high level of \"chaos\" in fuzzers, as it helps reach edge cases (Whether vulnerabilities or plain bugs) much quicker and in completely unintended ways; however there is some validity to having smaller fuzzers too. We could make it a todo?",
      "parentUuid": "7bce7172_2f6e8d88",
      "revId": "fad26a1bf1289b7eb4179d829869b760e1f789b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b5347456_9c20ad9f",
        "filename": "services/inputflinger/tests/fuzzers/inputMapperFuzzers/include/inputReaderHelperClasses.h",
        "patchSetId": 1
      },
      "lineNbr": 59,
      "author": {
        "id": 1006497
      },
      "writtenOn": "2020-05-19T13:01:29Z",
      "side": 1,
      "message": "Let\u0027s move all of the fakes to their own library so they can be shared among the tests (i.e. the unit tests should use the same implementation of FakePointerController as cursor fuzzer tests and the keyboard fuzzer tests). That way we don\u0027t have multiple copies of the same class, which are liable to get out of sync.\n\nI recommend you do this in separate CL before adding the fuzzer tests; that way it\u0027s easier to review.",
      "revId": "fad26a1bf1289b7eb4179d829869b760e1f789b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "284167cf_ccd17ff3",
        "filename": "services/inputflinger/tests/fuzzers/inputMapperFuzzers/include/inputReaderHelperClasses.h",
        "patchSetId": 1
      },
      "lineNbr": 59,
      "author": {
        "id": 1353865
      },
      "writtenOn": "2020-06-10T19:08:09Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "b5347456_9c20ad9f",
      "revId": "fad26a1bf1289b7eb4179d829869b760e1f789b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ef670e97_bd642942",
        "filename": "services/inputflinger/tests/fuzzers/inputMapperFuzzers/include/inputReaderHelperClasses.h",
        "patchSetId": 1
      },
      "lineNbr": 59,
      "author": {
        "id": 1728946
      },
      "writtenOn": "2020-07-18T00:14:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "284167cf_ccd17ff3",
      "revId": "fad26a1bf1289b7eb4179d829869b760e1f789b4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}