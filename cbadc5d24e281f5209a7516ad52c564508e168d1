{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "3ee59fdb_a5c1a62f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 15
      },
      "lineNbr": 0,
      "author": {
        "id": 1644679
      },
      "writtenOn": "2023-10-27T20:23:27Z",
      "side": 1,
      "message": "@jreck@google.com @mathias@google.com do either of you know what needs to happen with the `-next` release configuration here? It doesn\u0027t build in aosp (can\u0027t even lunch to it). It\u0027s failing to build in presubmits here saying the ABI diffs need to be updated:https://android-build.corp.google.com/artifact/pending/P64670390/aosp_cf_x86_64_only_phone-next-userdebug/latest/view/logs%2Fbuild_error.log",
      "revId": "cbadc5d24e281f5209a7516ad52c564508e168d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d4bb3605_64c41618",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 15
      },
      "lineNbr": 0,
      "author": {
        "id": 1644679
      },
      "writtenOn": "2023-10-27T20:34:35Z",
      "side": 1,
      "message": "Maybe it should be @maennich@google.com. Adding @hsinyichen@google.com in case they know what\u0027s going on with `-next` abi diffs internally. Created b/308192597 for this.",
      "parentUuid": "3ee59fdb_a5c1a62f",
      "revId": "cbadc5d24e281f5209a7516ad52c564508e168d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "54437923_6ddc0fae",
        "filename": "libs/binder/ndk/include_ndk/android/persistable_bundle.h",
        "patchSetId": 15
      },
      "lineNbr": 23,
      "author": {
        "id": 1010103
      },
      "writtenOn": "2023-10-27T20:44:33Z",
      "side": 1,
      "message": "can we get a top-level doc on what this is \u0026 why you\u0027d use it? Something like what\u0027s on https://developer.android.com/reference/android/os/PersistableBundle",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 23,
        "endChar": 53
      },
      "revId": "cbadc5d24e281f5209a7516ad52c564508e168d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cbd51a34_c2631ea0",
        "filename": "libs/binder/ndk/include_ndk/android/persistable_bundle.h",
        "patchSetId": 15
      },
      "lineNbr": 23,
      "author": {
        "id": 1644679
      },
      "writtenOn": "2023-10-28T01:35:55Z",
      "side": 1,
      "message": "I added something, PTAL. I don\u0027t really know why someone would use this class by itself. \n\nWe are adding it so we can provide an opaque(but inspect-able) vendor object in SDK APIs that can be passed through the framework to HALs through AIDL interfaces. This is needed because of mainlined services and vendor-specific payloads (for Wifi in this case). API council recommended this over adding byte arrays to SDK APIs.\n\nI don\u0027t really want to advertise this pattern so I\u0027m not directly saying that.",
      "parentUuid": "54437923_6ddc0fae",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 23,
        "endChar": 53
      },
      "revId": "cbadc5d24e281f5209a7516ad52c564508e168d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2b35ebd3_cf6a4e29",
        "filename": "libs/binder/ndk/include_ndk/android/persistable_bundle.h",
        "patchSetId": 15
      },
      "lineNbr": 38,
      "author": {
        "id": 1010103
      },
      "writtenOn": "2023-10-27T20:34:14Z",
      "side": 1,
      "message": "this forces copies to happen that don\u0027t in theory need to. Ideally we\u0027d read directly from the underlying parcel into a given char* buffer, whereas this is essentially forcing a temporary heap allocation purely to supply to the callback function (as if it wasn\u0027t temporary we could just return the const char* with a note that the lifecycle is the same as the `APersistableBundle`\u0027s)\n\nAlso https://g3doc.corp.google.com/company/teams/android-api-council/guidelines/ndk.md?cl\u003dhead#callbacks-void\n\nSo do instead something like `char* (*APersistableBundle_stringAllocator)(size_t sizeBytes, void* context)` ?",
      "range": {
        "startLine": 38,
        "startChar": 60,
        "endLine": 38,
        "endChar": 88
      },
      "revId": "cbadc5d24e281f5209a7516ad52c564508e168d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cffec4db_9fa807c3",
        "filename": "libs/binder/ndk/include_ndk/android/persistable_bundle.h",
        "patchSetId": 15
      },
      "lineNbr": 38,
      "author": {
        "id": 1644679
      },
      "writtenOn": "2023-10-28T01:35:55Z",
      "side": 1,
      "message": "Got it, that makes sense! Done.",
      "parentUuid": "2b35ebd3_cf6a4e29",
      "range": {
        "startLine": 38,
        "startChar": 60,
        "endLine": 38,
        "endChar": 88
      },
      "revId": "cbadc5d24e281f5209a7516ad52c564508e168d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d661341c_ff763011",
        "filename": "libs/binder/ndk/include_ndk/android/persistable_bundle.h",
        "patchSetId": 15
      },
      "lineNbr": 135,
      "author": {
        "id": 1010103
      },
      "writtenOn": "2023-10-27T20:44:33Z",
      "side": 1,
      "message": "size_t feels natural but since this is an IPC/persisted object, should all/most of the size_t\u0027s really be int32\u0027s? Also if this really was a size_t / int64\u0027s you\u0027d be able to create an object via the NDK that the SDK wouldn\u0027t be able to handle.",
      "range": {
        "startLine": 135,
        "startChar": 0,
        "endLine": 135,
        "endChar": 6
      },
      "revId": "cbadc5d24e281f5209a7516ad52c564508e168d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e150b42a_fd644078",
        "filename": "libs/binder/ndk/include_ndk/android/persistable_bundle.h",
        "patchSetId": 15
      },
      "lineNbr": 135,
      "author": {
        "id": 1644679
      },
      "writtenOn": "2023-10-28T01:35:55Z",
      "side": 1,
      "message": "\u003e Also if this really was a size_t / int64\u0027s you\u0027d be able to create an object via the NDK that the SDK wouldn\u0027t be able to handle.\n\nIs that because the object is too large? For the framework to handle?\n\nYeah I think int32 would be fine (the use case is over binder so it better be small enough to fit). But the types returned by the underlying C++ `PersistableBundle` are all size_t so we\u0027d have to check and cast everything. I can make that change if you think it\u0027s worth it.",
      "parentUuid": "d661341c_ff763011",
      "range": {
        "startLine": 135,
        "startChar": 0,
        "endLine": 135,
        "endChar": 6
      },
      "revId": "cbadc5d24e281f5209a7516ad52c564508e168d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b5b0aa0_c1c904a3",
        "filename": "libs/binder/ndk/include_ndk/android/persistable_bundle.h",
        "patchSetId": 15
      },
      "lineNbr": 146,
      "author": {
        "id": 1010103
      },
      "writtenOn": "2023-10-27T20:44:33Z",
      "side": 1,
      "message": "are keys not unique? how would this be anything but 0 or 1?",
      "range": {
        "startLine": 146,
        "startChar": 4,
        "endLine": 146,
        "endChar": 35
      },
      "revId": "cbadc5d24e281f5209a7516ad52c564508e168d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "144d2637_bb16bb65",
        "filename": "libs/binder/ndk/include_ndk/android/persistable_bundle.h",
        "patchSetId": 15
      },
      "lineNbr": 146,
      "author": {
        "id": 1644679
      },
      "writtenOn": "2023-10-28T01:35:55Z",
      "side": 1,
      "message": "Yeah, that\u0027s what I saw when testing. The existing C++ API uses size_t and the Java `remove` API doesn\u0027t return anything.\n\nI modified the comment and left the type.",
      "parentUuid": "9b5b0aa0_c1c904a3",
      "range": {
        "startLine": 146,
        "startChar": 4,
        "endLine": 146,
        "endChar": 35
      },
      "revId": "cbadc5d24e281f5209a7516ad52c564508e168d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "01bdeb2c_76bd725f",
        "filename": "libs/binder/ndk/include_ndk/android/persistable_bundle.h",
        "patchSetId": 15
      },
      "lineNbr": 529,
      "author": {
        "id": 1010103
      },
      "writtenOn": "2023-10-27T20:44:33Z",
      "side": 1,
      "message": "clarify that caller takes ownership and must call _delete on the result (just because it\u0027s better to be overly explicit here)",
      "range": {
        "startLine": 528,
        "startChar": 0,
        "endLine": 529,
        "endChar": 46
      },
      "revId": "cbadc5d24e281f5209a7516ad52c564508e168d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "76387d7b_a25168fe",
        "filename": "libs/binder/ndk/include_ndk/android/persistable_bundle.h",
        "patchSetId": 15
      },
      "lineNbr": 529,
      "author": {
        "id": 1644679
      },
      "writtenOn": "2023-10-28T01:35:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "01bdeb2c_76bd725f",
      "range": {
        "startLine": 528,
        "startChar": 0,
        "endLine": 529,
        "endChar": 46
      },
      "revId": "cbadc5d24e281f5209a7516ad52c564508e168d1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}