{
  "comments": [
    {
      "key": {
        "uuid": "234d525a_6b4b5db5",
        "filename": "libs/binder/Blueprints",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 1003981
      },
      "writtenOn": "2015-04-09T22:46:22Z",
      "side": 1,
      "message": "Sorry I didn\u0027t dig into the soong source files yet, but I am wondering:\nSo this builds both static and shared library?\nWill each of .cpp files be compiled only once? or we just define two separate modules they happen to have the same source and flags?",
      "range": {
        "startLine": 40,
        "startChar": 0,
        "endLine": 40,
        "endChar": 10
      },
      "revId": "b69a3455c9f8336878ed1ae636eb984ae87958dc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "234d525a_66aab47e",
        "filename": "libs/binder/Blueprints",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-04-09T22:52:42Z",
      "side": 1,
      "message": "It will create rules to build static and shared libraries as needed.  The shared library will link in the .o files produced by the static library, and the static and shared libraries can also add .o files and cflags that only affect those .o files using static: { srcs: [\"file.c\"], cflags: [\"-DSTATIC\"] }",
      "parentUuid": "234d525a_6b4b5db5",
      "range": {
        "startLine": 40,
        "startChar": 0,
        "endLine": 40,
        "endChar": 10
      },
      "revId": "b69a3455c9f8336878ed1ae636eb984ae87958dc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e356daec_bef665a6",
        "filename": "libs/binder/Blueprints",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 1003981
      },
      "writtenOn": "2015-04-09T23:04:01Z",
      "side": 1,
      "message": "The configuration sounds flexible.\nI am still wondering the meaning of \"create rules as needed\": if the library is never referenced by anyone, will the rule be created when you do a checkbuild?",
      "parentUuid": "234d525a_66aab47e",
      "range": {
        "startLine": 40,
        "startChar": 0,
        "endLine": 40,
        "endChar": 10
      },
      "revId": "b69a3455c9f8336878ed1ae636eb984ae87958dc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "234d525a_464e90c6",
        "filename": "libs/binder/Blueprints",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2015-04-09T23:15:10Z",
      "side": 1,
      "message": "Yes, the build.ninja file will have rules for both, and the checkbuild target has dependencies on both.",
      "parentUuid": "e356daec_bef665a6",
      "range": {
        "startLine": 40,
        "startChar": 0,
        "endLine": 40,
        "endChar": 10
      },
      "revId": "b69a3455c9f8336878ed1ae636eb984ae87958dc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e356daec_fecaadea",
        "filename": "libs/binder/Blueprints",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 1003981
      },
      "writtenOn": "2015-04-09T23:21:21Z",
      "side": 1,
      "message": "Ah, got it. So the rules will be always defined in the ninja file; whereas the module will be built or not is as needed, similar to how the current build system handles multilib build.",
      "parentUuid": "234d525a_464e90c6",
      "range": {
        "startLine": 40,
        "startChar": 0,
        "endLine": 40,
        "endChar": 10
      },
      "revId": "b69a3455c9f8336878ed1ae636eb984ae87958dc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}